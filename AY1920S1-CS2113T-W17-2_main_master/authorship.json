[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \u0027wallet.Main\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    archiveBaseName \u003d \"test\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"1.0\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 1,
      "-": 39
    }
  },
  {
    "path": "src/main/java/wallet/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * The Ui object that handles input and output of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * The TaskList object that handles the list of task added by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private LogicManager logicManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new Main object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        logicManager \u003d new LogicManager();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Execute and run the Duke application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.welcomeMsg();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            String fullCommand \u003d ui.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            isExit \u003d logicManager.execute(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.byeMsg();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 4,
      "A0171206R": 2,
      "-": 38
    }
  },
  {
    "path": "src/main/java/wallet/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.parser.ExpenseParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecordList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method parses the input command of the user and execute the different functions based on the given command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fullCommand The full command input by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList    The current list of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fileIO      The class object that handles file IO"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the command given is bye"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static boolean parse(String fullCommand, TaskList taskList, Storage fileIO,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                                ContactList contactList, RecordList recordList, ExpenseList expenseList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] command \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (command[1].equals(\"task\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(count + \".\" + t.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (command[1].equals(\"contact\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the contacts in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Contact c : contactList.getContactList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(count + \".\" + c.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (command[1].equals(\"expense\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the expenses in your list:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Expense e : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(count + \". \" + e.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                String keyword \u003d command[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(count + \".\" + t.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Please specify a keyword to search for.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                int num \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                Task task \u003d taskList.getTask(num);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                if (task.getStatus()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"This task is already done.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(task.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.modifyTask(num, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    //fileIO.updateToFile(task, num);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but this task does not exist\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"todo\") || command[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                || command[0].equals(\"event\") || command[0].equals(\"dowithin\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"command[1]: \" + command[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                Task task \u003d taskList.createTask(command[0], command[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.addTask(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(task.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    //fileIO.writeToFile(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of \" + command[0] + \" cannot be empty\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                int index \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                taskList.deleteTask(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                //fileIO.removeFromFile(taskList.getTaskList(), index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(task.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but this task does not exist\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Please use input the index of the task to delete\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"contact\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] info \u003d command[1].split(\" \", 3);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                Contact contact \u003d contactList.createContact(info[0], info[1], info[2]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                if (contact !\u003d null) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                    contactList.addContact(contact);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this contact:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(contact.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Now you have \" + contactList.getContactListSize()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" contacts in your contact list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    //TODO: write the updated contactList into a file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of \" + command[0] + \" cannot be empty\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"expense\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                /*Expense expense \u003d ExpenseParser.parseInput(command[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                if (expense !\u003d null) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    expenseList.addExpense(expense);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this expense:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(expense.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    //ExpenseParser.updateRecurringRecords(expenseList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The format of adding expense is \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \"\\\"\\\"\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command[0].equals(\"recurring\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            ArrayList\u003cExpense\u003e recList \u003d ExpenseParser.getRecurringRecords(expenseList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Here are your recurring records: \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Expense e : recList) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(index + \".\" + e.toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 13,
      "matthewng1996": 3,
      "-": 140
    }
  },
  {
    "path": "src/main/java/wallet/logic/LogicManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.parser.ParserManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.parser.ExpenseParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.RecordList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.ScheduleList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.storage.StorageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.reminder.Reminder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The LogicManager Class handles the logic of Wallet."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_COMMAND \u003d \"An error encountered while executing command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ParserManager parserManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static Wallet wallet;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static Reminder reminder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a LogicManager object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public LogicManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.wallet \u003d new Wallet(new BudgetList(storageManager.loadBudget()), new RecordList(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(storageManager.loadExpense()),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(storageManager.loadContact()), new TaskList(storageManager.loadTask()),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ScheduleList(), new LoanList(storageManager.loadLoan()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.parserManager \u003d new ParserManager();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.reminder \u003d new Reminder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fullCommand The full command input by user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean isExit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(String fullCommand) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            Command command \u003d parserManager.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (command !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                isExit \u003d command.execute(wallet);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                ExpenseParser.updateRecurringRecords(wallet);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                storageManager.save(wallet);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the Wallet object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Wallet object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static Wallet getWallet() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return wallet;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the Reminder object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Reminder object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static Reminder getReminder() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return reminder;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void setReminder(Reminder reminder) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.reminder \u003d reminder;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 5,
      "matthewng1996": 2,
      "kyang96": 10,
      "A0171206R": 41,
      "-": 28
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The AddCommand Class which extends Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Usage for add command.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nThe options for recurrence rate (/r) are \\\\\\\"daily, weekly or monthly\\\\\\\"\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \"expense lunch $5 Food /on 20/02/2019\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \"expense phone bills $100 bills /on 10/10/2019 /r monthly\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \"expense dinner $10 Food\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_TASK \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_CONTACT \u003d \"Got it. I\u0027ve added this contact:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_EXPENSE \u003d \"Got it. I\u0027ve added this expense:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_LOAN \u003d \"Got it. I\u0027ve added this loan:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_ADD_EXPENSE \u003d \"Error in format when adding expense.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + MESSAGE_USAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Expense expense \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private Task task \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Contact contact \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Loan loan \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Expense object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expense The Expense Object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Expense expense) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expense \u003d expense;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Task object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param task The Task object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Contract object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The Contract object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Contact contact) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Loan object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public AddCommand(Loan loan) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loan \u003d loan;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Add the Record objects into their respective lists and returns false."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return a boolean variable which indicates"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        if (expense !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            wallet.getExpenseList().addExpense(expense);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getRecordList().addRecord(expense);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_EXPENSE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(expense.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            wallet.getTaskList().addTask(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_TASK);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        if (contact !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            wallet.getContactList().addContact(contact);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_CONTACT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(contact.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (loan !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().addLoan(loan);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getRecordList().addRecord(loan);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_LOAN);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(loan.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 12,
      "A0171206R": 44,
      "-": 47
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a boolean indicating whether the user wants to continue running the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean indicating whether the user wants to continue running the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract boolean execute(Wallet wallet);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 6,
      "-": 8
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * DeleteCommand class handles any command that involves deletion of Record objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_EXPENSE \u003d \"Noted. I\u0027ve removed this expense:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_DELETE_EXPENSE \u003d \"An error occurred when trying to delete expense.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_LOAN \u003d \"Noted. I\u0027ve removed this loan:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_ERROR_DELETE_LOAN \u003d \"An error occurred when trying to delete loan.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private String object;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param object A String object for deletion."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the object in a specified list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public DeleteCommand(String object, int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.object \u003d object;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Deletes the specific Record object and returns false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean which indicates whether program terminates."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (object) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"task\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Task task \u003d wallet.getTaskList().getTask(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getTaskList().deleteTask(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_DELETE_TASK);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense expense \u003d wallet.getExpenseList().deleteExpense(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_DELETE_EXPENSE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(expense.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_ERROR_DELETE_EXPENSE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d wallet.getLoanList().deleteLoan(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_DELETE_LOAN);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(loan.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_ERROR_DELETE_LOAN);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 46,
      "A0171206R": 29
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/DoneCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DoneCommand sets the isSettled attribute in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * the Loan object to be true."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DONE \u003d \"This loan is now settled:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_DONE \u003d \"There is an error in settling the loan.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_NO_SUCH_ID \u003d \"There is no such id in loans!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_ALREADY_DONE \u003d \"The loan has already been settled!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the Loan object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Lists the Record objects in any list and returns false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d wallet.getLoanList().findLoanWithId(id);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (loan.getIsSettled()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_FAILURE_ALREADY_DONE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                loan.setIsSettled(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_FAILURE_NO_SUCH_ID);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().setHasUnsettledLoan(wallet.getLoanList().checkUnsettledLoan());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_DONE + loan.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_FAILURE_DONE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 57
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * EditCommand Class deals with commands that involves"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * in editing a specific object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * in the a specific list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Usage for edit command.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense 2 /a 4.50 /c food /r daily\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense 2 /d lunch /a 9 /c Food /r no\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_EDIT_EXPENSE \u003d \"Successfully edited this expense:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_SUCCESS_EDIT_CONTACT \u003d \"Successfully edited this contact:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private Expense expense;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private Contact contact;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs the EditCommand object with Expense object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expense The Expense Object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public EditCommand(Expense expense) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expense \u003d expense;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Constructs the EditCommand object with Contact object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param contact The Contact Object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public EditCommand(Contact contact) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (expense !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int index \u003d wallet.getExpenseList().findIndexWithId(expense.getId());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense currentExpense \u003d wallet.getExpenseList().getExpense(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getRecFrequency() \u003d\u003d null || !expense.getRecFrequency().equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setRecurring(expense.isRecurring());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setRecFrequency(expense.getRecFrequency());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getAmount() !\u003d 0.0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setAmount(expense.getAmount());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getCategory() !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setCategory(expense.getCategory());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setDescription(expense.getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().editExpense(index, currentExpense);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_EDIT_EXPENSE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(currentExpense.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (contact !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            int index \u003d wallet.getContactList().findContactWithId(contact.getId());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (index !\u003d -1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Contact currentContact \u003d wallet.getContactList().getContact(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (contact.getName() !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setName(contact.getName());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (contact.getDetail() !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setDetail(contact.getDetail());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (contact.getPhoneNum() !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setPhoneNum(contact.getPhoneNum());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().editContact(index, currentContact);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_EDIT_CONTACT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(currentContact.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 33,
      "kyang96": 40,
      "A0171206R": 5,
      "-": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ExitCommand Class deals with the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns true to indicate to Main to terminate the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return True. (Always)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 9,
      "-": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.HelpPrompt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.storage.HelpStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The HelpCommand Class shows users what the valid commands are."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Shows a list of valid commands to the user and returns false."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        HelpPrompt helpPrompt \u003d new HelpPrompt();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        HelpStorage accessSections \u003d new HelpStorage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int selectedSection \u003d helpPrompt.prompt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (selectedSection \u003e 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            accessSections.sectionData(selectedSection);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 10,
      "A0171206R": 9,
      "-": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ListCommand Class handles all list commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_LIST_TASKS \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_LIST_CONTACTS \u003d \"Here are the contacts in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_LIST_EXPENSES \u003d \"Here are the expenses in your list:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_LIST_RECURRING_EXPENSES \u003d \"Here are the recurring expenses in your list:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_LIST_LOANS \u003d \"Here are the loans in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" all\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" loan\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" task\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" recurring\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String record;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param record The Record object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public ListCommand(String record) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.record \u003d record;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Lists the Record objects in any list and returns false."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isListAll \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        int counter;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (record) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"recurring\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().listRecurringExpense();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"all\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            isListAll \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"task\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_LIST_TASKS);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task t : wallet.getTaskList().getTaskList()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(counter + \".\" + t.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isListAll) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            //else fallthrough"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_LIST_CONTACTS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Contact c : wallet.getContactList().getContactList()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(counter + \".\" + c.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isListAll) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            //else fallthrough"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Ui.printExpenseTable();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (!isListAll) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            //else fallthrough"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().listLoanList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 8,
      "A0171206R": 23,
      "-": 65
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ReminderCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.reminder.Reminder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ReminderCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"reminder\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Usage for reminder command.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"on\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"off\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"set\" + \"\u003cTIME IN SECONDS\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_ON \u003d \"Got it. I\u0027ve turned on reminders!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_REMINDER_ON \u003d \"It looks like you already have reminders turned on!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_REMINDER_OFF \u003d \"It looks like you already have reminders turned off!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_OFF \u003d \"Got it. I\u0027ve turned off reminders!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_SET \u003d \"Got it. I\u0027ve set reminders to notify every \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_REMINDER_SET \u003d \"Sorry! It looks like setting reminder time failed!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Reminder reminder \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ReminderCommand(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] info \u003d input.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (info.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (info[0].equals(\"on\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_FAILURE_REMINDER_ON);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().setAutoRemind(true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_SUCCESS_REMINDER_ON);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else if (info[0].equals(\"off\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (!LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_FAILURE_REMINDER_OFF);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(ReminderCommand.MESSAGE_SUCCESS_REMINDER_OFF);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().setAutoRemind(false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (info.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (info[0].equals(\"set\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                timeInSeconds \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                LogicManager.getReminder().setTimeInSeconds(timeInSeconds);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_REMINDER_SET + timeInSeconds + \" seconds\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 66
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/SetBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " * The SetCommand Class deals with the \u0027set\u0027 command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budget\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_SET_BUDGET \u003d \" dollars is the budget set for \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NOTE \u003d \"Note that to update your budget, \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"simply set the budget for the same month and year again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" $100 01/2019\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" $0 01/2019 \" + \"(To remove your budget for the month/year)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EDIT_BUDGET \u003d \"You successfully edited your budget for \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_REMOVE_BUDGET \u003d \"You have successfully removed your budget for \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_BUDGET_TO_REMOVE \u003d \"There is no budget for removal\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_NEGATIVE_BUDGET \u003d \"Budget must be more than or equals to zero\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Budget budget \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public SetBudgetCommand(Budget budget) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (budget.getAmount() \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_NO_NEGATIVE_BUDGET);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (budget !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BudgetList budgetList \u003d wallet.getBudgetList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (budgetList.getBudgetList().size() \u003d\u003d 0 \u0026\u0026 budget.getAmount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_NO_BUDGET_TO_REMOVE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (budgetList.getBudgetList().size() !\u003d 0 \u0026\u0026 budget.getAmount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    int index \u003d checkDuplicates(wallet.getBudgetList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (index !\u003d -1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        wallet.getBudgetList().getBudgetList().remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        updateSaveFile(wallet);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_REMOVE_BUDGET"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                + budget.getYear());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_NO_BUDGET_TO_REMOVE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (budgetList.getBudgetList().size() !\u003d 0 \u0026\u0026 budget.getAmount() \u003e 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    int index \u003d checkDuplicates(wallet.getBudgetList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (index !\u003d -1) { //There is a duplicate"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        wallet.getBudgetList().editBudget(index, budget);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        wallet.getBudgetList().addBudget(budget);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(budget.getAmount() + MESSAGE_SET_BUDGET"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1] + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    updateSaveFile(wallet);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (index !\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_EDIT_BUDGET"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                + new DateFormatSymbols().getMonths()[budget.getMonth() - 1] + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                wallet.getBudgetList().addBudget(budget);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(budget.getAmount() + MESSAGE_SET_BUDGET"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + new DateFormatSymbols().getMonths()[budget.getMonth() - 1] + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                updateSaveFile(wallet);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_NOTE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int checkDuplicates(BudgetList budgetList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c budgetList.getBudgetList().size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (budget.getMonth() \u003d\u003d budgetList.getBudgetList().get(i).getMonth()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    \u0026\u0026 budget.getYear() \u003d\u003d budgetList.getBudgetList().get(i).getYear()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private void updateSaveFile(Wallet wallet) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        wallet.getBudgetList().setModified(true);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 92,
      "kyang96": 5
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_EXPENSES \u003d \"Here are your expenses:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_LOANS \u003d \"Here are your loans:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_EXPENSES_SPECIFIED \u003d \"Here are your expenses for \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_LOANS_SPECIFIED \u003d \"Here are your loans for \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EMPTY_LOANS \u003d \"There are no loans\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EMPTY_EXPENSES \u003d \"There are no expenses\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EMPTY_BUDGET \u003d \"There is no budget set for \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_BUDGET \u003d \"This is the budget left for \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" all\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" 01/01/2019\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" budget 01/2019\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private String[] type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ViewCommand(String... type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (type.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (type.equals(\"all\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (wallet.getExpenseList().getSize() !\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_VIEW_EXPENSES);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    ui.printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_EMPTY_EXPENSES);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (wallet.getLoanList().getSize() !\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_VIEW_LOANS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    ui.printLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_EMPTY_LOANS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(type[0].trim(), formatter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (!date.equals(null)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_VIEW_EXPENSES_SPECIFIED + date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (e.getDate().equals(date)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_VIEW_LOANS_SPECIFIED + date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                for (Loan l : wallet.getLoanList().getLoanList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (l.getDate().equals(date)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(l.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (type.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (type[0].equals(\"budget\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] monthYear \u003d type[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                int month \u003d Integer.parseInt(monthYear[0].trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                int year \u003d Integer.parseInt(monthYear[1].trim());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                for (Budget b : wallet.getBudgetList().getBudgetList()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (b.getMonth() \u003d\u003d month \u0026\u0026 b.getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_VIEW_BUDGET"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(\"$\" + b.getAmount());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_EMPTY_BUDGET"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        +  new DateFormatSymbols().getMonths()[month - 1] + \" \" + year);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 103,
      "kyang96": 1
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.DoWithinPeriod;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns an AddCommand object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return An AddCommand object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"dowithin\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Task task \u003d parseTask(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            Expense expense \u003d parseExpense(arguments[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(expense);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Contact contact \u003d parseContact(arguments[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            if (contact !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(contact);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d parseLoan(arguments[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return new AddCommand(loan);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns an Expense object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input A string input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Expense object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws NumberFormatException          Wrong format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private Expense parseExpense(String input) throws NumberFormatException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isRecurring \u003d input.contains(\"/r\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\"\\\\$\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String desc \u003d arguments[0].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        arguments \u003d arguments[1].split(\" \", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Double amount \u003d Double.parseDouble(arguments[0].trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String cat;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String freq \u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (arguments[1].contains(\"/on\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            arguments \u003d arguments[1].split(\" \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            cat \u003d arguments[0].trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (isRecurring) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/on\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/r\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                date \u003d LocalDate.parse(arguments[0].trim(), formatter);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                freq \u003d arguments[1].trim().toUpperCase();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (!freq.equals(\"DAILY\") \u0026\u0026 !freq.equals(\"WEEKLY\") \u0026\u0026 !freq.equals(\"MONTHLY\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    System.out.println(AddCommand.MESSAGE_ERROR_ADD_EXPENSE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    System.out.println(AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/on\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                date \u003d LocalDate.parse(arguments[1].trim(), formatter);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            cat \u003d arguments[1].trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d new Expense(desc, date, amount, cat, isRecurring, freq);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        return expense;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a Loan object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input The string after \"loan\"."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Loan object."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException                 ParseException."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Loan parseLoan(String input) throws ArrayIndexOutOfBoundsException, ParseException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Boolean isLend \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] info \u003d input.split(\" \", 4);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String description \u003d info[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        double amount \u003d Double.parseDouble(info[1].replace(\"$\", \"\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(info[2].trim(), formatter);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        info \u003d info[3].split(\"/c \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int contactId \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (info[0].equals(\"/l\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            isLend \u003d true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (info[0].equals(\"/b\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            isLend \u003d false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cContact\u003e contactList \u003d LogicManager.getWallet().getContactList().getContactList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person \u003d new ContactList(contactList).getContact(contactId - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan \u003d new Loan(description, createdDate, amount, isLend, false, person);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loan;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a Contact object."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input The string after \"contact\"."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Contact object."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private Contact parseContact(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] info \u003d input.split(\" \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ContactParserHelper contactHelper \u003d new ContactParserHelper();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d contactHelper.newInput(info);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (contact \u003d\u003d null) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return contact;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a Task Object based on command and input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param command A string command."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input   A string input."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Task object."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException                 ParseException."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    private Task parseTask(String command, String input) throws ArrayIndexOutOfBoundsException, ParseException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] info;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of \" + command + \" cannot be empty\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            task \u003d new Todo(input);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            info \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            Date date \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            task \u003d new Deadline(info[0].trim(), date);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            info \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            Date date \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            task \u003d new Event(info[0].trim(), date);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (command.equals(\"dowithin\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            info \u003d input.split(\"/from\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            String temp \u003d info[0];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            info \u003d info[1].split(\"/to\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            Date dateStart \u003d sdf.parse(info[0].trim());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            Date dateEnd \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            task \u003d new DoWithinPeriod(temp.trim(), dateStart, dateEnd);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 6,
      "kyang96": 36,
      "A0171206R": 74,
      "-": 92
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ContactParserHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ContactParserHelper {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Concat an array of strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param toJoin Array of strings needed to join together."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return A string with words joined together."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public String concatList(ArrayList\u003cString\u003e toJoin) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (String s : toJoin) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            result +\u003d s + \" \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Find index of command line option in user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info   Array of user input arguments."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param toFind Command Line option to find."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Index of command line option."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public int findIndexOf(String[] info, String toFind) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (info[i].equals(toFind)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Process user input for a new Contact entry."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info Array of user input arguments."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Contact object with user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact newInput(String[] info) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int section \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int detailsIndex;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int phoneIndex;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String details \u003d \"[no details]\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String phone \u003d \"[no phone]\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e detailsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e phoneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        detailsIndex \u003d findIndexOf(info, \"/d\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        phoneIndex \u003d findIndexOf(info, \"/p\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //Process input into three array list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (i \u003d\u003d detailsIndex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d phoneIndex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 2;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                detailsList.add(info[i]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phoneList.add(info[i]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                nameList.add(info[i]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (nameList.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            name \u003d concatList(nameList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!detailsList.isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            details \u003d concatList(detailsList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!phoneList.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d concatList(phoneList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact processed \u003d new Contact(name, details, phone);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return processed;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Process user input to update Contact entry."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info Array of user input arguments."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Contact object with user input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact updateInput(String[] info) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int section \u003d -1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int detailsIndex;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int phoneIndex;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int nameIndex;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String name \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String details \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String phone \u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e detailsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e phoneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        detailsIndex \u003d findIndexOf(info, \"/d\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        phoneIndex \u003d findIndexOf(info, \"/p\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        nameIndex \u003d findIndexOf(info, \"/n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //Process input into three arraylist"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (i \u003d\u003d detailsIndex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d phoneIndex) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 2;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d nameIndex) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 0;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                detailsList.add(info[i]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 2) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phoneList.add(info[i]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                nameList.add(info[i]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!nameList.isEmpty()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            name \u003d concatList(nameList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!detailsList.isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            details \u003d concatList(detailsList);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (detailsIndex !\u003d -1 \u0026\u0026 detailsList.isEmpty()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            details \u003d \"[no details]\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!phoneList.isEmpty()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d concatList(phoneList);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (phoneIndex !\u003d -1 \u0026\u0026 phoneList.isEmpty()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d \"[no phone]\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact processed \u003d new Contact(name, details, phone);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return processed;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 163
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/DeleteCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DeleteCommandParser Class converts user String to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * appropriate parameters."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Changes user input String to appropriate parameters"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * and returns a DeleteCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public DeleteCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return new DeleteCommand(arguments[0], index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 16,
      "A0171206R": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/DoneCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.DoneCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DoneCommandParser Class converts user String to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * appropriate parameters."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Changes user input String to appropriate parameters"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * and returns a DeleteCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public DoneCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int id \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return new DoneCommand(id);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 28
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/EditCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.EditCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The EditCommandParser class helps to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * change user input String into appropriate parameters."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParser implements Parser\u003cEditCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand parse(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense expense \u003d parseExpense(arguments[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return new EditCommand(expense);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Contact contact \u003d parseContact(arguments[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (contact !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new EditCommand(contact);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Parses the parameters of contact to be edited."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input User input arguments"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private Contact parseContact(String input) throws NumberFormatException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (arguments.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String[] parameters \u003d arguments[1].split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int id \u003d Integer.parseInt(arguments[0].trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ContactParserHelper contactHelper \u003d new ContactParserHelper();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Contact contact \u003d contactHelper.updateInput(parameters);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                contact.setId(id);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return contact;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Parses the parameters of expense to be edited."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense parseExpense(String input) throws NumberFormatException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d new Expense();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int id \u003d Integer.parseInt(arguments[0].trim());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setId(id);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String parameters \u003d arguments[1].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (parameters.contains(\"/r\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String[] getRecurring \u003d parameters.split(\"/r\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (getRecurring[1].trim().equalsIgnoreCase(\"DAILY\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    || getRecurring[1].trim().equalsIgnoreCase(\"WEEKLY\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    || getRecurring[1].trim().equalsIgnoreCase(\"MONTHLY\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setRecurring(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setRecFrequency(getRecurring[1].trim().toUpperCase());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else if (getRecurring[1].trim().equals(\"no\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setRecurring(false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setRecFrequency(null);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            parameters \u003d getRecurring[0].trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (parameters.contains(\"/c\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String[] getCategory \u003d parameters.split(\"/c\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expense.setCategory(getCategory[1].trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            parameters \u003d getCategory[0].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (parameters.contains(\"/a\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String[] getAmount \u003d parameters.split(\"/a\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expense.setAmount(Double.parseDouble(getAmount[1].trim()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            parameters \u003d getAmount[0].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (parameters.contains(\"/d\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String[] getDescription \u003d parameters.split(\"/d\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expense.setDescription(getDescription[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expense;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 34,
      "kyang96": 60,
      "A0171206R": 7,
      "-": 11
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ExpenseParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ExpenseParser Class handles the logic of creating an Expense Object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of recurring expenses."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The list of all expenses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of recurring expenses."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static ArrayList\u003cExpense\u003e getRecurringRecords(ExpenseList expenseList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                recList.add(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return recList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Updates the expense list with recurring expenses from the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * input date until the end of the current month."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void updateRecurringRecords(Wallet wallet) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d wallet.getExpenseList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d getRecurringRecords(expenseList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : recList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int lastDay \u003d currentDate.lengthOfMonth();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int currentMonth \u003d currentDate.getMonthValue();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int currentYear \u003d currentDate.getYear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate expenseDate \u003d e.getDate();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expenseDate.getYear() \u003e currentYear) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getRecFrequency().equals(\"DAILY\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e currentMonth"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        || (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003d\u003d lastDay)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(null);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003d\u003d lastDay"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, \"DAILY\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, null);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else if (e.getRecFrequency().equals(\"WEEKLY\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e currentMonth"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        || (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003e lastDay - 7)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(null);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                expenseDate \u003d expenseDate.plusDays(7);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003e lastDay - 7"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, \"WEEKLY\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, null);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expenseDate \u003d expenseDate.plusDays(7);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else if (e.getRecFrequency().equals(\"MONTHLY\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e\u003d currentMonth) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(null);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                expenseDate \u003d expenseDate.plusMonths(1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, \"MONTHLY\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, null);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expenseDate \u003d expenseDate.plusMonths(1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 4,
      "kyang96": 98,
      "A0171206R": 16
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ListCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ListCommandParser class helps to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * change user input String into appropriate parameters."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommandParser implements Parser\u003cListCommand\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public ListCommand parse(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input !\u003d \"\") {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(ListCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "A0171206R": 4,
      "-": 15
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ParserManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.EditCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.ViewCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ParserManager Class that handles all CommandParser classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserManager {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the user input command and returns the corresponding Command object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fullCommand The input of user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The corresponding Command object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String fullCommand) throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            AddCommandParser addCommandParser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return addCommandParser.parse(arguments[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return new EditCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return new ListCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return new ViewCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case SetBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return new SetBudgetParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return new DeleteCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case ReminderCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new ReminderCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new DoneCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 1,
      "kyang96": 9,
      "matthewng1996": 8,
      "A0171206R": 14,
      "-": 34
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ReminderCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The RemindCommand class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * changes user input String into appropriate parameters."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ReminderCommand parse(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (input !\u003d \"\") {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new ReminderCommand(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(ReminderCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 20
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/SetBudgetParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetParser implements Parser\u003cSetBudgetCommand\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public SetBudgetCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] amount \u003d arguments[0].split(\"\\\\$\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Double budgetAmount \u003d Double.parseDouble(amount[1].trim());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] monthYear \u003d arguments[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int month \u003d Integer.parseInt(monthYear[0].trim());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int year \u003d Integer.parseInt(monthYear[1].trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(budgetAmount, month, year);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 23
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ViewCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.ViewCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommandParser implements Parser\u003cViewCommand\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ViewCommand parse(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (input !\u003d \"\") {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String[] arguments \u003d input.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return new ViewCommand(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 15
    }
  },
  {
    "path": "src/main/java/wallet/model/Wallet.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecordList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.ScheduleList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Wallet {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private BudgetList budgetList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private RecordList recordList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private ExpenseList expenseList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private ContactList contactList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScheduleList scheduleList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LoanList loanList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor with no data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Wallet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.recordList \u003d new RecordList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.contactList \u003d new ContactList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.scheduleList \u003d new ScheduleList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.loanList \u003d new LoanList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a Wallet object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budgetList The BudgetList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param recordList The RecordList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The ExpenseList object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The ContactList object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param scheduleList The ScheduleList object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The LoanList object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Wallet(BudgetList budgetList, RecordList recordList, ExpenseList expenseList, ContactList contactList,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                  TaskList taskList, ScheduleList scheduleList, LoanList loanList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recordList \u003d recordList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.scheduleList \u003d scheduleList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList getBudgetList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setBudgetList(BudgetList budgetList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the RecordList object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The RecordList object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public RecordList getRecordList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return recordList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the RecordList object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param recordList The RecordList object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRecordList(RecordList recordList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recordList \u003d recordList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ExpenseList object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ExpenseList object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpenseList getExpenseList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ExpenseList object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The ExpenseList object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setExpenseList(ExpenseList expenseList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ContactList object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ContactList object,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public ContactList getContactList() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ContactList object."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The ContactList object."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setContactList(ContactList contactList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the TaskList object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The TaskList object."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the TaskList object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param taskList THe TaskList object."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ScheduleList object."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ScheduleList object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public ScheduleList getScheduleList() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return scheduleList;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ScheduleList object."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param scheduleList The ScheduleList object."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setScheduleList(ScheduleList scheduleList) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        this.scheduleList \u003d scheduleList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the LoanList object."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The LoanList object."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList getLoanList() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loanList;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the LoanList object."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The LoanList Object."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setLoanList(LoanList loanList) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 17,
      "matthewng1996": 14,
      "A0171206R": 79,
      "-": 59
    }
  },
  {
    "path": "src/main/java/wallet/model/contact/Contact.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.contact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Contact Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Contact {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private String detail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String phoneNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Contact object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name     Name of the contact."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param detail   Details of the contact."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phoneNum Phone number of the contact."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public Contact(String name, String detail, String phoneNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the name of the contact."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The name of the contact."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the name of the contact."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name The name of the contact."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the details of the contact."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The details of the contact."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDetail() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the details of the contact."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param detail The details of the contact."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDetail(String detail) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the phone number of the contact."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The phone number of the contact."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPhoneNum() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return phoneNum;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the phone number of the contact."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phoneNum The phone number of the contact."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPhoneNum(String phoneNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the id of the contact object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The identity of the contact object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the id of the contact object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The id of the contact object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the concatenated string with all the required fields."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The concatenated string with all the required fields."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return \"[ID: \" + this.id + \"]\" + this.name + \" \" + this.detail + \" \" + this.phoneNum;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Form a string to write to contact.txt."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The String to be written in contact.txt."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return getId() + \",\" + this.name + \",\" + this.detail + \",\" + this.phoneNum;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "A0171206R": 33,
      "-": 83
    }
  },
  {
    "path": "src/main/java/wallet/model/contact/ContactList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.contact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ContactList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Stores the current list of contacts of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cContact\u003e contactList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a new ContactList object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactList \u003d new ArrayList\u003cContact\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactList(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Add the given contact into the contactList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The contact to be added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addContact(Contact contact) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contact.setId(getLargestId(this.contactList) + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.add(contact);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Retrieve the contact at the given index of the contactList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the contact in the contactList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The contact object with the specified id."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Contact getContact(int id) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList.get(id);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Modify the value of the contact at the given index in the contactList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id      The id of the contact in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The contact with modified values."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void editContact(int id, Contact contact) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.set(id, contact);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Removes the contact at the given index of the contactList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the contact in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void deleteContact(int id) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.remove(id);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Get the current number of contacts in the contactList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The number of contacts in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getContactListSize() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of contacts in the contactList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of contacts."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cContact\u003e getContactList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The list of contact."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getLargestId(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Contact contact : contactList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (contact.getId() \u003e max) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                max \u003d contact.getId();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Creates Contact object."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param name     Name of the contact."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param detail   Details of the contact."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param phoneNum Phone Number of the contact."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Contact Object."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Contact createContact(String name, String detail, String phoneNum) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return new Contact(name, detail, phoneNum);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Finds and returns contact index using its id."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param id The id of the contact to find."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return id of contact found. -1 if not found."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public int findContactWithId(int id) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Contact e : this.contactList) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 16,
      "kyang96": 16,
      "A0171206R": 107
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs the Budget object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param amount amount of budget set."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month month which budget is set to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param year year which budget is set to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Budget(double amount, int month, int year) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the amount of the budget."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The amount of budget."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the amount of the budget."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param amount The amount of budget."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the month of the budget."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The month of budget."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public int getMonth() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the month of the budget."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month The month of budget."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setMonth(int month) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the year of the budget."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The year of budget."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the year of the budget."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param year The year of budget."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setYear(int year) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return amount + \",\" + month + \",\" + year;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 78
    }
  },
  {
    "path": "src/main/java/wallet/model/record/BudgetList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class BudgetList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private ArrayList\u003cBudget\u003e budgetList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a new BudgetList object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d new ArrayList\u003cBudget\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a new BudgetList object with populated list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList(ArrayList\u003cBudget\u003e budgetList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the list of budgets."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The list of budgets."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Add the given budget into the expenseList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param b The budget to be added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void addBudget(Budget b) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            budgetList.add(b);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Budget addition failed. Please try again.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void editBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetList.set(index, budget);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 47,
      "kyang96": 15
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Expense.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Expense Class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Expense extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isRecurring;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private String recFrequency;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.recFrequency \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs the Expense object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param amount      The amount of expense."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param category    The category of the expense."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param isRecurring Whether the expense is recurring."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Expense(String description, LocalDate date, double amount,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                   String category, boolean isRecurring, String recFrequency) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isRecurring \u003d isRecurring;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recFrequency \u003d recFrequency;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the amount of the expense."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The amount of expense."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the amount of the expense."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param amount The amount of expense."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the category of the expense."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The category of the expense."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the Category of the expense."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param category The category of the expense."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setCategory(String category) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns whether the expense is recurring."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true or false - Whether the expense is recurring."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isRecurring() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return isRecurring;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets whether the expense is recurring."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param recurring Whether the expense is recurring."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRecurring(boolean recurring) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        isRecurring \u003d recurring;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the recurring frequency string."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A string indicating the recurring frequency."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRecFrequency() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return recFrequency;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the recurring frequency."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param recFrequency The recurring frequency string."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRecFrequency(String recFrequency) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recFrequency \u003d recFrequency;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isRecurring) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + recFrequency + \"] \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + getDescription() + \" Amount:$\" + amount + \" Date:\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate()) + \" Category:\" + category;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \" \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + getDescription() + \" Amount:$\" + amount + \" Date:\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate()) + \" Category:\" + category;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (isRecurring) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate()) + \",\" + category + \",\" + recFrequency;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate()) + \",\" + category;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 18,
      "matthewng1996": 4,
      "A0171206R": 19,
      "-": 93
    }
  },
  {
    "path": "src/main/java/wallet/model/record/ExpenseList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ExpenseList Class that maintains a list of Expense objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private ArrayList\u003cExpense\u003e expenseList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a new ExpenseList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ExpenseList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new ExpenseList object with populated list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ExpenseList(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of expenses."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of expenses."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e getExpenseList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the list of expenses."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The list of expenses."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setExpenseList(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Add the given expense into the expenseList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param e The expense to be added."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void addExpense(Expense e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        e.setId(getLargestId(this.expenseList) + 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Retrieve the expense at the given index of the expenseList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the expense in the expenseList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The expense at the given index."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense getExpense(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.get(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Modify the value of the expense at the given index in the expenseList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the expense in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param e     The expense object with modified values."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void editExpense(int index, Expense e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.set(index, e);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the index of the Expense object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param e The Expense object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return integer index."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int findExpenseIndex(Expense e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.indexOf(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the size of the expenseList."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return integer size of the expenseList."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.size();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the monthly expenses."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month month of user expenses."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param year year of user expenses."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return sum of expenses in a given month and year."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getMonthExpenses(int month, int year) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int expenseMonth;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int expenseYear;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        double totalExpenses \u003d 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate expenseDate \u003d e.getDate();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            expenseMonth \u003d expenseDate.getMonthValue();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            expenseYear \u003d expenseDate.getYear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (expenseMonth \u003d\u003d month \u0026\u0026 expenseYear \u003d\u003d year) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                totalExpenses +\u003d e.getAmount();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return totalExpenses;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Lists all expenses in the expense list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void listExpenseList() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(ListCommand.MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(counter + \". \" + e.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Lists all recurring expenses in the expense list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void listRecurringExpense() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(ListCommand.MESSAGE_LIST_RECURRING_EXPENSES);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(counter + \". \" + e.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The list of expenses."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getLargestId(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (expense.getId() \u003e max) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                max \u003d expense.getId();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Deletes an expense using its id."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense to delete."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense deleteExpense(int id) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d findIndexWithId(id);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense expense \u003d getExpense(index);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseList.remove(index);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return expense;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Finds and returns expense index using its id."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense to find."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int findIndexWithId(int id) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Finds and returns the Expense object using its id."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense object."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The expense object."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense findExpenseWithId(int id) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 134,
      "matthewng1996": 24,
      "A0171206R": 61
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Loan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class Loan extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Contact person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LocalDate createdDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isLend;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean isSettled;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * The constructor for Loan objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The description of the loan."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param amount      The amount of money lent to /borrowed from the Contact person."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isLend      If isLend is true, then it means you lend people money. Else, it means you borrow from people."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isSettled   If isSettled is true, then it means the loan has been settled."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param person      The Contact object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan(String description, LocalDate createdDate, double amount,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                boolean isLend, boolean isSettled, Contact person) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        super(description, createdDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.createdDate \u003d createdDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.isLend \u003d isLend;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.isSettled \u003d isSettled;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the amount of loan."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The amount of loan."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the amount of the loan."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param amount The amount of the loan."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns true or false."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getIsLend() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.isLend;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets isLend to true or false."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isLend States whether user is borrowing or lending."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setIsLend(boolean isLend) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isLend \u003d isLend;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Checks if user has settled the loan."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return True or false - Whether the user has settled the loan."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getIsSettled() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isSettled;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Allows user to mark loans as settled/unsettled."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isSettled Marks loans as settled or unsettled."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setIsSettled(boolean isSettled) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isSettled \u003d isSettled;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (isLend) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + (isSettled ? \"Settled\" : \"Not Settled\") + \"]\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Lend] \" + description + \" Amount:$\" + amount"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \" Date:\" + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Contact: \" + person.toString() + \"]\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else { //isBorrow"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + (isSettled ? \"Settled\" : \"Not Settled\") + \"]\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Borrow] \" + description + \" Amount:$\" + amount"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \" Date:\" + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate())"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Contact: \" + person.toString() + \"]\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (!isLend \u0026\u0026 !isSettled) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"0\" + \",\" + \"0\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (!isLend \u0026\u0026 isSettled) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"0\" + \",\" + \"1\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (isLend \u0026\u0026 !isSettled) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"1\" + \",\" + \"0\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (isLend \u0026\u0026 isSettled) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"1\" + \",\" + \"1\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 37,
      "A0171206R": 92
    }
  },
  {
    "path": "src/main/java/wallet/model/record/LoanList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cLoan\u003e loanList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean hasUnsettledLoan \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        checkUnsettledLoan();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d new ArrayList\u003cLoan\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of loans."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of loans."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cLoan\u003e getLoanList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets a LoanList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The list of loans."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setLoanList(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Adds a Loan object to the list of loans."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan(Loan loan) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setId(getLargestId(this.loanList) + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList.add(loan);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the Loan object based on index in list of loans."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the Loan object in the list of loans."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan getLoan(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList.get(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Edits the Loan object in the list of loans."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the Loan object in the list of loans."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan  The Loan object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void editLoan(int index, Loan loan) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList.set(index, loan);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the index of Loan object in the list of loans."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return Index of Loan object in list of loans."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int findLoanIndex(Loan loan) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList.indexOf(loan);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns size of the list of loans."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return Size of the list of loans."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Lists the list of loans."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void listLoanList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(ListCommand.MESSAGE_LIST_LOANS);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(counter + \". \" + l.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The list of loans."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getLargestId(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan.getId() \u003e max) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                max \u003d loan.getId();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Deletes an expense using its id."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the expense to delete."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan deleteLoan(int id) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d findIndexWithId(id);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d getLoan(index);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loanList.remove(index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return loan;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Finds and returns expense index using its id."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the expense to find."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int findIndexWithId(int id) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (l.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Finds and returns the Loan object using its id."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the loan object."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The loan object."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan findLoanWithId(int id) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (l.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return l;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Checks whether there are unsettled loans."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false if there are no unsettled loans. True, otherwise."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean checkUnsettledLoan() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l: this.loanList) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (!l.getIsSettled()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                hasUnsettledLoan \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                hasUnsettledLoan \u003d false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return hasUnsettledLoan;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets hasUnsettledLoans."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param hasUnsettledLoan Whether there are any unsettled loans."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setHasUnsettledLoan(boolean hasUnsettledLoan) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.hasUnsettledLoan \u003d hasUnsettledLoan;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getHasUnsettledLoan() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.hasUnsettledLoan;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 15,
      "A0171206R": 189
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Notes.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class Notes {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 4
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Record.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Record Class that is the parent of Loans, Notes, Expenses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public abstract class Record {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Record() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a Record Object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The String description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param date        The LocalDate object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Record(String description, LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a String description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the String description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The String description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the LocalDate object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param date LocalDate object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the LocalDate object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return the LocalDate object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the id of the Record Object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The identity of the Record object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Formats the record to write to save file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract String writeToFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 31,
      "matthewng1996": 3,
      "A0171206R": 50
    }
  },
  {
    "path": "src/main/java/wallet/model/record/RecordList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class RecordList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "     * Stores the current list of records of the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cRecord\u003e recordList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public RecordList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recordList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new recordList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param recordList The list of records to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public RecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recordList \u003d recordList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the list of records in the recordList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The list of records."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cRecord\u003e getRecordList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return recordList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add the given record into the recordList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param record The record to be added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addRecord(Record record) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        recordList.add(record);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieve the record at the given index of the recordList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the record in the recordList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The record at the given index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public Record getRecord(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return recordList.get(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Modify the value of the record at the given index in the recordList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index  The index of the record in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param record The record with modified values."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void modifyRecord(int index, Record record) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        recordList.set(index, record);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the record at the given index of the record list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the record in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteRecord(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        recordList.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the current number of records in the recordList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The number of records in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getRecordListSize() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return recordList.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and populate a corresponding task object given its type."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param type        The type of task to be created."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task object with its corresponding values."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public Record createRecord(String type, String description) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] info;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        /*try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(\"loan\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (type.equals(\"Expense\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The date/time of a \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "A0171206R": 3,
      "-": 101
    }
  },
  {
    "path": "src/main/java/wallet/model/task/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * The deadline of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param by The deadline of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the date of the deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return date of deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for printing to UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for printing to UI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(by) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for writing to output file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for writing to output file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"D,\" + super.writeToFile() + \",\" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 50
    }
  },
  {
    "path": "src/main/java/wallet/model/task/DoWithinPeriod.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DoWithinPeriod extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date dateStart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date dateEnd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs the DoWithinPeriod Object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the DoWithinPeriod Object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateStart Start date of the DoWithinPeriod Object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateEnd End date of the DowWithinPeriod Object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public DoWithinPeriod(String description, Date dateStart, Date dateEnd) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dateStart \u003d dateStart;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dateEnd \u003d dateEnd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Concatenates all the fields into a String."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The concatenated String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[DW]\" + super.toString() + \" (from: \" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(dateStart)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" to: \" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(dateEnd) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for writing to output file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for writing to output file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"DW,\" + super.writeToFile() + \",\" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(dateStart)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + \",\" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(dateEnd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 44
    }
  },
  {
    "path": "src/main/java/wallet/model/task/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * The date of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, Date date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the date of event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return date of event task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for printing to UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for printing to UI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(date) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for writing to output file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for writing to output file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"E,\" + super.writeToFile() + \",\" + new SimpleDateFormat(\"dd MMM yyyy h:mma\").format(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 50
    }
  },
  {
    "path": "src/main/java/wallet/model/task/ScheduleList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class ScheduleList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Data structure to hold list of schedules of the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * [TODO] FOR NOW: SCHEDULES REFER TO EXPENSES AND LOANS."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private ArrayList\u003cRecord\u003e scheduleList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new ArrayList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public ScheduleList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        scheduleList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the list of schedules in the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The list of schedules."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cRecord\u003e getScheduleList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return scheduleList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add the given schedule into the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param record The schedule to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void addSchedule(Record record) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        scheduleList.add(record);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieve the schedules at the given index of the schedules list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the schedules in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The schedules at the given index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Record getSchedule(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return scheduleList.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the schedule at the given index of the schedules list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the schedules in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteSchedule(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        scheduleList.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the current number of schedules in the schedules list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The number of schedules in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getScheduleListSize() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return scheduleList.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the schedule list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printScheduleList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c scheduleList.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(scheduleList.get(i));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "matthewng1996": 9,
      "-": 66
    }
  },
  {
    "path": "src/main/java/wallet/model/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieve the status icon of the task based on isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The corresponding status icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the current status of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the isDone variable to true, showing that the task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieve the description of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Update the description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The new description of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for printing to UI."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for printing to UI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for writing to output file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for writing to output file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return (this.isDone ? \u00271\u0027 : \u00270\u0027) + \",\" + this.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 76
    }
  },
  {
    "path": "src/main/java/wallet/model/task/TaskList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Stores the current list of task of the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new taskList object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList The list of task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the list of tasks in the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add the given task into the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieve the task at the given index of the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task at the given index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Modify the value of the task at the given index in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task  The task with modified values."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void modifyTask(int index, Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.set(index, task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the task at the given index of the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the current number of tasks in the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The number of tasks in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and populate a corresponding task object given its type."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param type        The type of task to be created."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task object with its corresponding values."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task createTask(String type, String description) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] info;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                info \u003d description.split(\"/by\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Date date \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                return new Deadline(info[0].trim(), date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                info \u003d description.split(\"/at\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                Date date \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                return new Event(info[0].trim(), date);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (type.equals(\"dowithin\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                info \u003d description.split(\"/from\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                String temp \u003d info[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                info \u003d info[1].split(\"/to\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                Date dateStart \u003d sdf.parse(info[0].trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                Date dateEnd \u003d sdf.parse(info[1].trim());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                return new DoWithinPeriod(temp.trim(), dateStart, dateEnd);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The date/time of a \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The format of date/time is \\\"dd/mm/yyyy hhmm\\\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 5,
      "-": 124
    }
  },
  {
    "path": "src/main/java/wallet/model/task/Todo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Todo object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for printing to UI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for printing to UI."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Outputs the string with the correct format for writing to output file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The string formatted for writing to output file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"T,\" + super.writeToFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 31
    }
  },
  {
    "path": "src/main/java/wallet/reminder/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.reminder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.thread.MyThread;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LoanList loanList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean autoRemind;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private MyThread thread;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * The constructor for the Reminder object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Reminder() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d LogicManager.getWallet().getLoanList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        autoRemind \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        timeInSeconds \u003d 1800; //set default time interval of auto remind to be 30 minutes"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * autoReminds the user of undone tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * this method will run as a background process."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * users can also set the reminder interval timings."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * and also turn it off and on as they wish."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void autoRemindStart() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWallet().getLoanList().checkUnsettledLoan();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"hasUnsettledLoan: \" + LogicManager.getWallet().getLoanList().getHasUnsettledLoan());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (LogicManager.getWallet().getLoanList().getHasUnsettledLoan()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            thread \u003d new MyThread(false, loanList, timeInSeconds);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            thread \u003d new MyThread(true, loanList, timeInSeconds);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Kills the auto remind thread."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void autoRemindStop() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.stop();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets whether there is a automatic reminder."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param autoRemind Whether automatic reminder is on/off."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAutoRemind(boolean autoRemind) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.autoRemind \u003d autoRemind;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if automatic reminder is turned on/off."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return whether automatic reminder is turned on/off."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getAutoRemind() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.autoRemind;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the time interval for automatic reminder."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param timeInSeconds THe time interval for the automatic reminder."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTimeInSeconds(int timeInSeconds) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.timeInSeconds \u003d timeInSeconds;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the time interval in seconds."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The time interval in seconds."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getTimeInSeconds() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.timeInSeconds;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 23,
      "-": 60
    }
  },
  {
    "path": "src/main/java/wallet/storage/BudgetStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class BudgetStorage extends Storage\u003cBudget\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_BUDGET \u003d \"./data/budget.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * loads the list of Budget."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return list of set budget."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cBudget\u003e loadFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cBudget\u003e budgetList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_BUDGET, \"r\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (!data[0].isEmpty() \u0026\u0026 !data[1].isEmpty() \u0026\u0026 !data[2].isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    Budget budget \u003d new Budget(Double.parseDouble(data[0]),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Integer.parseInt(data[1]), Integer.parseInt(data[2]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    budgetList.add(budget);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"No saved expenses found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes budget list to file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param budgetList The list of budgets."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cBudget\u003e budgetList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_BUDGET, \"rws\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Budget budget : budgetList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                raf.writeBytes(budget.writeToFile());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Updates Budget to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budget  The object to be modified."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param index The index of the object in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void updateToFile(Budget budget, int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        //blank"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Remove Budget from file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budgetArrayList The list to update."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param index The index of the object in the list to be deleted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void removeFromFile(ArrayList\u003cBudget\u003e budgetArrayList, int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        //blank"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 75,
      "kyang96": 7
    }
  },
  {
    "path": "src/main/java/wallet/storage/ContactStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ContactStorage extends Storage\u003cContact\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_CONTACT \u003d \"./data/contact.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the contacts from contact.txt into a temporary ArrayList of Contact objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Contact objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cContact\u003e loadFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cContact\u003e contactList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_CONTACT, \"r\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Contact contact \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (data.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contact \u003d new Contact(data[1],data[2], data[3]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (contact !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contact.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contactList.add(contact);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"No saved contacts found.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes the contact list into contacts.txt."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param contactList The list of contacts."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_CONTACT, \"rws\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Contact contact : contactList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                raf.writeBytes(contact.writeToFile());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 7,
      "A0171206R": 63
    }
  },
  {
    "path": "src/main/java/wallet/storage/ExpenseStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseStorage extends Storage\u003cExpense\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_EXPENSE \u003d \"./data/expense.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the expenses from expense.txt into a temporary ArrayList of Expense objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Expense objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e loadFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_EXPENSE, \"r\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Expense expense \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (data.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expense \u003d new Expense(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            data[4], false, null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expense \u003d new Expense(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            data[4], true, data[5]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expense !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    expense.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expenseList.add(expense);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"No saved expenses found.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes the expense list into expense.txt."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_EXPENSE, \"rws\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.writeBytes(expense.writeToFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 62,
      "A0171206R": 13
    }
  },
  {
    "path": "src/main/java/wallet/storage/HelpStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " * The HelpStorage Class prints help section files."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class HelpStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String DEFAULT_HELP_FILENAME_EXPENSE \u003d \"/expense.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String DEFAULT_HELP_FILENAME_GENERAL \u003d \"/general.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String DEFAULT_HELP_FILENAME_LOAN \u003d \"/loan.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String DEFAULT_HELP_FILENAME_CONTACT \u003d \"/contact.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String DEFAULT_HELP_FILENAME_COMMAND_HISTORY \u003d \"/cmdhistory.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_ACCESS_SECTION \u003d \"Error! Contact admin for help.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Prints file content based on the help section user selected."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input User selected help section index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void sectionData(int input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String chosenPath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d DEFAULT_HELP_FILENAME_GENERAL;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d DEFAULT_HELP_FILENAME_EXPENSE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d DEFAULT_HELP_FILENAME_LOAN;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d DEFAULT_HELP_FILENAME_CONTACT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d DEFAULT_HELP_FILENAME_COMMAND_HISTORY;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenPath \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            InputStream is \u003d getClass().getResourceAsStream(chosenPath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            InputStreamReader isr \u003d new InputStreamReader(is);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(isr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (data.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    String row \u003d String.format(\"%-20s %s\", data[0], data[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    System.out.println(row);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    System.out.println(data[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            isr.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_SECTION);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_SECTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_SECTION);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 98
    }
  },
  {
    "path": "src/main/java/wallet/storage/LoanStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanStorage extends Storage\u003cLoan\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_LOAN \u003d \"./data/loan.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ContactStorage contactStorage \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the loans from loan.txt into a temporary ArrayList of Loan objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Loan objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cLoan\u003e loadFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cLoan\u003e loanList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isLend;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isSettled;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_LOAN, \"r\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Loan loan \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                isLend \u003d !data[4].equals(\"0\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                isSettled \u003d !data[5].equals(\"0\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                person \u003d new ContactList(contactStorage.loadFile()).getContact(Integer.parseInt(data[6]) - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (data.length \u003d\u003d 7 \u0026\u0026 person !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan \u003d new Loan(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            isLend, isSettled, person);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (loan !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loanList.add(loan);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"No saved loans found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loanList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes the loan list into loan.txt."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param loanList The Loan object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_LOAN, \"rws\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Loan loan : loanList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                raf.writeBytes(loan.writeToFile());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ContactStorage object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactStorage The ContactStorage object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setContactStorage(ContactStorage contactStorage) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactStorage \u003d contactStorage;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ContactStorage object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ContactStorage object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactStorage getContactStorage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.contactStorage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 7,
      "A0171206R": 94
    }
  },
  {
    "path": "src/main/java/wallet/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public abstract class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to load the save file on the local computer and populate the list with its data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The list loaded from save file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract ArrayList\u003cT\u003e loadFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to write object list into the save file on the local computer."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param objectList The list of object to write."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract void writeListToFile(ArrayList\u003cT\u003e objectList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 7,
      "-": 15
    }
  },
  {
    "path": "src/main/java/wallet/storage/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_MKDIR \u003d \"Error when trying to create directory.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String DEFAULT_STORAGE_DIRECTORY \u003d \"./data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private TaskStorage taskStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private ExpenseStorage expenseStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LoanStorage loanStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ContactStorage contactStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private BudgetStorage budgetStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new StorageManager object with all storage classes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public StorageManager() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        createDir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.taskStorage \u003d new TaskStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseStorage \u003d new ExpenseStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanStorage \u003d new LoanStorage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactStorage \u003d new ContactStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanStorage.setContactStorage(this.contactStorage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetStorage \u003d new BudgetStorage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Creates the directory for storing data if it does not exist."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void createDir() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        File file \u003d new File(DEFAULT_STORAGE_DIRECTORY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                file.mkdir();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (SecurityException se) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_ERROR_MKDIR);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the Task objects into an ArrayList of Tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return taskStorage.loadFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Writes a Task object into task.txt."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param task The Task object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        taskStorage.writeToFile(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Deletes the Task from the file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param taskList The ArrayList of Task objects."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the Task object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void deleteTask(ArrayList\u003cTask\u003e taskList, int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        taskStorage.removeFromFile(taskList, index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the Expense objects into an ArrayList of Expenses."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Expenses."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e loadExpense() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseStorage.loadFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the Loan objects into an ArrayList of Loans."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Loans."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cLoan\u003e loadLoan() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loanStorage.loadFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the Contact objects into an ArrayList of Contacts."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Contacts."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cContact\u003e loadContact() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactStorage.loadFile();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the Budget object in the ArrayList of Budget objects."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return the ArrayList of Budgets objects."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cBudget\u003e loadBudget() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetStorage.loadFile();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Checks if lists are modified and updates save file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void save(Wallet wallet) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getExpenseList().getIsModified()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseStorage.writeListToFile(wallet.getExpenseList().getExpenseList());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(false);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getLoanList().getIsModified()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            loanStorage.writeListToFile(wallet.getLoanList().getLoanList());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getLoanList().setModified(false);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getContactList().getIsModified()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            contactStorage.writeListToFile(wallet.getContactList().getContactList());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getContactList().setModified(false);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getBudgetList().getIsModified()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            budgetStorage.writeListToFile(wallet.getBudgetList().getBudgetList());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getBudgetList().setModified(false);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 77,
      "matthewng1996": 6,
      "A0171206R": 52
    }
  },
  {
    "path": "src/main/java/wallet/storage/TaskStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.DoWithinPeriod;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class TaskStorage extends Storage\u003cTask\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"./data/wallet.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to load the save file on the local computer and populate the task list with its data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The list of task loaded from save file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH, \"r\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] strArr \u003d str.split(\",\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy h:mma\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (strArr[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Todo todo \u003d new Todo(strArr[2].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (strArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else if (strArr[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Date date \u003d sdf.parse(strArr[3].trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Deadline deadline \u003d new Deadline(strArr[2].trim(), date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (strArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else if (strArr[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Date date \u003d sdf.parse(strArr[3].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Event event \u003d new Event(strArr[2].trim(), date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (strArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else if (strArr[0].trim().equals(\"DW\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Date dateStart \u003d sdf.parse(strArr[3].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Date dateEnd \u003d sdf.parse(strArr[4].trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    DoWithinPeriod dowithin \u003d new DoWithinPeriod(strArr[2].trim(), dateStart, dateEnd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (strArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        dowithin.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    taskList.add(dowithin);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"No saved tasks found.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"Wrong date/time format.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cTask\u003e objectList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //TODO: ..."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to write newly added task into a save file on the local computer."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param task The new task that is added."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeToFile(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH, \"rws\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.seek(raf.length());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.writeBytes(task.writeToFile());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Updates the save file on the local computer when a task is marked as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param task  The task to be marked as done."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void updateToFile(Task task, int index) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH, \"rws\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (index !\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.readLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                index--;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            //Added Codes to cater to Tentative"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String outputString \u003d task.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String type \u003d outputString.substring(1, 3);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (type.equals(\"*E\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.seek(raf.getFilePointer() + 3);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.seek(raf.getFilePointer() + 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.writeBytes(\"1\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Updates the save file on the local computer when a task is deleted."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param taskList The list of task to update."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param index    The index of the task in the list to be removed."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void removeFromFile(ArrayList\u003cTask\u003e taskList, int index) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH, \"rws\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int counter \u003d index;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (counter !\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.readLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                counter--;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            long start \u003d raf.getFilePointer();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (index !\u003d taskList.size()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.writeBytes(taskList.get(index).writeToFile());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (index !\u003d taskList.size()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(raf.getFilePointer());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 159,
      "A0171206R": 1
    }
  },
  {
    "path": "src/main/java/wallet/thread/MyThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.thread;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class MyThread implements Runnable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    // to stop the thread"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Thread thread;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int counter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LoanList loanList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a custom thread."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isExit        A boolean variable to continue running thread/terminate."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList      The LoanList object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param timeInSeconds The time in seconds."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public MyThread(boolean isExit, LoanList loanList, int timeInSeconds) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.timeInSeconds \u003d timeInSeconds;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread \u003d new Thread(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //System.out.println(\"New thread: \" + thread);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.start(); // Starting the thread"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Executes the thread."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                counter \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(\"Remember to settle your loans soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                for (Loan l : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if (!l.getIsSettled()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(counter + \". \" + l.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Thread.sleep(timeInSeconds * 1000);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(\"Stopping thread...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Stops the thread."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.interrupt();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 72
    }
  },
  {
    "path": "src/main/java/wallet/ui/HelpPrompt.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " * The HelpPrompt Class prompts user for the help section they want."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class HelpPrompt {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_NOTE \u003d \"Note the following when reading help sections:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_INDICATOR_REQUIRED \u003d \"\u003c\u003e indicates required parameters for command\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_INDICATOR_OPTIONAL \u003d \"[]  indicates optional parameters for command\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_AVAILABLE_SECTIONS \u003d \"Need help? The following help sections are available:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ACCESS_SECTION \u003d \"Key in help section number (enter 0 to exit):\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_ACCESS_SECTION \u003d \"Error! Input not a valid help section index\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String[] HELP_SECTIONS \u003d {\"General\", \"Expense\", \"Loans\", \"Contacts\", \"Command History\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Prompt user for help section index they want."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return An integer indicating section index."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public int prompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int selection;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Ui tempInterface \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_AVAILABLE_SECTIONS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (String s : HELP_SECTIONS) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(index + \".\" + s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_NOTE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_INDICATOR_REQUIRED);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_INDICATOR_OPTIONAL);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_ACCESS_SECTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            selection \u003d Integer.parseInt(tempInterface.readLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_SECTION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            selection \u003d -1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return selection;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (selection \u003e HELP_SECTIONS.length || selection \u003c 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_SECTION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            selection \u003d -1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return selection;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 65
    }
  },
  {
    "path": "src/main/java/wallet/ui/Notifications.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Notifications {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 5
    }
  },
  {
    "path": "src/main/java/wallet/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Scanner object used for reading input from user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new ui.Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the welcome message of the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void welcomeMsg() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"__             __       _   _         \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\\\ \\\\    __     / /      | | | |        _\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" \\\\ \\\\  /  \\\\   / /___,__ | | | | ______| |_    \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"  \\\\ \\\\/ /\\\\  \\\\/ /  [] | || | | |  []_\\\\_  __|\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"   \\\\__/  \\\\___/ \\\\__,_|_||_| |_|\\\\___/  |_|\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello! Welcome to the WalletCLi Application!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the goodbye message when the user exits the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void byeMsg() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prompts the user for input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The input of the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the separator lines for UI."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"_______________________________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Displays the expense list in table format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void printExpenseTable() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseList \u003d LogicManager.getWallet().getExpenseList().getExpenseList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"Here are the expenses in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"-----------------------------------------------\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|  ID  |              Description                 |\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \" Category |    Date    |   Amount   | Recurring |\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|-------------------------------------------------------------\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"-------------------------------------|\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : expenseList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.printf(\"| %-4d | %-40s | %-8s | %-10s |  $%-7.2f  |  %-7s  |\\n\", e.getId(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), e.getRecFrequency());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.printf(\"| %-4d | %-40s | %-8s | %-10s |  $%-7.2f  |  %-7s  |\\n\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        e.getId(), e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), \"No\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            total +\u003d e.getAmount();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"-----------------------------------------------\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"Total amount spent: $\" + total);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 34,
      "-": 56
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/DeleteCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", false, null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", LocalDate.now(), 5, \"Food\", false, null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_validId_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"expense\", 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(null, e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(1, testWallet.getExpenseList().getSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_invalidId_error() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"expense\", 4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(2, testWallet.getExpenseList().getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 37
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/EditCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", false, null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", LocalDate.now(), 5, \"Food\", false, null));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_validId_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setDescription(\"Supper\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setAmount(8);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommand command \u003d new EditCommand(expense);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should be updated with new values\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(1, e.getId()),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", e.getDescription()),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), e.getDate()),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(8.0, e.getAmount()),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Food\", e.getCategory()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, e.isRecurring()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, e.getRecFrequency())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 40
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/EditCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class EditCommandParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validInput_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"2 /d Supper /a 10 /c Others\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain edited values\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(2, expense.getId()),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", expense.getDescription()),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, expense.getDate()),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(10.0, expense.getAmount()),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Others\", expense.getCategory()),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, expense.isRecurring()),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"\", expense.getRecFrequency())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validRecurringInput_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"2 /d Supper /a 10 /c Others /r Daily\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain edited values\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(2, expense.getId()),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", expense.getDescription()),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, expense.getDate()),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(10.0, expense.getAmount()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Others\", expense.getCategory()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"DAILY\", expense.getRecFrequency())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 41
    }
  },
  {
    "path": "src/test/java/wallet/model/record/ExpenseListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExpenseListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    ExpenseList expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addExpense_nonRecurringExpense_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", false, null);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Expense ex : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Lunch\", ex.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            assertEquals(LocalDate.now(), ex.getDate());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(3.0, ex.getAmount());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Food\", ex.getCategory());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(false, ex.isRecurring());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(null, ex.getRecFrequency());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addExpense_recurringExpense_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", true, \"DAILY\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Expense ex : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Lunch\", ex.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            assertEquals(LocalDate.now(), ex.getDate());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(3.0, ex.getAmount());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Food\", ex.getCategory());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(true, ex.isRecurring());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"DAILY\", ex.getRecFrequency());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void editExpense_validExpense_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", false, null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        e.setDescription(\"Dinner\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        e.setAmount(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.editExpense(0, e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Expense ex : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Dinner\", ex.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            assertEquals(LocalDate.now(), ex.getDate());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(5.0, ex.getAmount());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Food\", ex.getCategory());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(false, ex.isRecurring());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(null, ex.getRecFrequency());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void findExpenseIndex_validExpense_success() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, \"Food\", false, null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 6,
      "matthewng1996": 3,
      "-": 55
    }
  },
  {
    "path": "src/test/java/wallet/model/record/ExpenseParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.parser.ExpenseParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExpenseParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getRecurringRecords_populatedList_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        ExpenseList expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(new Expense(\"Lunch\", LocalDate.now(), 5, \"Food\", false, null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(new Expense(\"Dinner\", LocalDate.now(), 10, \"Food\", false, null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(new Expense(\"Breakfast\", LocalDate.now(), 3, \"Food\", true, \"WEEKLY\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Expense e : ExpenseParser.getRecurringRecords(expenseList)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            assertEquals(LocalDate.now(), e.getDate());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"Food\", e.getCategory());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"WEEKLY\", e.getRecFrequency());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void updateRecurringRecords_dailyRecurring_success() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDate expenseDate \u003d currentDate.minusDays(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d testWallet.getExpenseList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        expenseList.addExpense(new Expense(\"Breakfast\", expenseDate, 3, \"Food\", true, \"DAILY\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c expenseList.getSize(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            Expense e \u003d expenseList.getExpense(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            if (i !\u003d expenseList.getSize() - 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(\"Food\", e.getCategory());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(false, e.isRecurring());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(null, e.getRecFrequency());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(\"Food\", e.getCategory());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                assertEquals(\"DAILY\", e.getRecFrequency());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 14,
      "matthewng1996": 4,
      "-": 47
    }
  },
  {
    "path": "src/test/java/wallet/model/record/LoanListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/*package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    LoanList loanList \u003d new LoanList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_notSettled_borrow_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, false, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.isLend());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.isSettled());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_Settled_borrow_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, false, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.isLend());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.isSettled());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_notSettled_lend_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, true, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.isLend());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.isSettled());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_Settled_lend_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, true, true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.isLend());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.isSettled());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 62
    }
  },
  {
    "path": "src/test/java/wallet/model/task/TaskListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String type \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String desc \u003d \"read book\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Task task \u003d taskList.createTask(type, desc);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[T][✘] read book\", task.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        type \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        desc \u003d \"exam /at 10/10/2019 1000\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        task \u003d taskList.createTask(type, desc);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[E][✘] exam (at: 10 Oct 2019 10:00AM)\", task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        type \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        desc \u003d \"assignment /by 1/1/2019 2359\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        task \u003d taskList.createTask(type, desc);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[D][✘] assignment (by: 01 Jan 2019 11:59PM)\", task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        Task task \u003d new Todo(\"homework\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"[T][✘] homework\", t.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getTaskListSizeTest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        int size \u003d taskList.getTaskListSize();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, size);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Task t \u003d new Todo(\"test getTask\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.addTask(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Task newTask \u003d taskList.getTask(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[T][✘] test getTask\", newTask.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void modifyTaskTest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Task t \u003d new Todo(\"test modifyTask\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.addTask(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Task newTask \u003d taskList.createTask(\"event\", \"modified Task /at 1/1/2020 0000\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.modifyTask(0, newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[E][✘] modified Task (at: 01 Jan 2020 12:00AM)\", taskList.getTask(0).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 1,
      "-": 63
    }
  }
]
