[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.8.4\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "group \u0027dr.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "version \u00271.3\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveBaseName \u003d \"dr.duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveVersion \u003d \"1.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        xml.enabled \u003d true // coveralls plugin depends on xml format report"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    jacocoReportPath \u0027build/reports/jacoco/test/jacocoTestReport.xml\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    implementation \u0027com.jfoenix:jfoenix:9.0.8\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 24,
      "aquohn": 16,
      "-": 39
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeCore.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.PatientList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.SearchResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeUtilException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.UiContext;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * The core of Dr. Duke, which holds the UI and storage components."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DukeCore extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String storagePath \u003d \"data\" + File.separator + \"patients.json\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiContext uiContext;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public GsonStorage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientList patientList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs a DukeCore object with the specified stdtestout."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeCore() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ui \u003d new UiManager(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        uiContext \u003d new UiContext();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            storage \u003d new GsonStorage(storagePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patientList \u003d new PatientList(storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ui.showErrorDialogAndShutdown(\"Error encountered!\", e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO finish up"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Displays results of a search."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm The term that was used to perform the search."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param resultList The search results obtained."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param parent The parent object that the search was performed in."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeUtilException If the search result list is null."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void showSearchResults(String searchTerm, List\u003c? extends DukeObject\u003e resultList,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                                  DukeObject parent) throws DukeUtilException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (resultList \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeUtilException(\"Search result list is null!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        SearchResult search \u003d new SearchResult(searchTerm, resultList, parent);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        uiContext.setContext(Context.SEARCH, search);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ui.print(\"Opening search results for \" + searchTerm);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Writes JSON file using patientList HashMap."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeFatalException If the file writer cannot be setup."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void writeJsonFile() throws DukeFatalException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        storage.writeJsonFile(patientList.getPatientList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update UI."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi(String message) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.updateUi(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 41,
      "aquohn": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Launcher class to launch the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Entry point into the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param args Command-line arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Application.launch(DukeCore.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ArgCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract class for commands that involve an argument."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ArgCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private String arg; //argument supplied to the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HashMap\u003cString, String\u003e switchVals; //hashmap of switch parameters"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final ArgSpec spec;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Creates a new command that takes arguments, with switches and functionality specified in the supplied ArgSpec"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param spec The ArgSpec object that specifies this command object\u0027s switches and functionality."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgCommand(ArgSpec spec) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(spec);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.spec \u003d spec;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        arg \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchVals \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Creates a new command that takes arguments, with switches and functionality specified in the supplied ArgSpec"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * object, with the option to specify the argument and switch values, if allowed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param spec The ArgSpec object that specifies this command object\u0027s switches and functionality."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param arg The argument to load for this command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param switchNames The names of the switches to set."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param switchVals The values of the switches to set."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If illegal values are supplied for the switches or arguments, or if the number of switch"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *      values is different from the number of switch names."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgCommand(ArgSpec spec, String arg, String[] switchNames, String[] switchVals) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this(spec);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initArg(arg);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (switchNames.length !\u003d switchVals.length) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"You gave me \" + switchNames.length + \" switch names, but \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    + switchVals.length + \" switch values!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 0; i \u003c switchNames.length; ++i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            initSwitchVal(switchNames[i], switchVals[i]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Executes this command, with the behaviour being defined by its ArgSpec object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore object for this command to operate on."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If an exceptional condition is encountered during execution of the command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        spec.execute(core, this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Initialises a particular switch to a particular value, if allowed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param switchName The name of the switch to be initialised."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param value The value to initialise it to."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeHelpException If the switch is already initialised, if {@code switchName} is null, if the switch"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *      should not have an argument but {@code value} is not null, or if the switch should have an argument but"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * {@code value} is null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void initSwitchVal(String switchName, String value) throws DukeHelpException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Switch newSwitch \u003d getSwitchMap().get(switchName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (getSwitchVals().containsKey(switchName)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"Multiple values supplied for switch: \" + switchName, this);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (newSwitch \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"I don\u0027t know what the \u0027\" + switchName + \"\u0027 switch is!\", this);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (newSwitch.argLevel \u003d\u003d ArgLevel.NONE \u0026\u0026 value !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"The \u0027\" + switchName + \"\u0027 switch should not have an argument!\", this);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (newSwitch.argLevel \u003d\u003d ArgLevel.REQUIRED \u0026\u0026 value \u003d\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"The \u0027\" + switchName + \"\u0027 switch should have an argument!\", this);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchVals.put(switchName, value);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getSwitchVal(String switchName) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchVals.get(switchName);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean isSwitchSet(String switchName) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchVals.containsKey(switchName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Initialises the command\u0027s argument to a particular value, if allowed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param arg The value to initialise the command\u0027s argument to."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeHelpException If the argument is already initialised, if the command should not have an argument but"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * {@code value} is not null, or if the command should have an argument but {@code value} is null."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void initArg(String arg) throws DukeHelpException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArgLevel cmdArgLevel \u003d getCmdArgLevel();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmdArgLevel \u003d\u003d ArgLevel.REQUIRED \u0026\u0026 arg \u003d\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"This command requires an argument!\", this);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (cmdArgLevel \u003d\u003d ArgLevel.NONE \u0026\u0026 arg !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"This command should not have an argument!\", this);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (this.arg !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"Multiple command arguments supplied! You already gave: \" + this.arg, this);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getArg() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return arg;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgLevel getCmdArgLevel() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec.getCmdArgLevel();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, Switch\u003e getSwitchMap() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec.getSwitchMap();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchAliases() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec.getSwitchAliases();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchVals() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return Collections.unmodifiableMap(switchVals);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks if a particular switch, and if not, attempts to parse it as an Integer."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param switchName The name of the switch being extracted."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The Integer that the string represents, or -1 if it is null."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws NumberFormatException If the string is not a valid representation of an integer."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Integer switchToInt(String switchName) throws DukeHelpException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String str \u003d this.getSwitchVal(switchName);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                Integer parseInt \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                // TODO document this"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (parseInt \u003c 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    throw new DukeHelpException(\"The value of \u0027\" + switchName + \"\u0027 cannot be negative!\", this);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return parseInt;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (NumberFormatException excp) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"The switch \u0027\" + switchName + \"\u0027 must be an integer!\", this);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Sets the arguments for optional switches that require String-type arguments to the empty String."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * NOTE: Switches with ArgLevel.OPTIONAL are ignored by this method."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void nullToEmptyString() throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Map.Entry\u003cString, Switch\u003e entry : getSwitchMap().entrySet()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String switchName \u003d entry.getKey();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Switch switchSpec \u003d entry.getValue();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (getSwitchVal(switchName) \u003d\u003d null \u0026\u0026 switchSpec.type \u003d\u003d String.class \u0026\u0026 switchSpec.argLevel"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    \u003d\u003d ArgLevel.REQUIRED) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                initSwitchVal(switchName, \"\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks for equality with another ArgCommand object, inspecting arguments and switches."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param other The ArgCommand object to check against."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return True if all switches that are set in one ArgCommand are set in the other, and if all switches that are"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *     set are set to the same value."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(ArgCommand other) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (getClass() !\u003d other.getClass()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!CommandUtils.equalsIfNotBothNull(arg, other.arg)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, String\u003e thisSwitchVals \u003d getSwitchVals();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, String\u003e otherSwitchVals \u003d other.getSwitchVals();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String switchName : getSwitchMap().keySet()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if ((otherSwitchVals.containsKey(switchName) \u0026\u0026 !thisSwitchVals.containsKey(switchName))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    || (!otherSwitchVals.containsKey(switchName) \u0026\u0026 thisSwitchVals.containsKey(switchName))"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    || !CommandUtils.equalsIfNotBothNull(thisSwitchVals.get(switchName),"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    otherSwitchVals.get(switchName))) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Check if the argument (if required) and all required switches are set."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeHelpException If the argument (if required) or any required switches are not set."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void checkCommandValid() throws DukeHelpException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (getCmdArgLevel() \u003d\u003d ArgLevel.REQUIRED \u0026\u0026 getArg() \u003d\u003d null) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"You need to give an argument for the command!\", this);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (HashMap.Entry\u003cString, Switch\u003e switchEntry : getSwitchMap().entrySet()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Switch checkSwitch \u003d switchEntry.getValue();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!checkSwitch.isOptional \u0026\u0026 !switchVals.containsKey(checkSwitch.name)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"You need to set this switch: \""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        + switchEntry.getKey(), this);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean isArgForbidden(String switchName) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSwitchMap().get(switchName).argLevel \u003d\u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean hasSwitch(String switchName) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSwitchMap().containsKey(switchName);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean hasNoSwitches() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSwitchMap().size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 220,
      "-": 14,
      "JeremyKwok": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ArgLevel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public enum ArgLevel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    NONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    REQUIRED,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    OPTIONAL"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 7
    }
  },
  {
    "path": "src/main/java/duke/command/ArgParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ArgParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    enum ParseState {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        EMPTY, //not parsing anything currently"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ARG, //parsing a single-word argument for a switch or the command itself"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        STRING, //parsing a quoted string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        SWITCH //parsing a switch name"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ArgCommand currCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private StringBuilder elementBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ParseState state;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private String currSwitchName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private boolean isEscaped;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Parses the user\u0027s input after the Command name and loads the parameters for the Command from it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param inputStr The input provided by the user for this command, without the command keyword and stripped."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If input was in the wrong format, contained invalid values, or was otherwise unable to be"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                       parsed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseArgument(ArgCommand command, String inputStr) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currCommand \u003d command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        assert (!inputStr.contains(\"\\r\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currSwitchName \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        elementBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        isEscaped \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //FSM :D"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 0; i \u003c inputStr.length(); ++i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            char curr \u003d inputStr.charAt(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (state) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case EMPTY:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleEmpty(curr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case ARG:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleArg(curr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case STRING:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleString(curr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case SWITCH:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleSwitch(curr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Invalid parser state!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //cleanup and check if states exited correctly"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (state) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case EMPTY:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case STRING: //fallthrough; assume the user forgot to close the string"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case ARG:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            writeElement();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case SWITCH:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"Invalid parser state!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currCommand.initSwitchVal(currSwitchName, null);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currCommand.checkCommandValid();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleEmpty(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.SWITCH;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.STRING;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027: //skip spaces"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.ARG;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleArg(char curr) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Unescaped double quotes in argument: \" + elementBuilder.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Unescaped hyphen in argument: \" + elementBuilder.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                isEscaped \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeElement();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            isEscaped \u003d false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleString(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeElement();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                isEscaped \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            isEscaped \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleSwitch(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.STRING;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void writeElement() throws DukeHelpException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName \u003d\u003d null \u0026\u0026 currCommand.getArg() !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"I don\u0027t know what you\u0027re trying to tell me with the word \u0027\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            + elementBuilder.toString() + \"\u0027!\", currCommand);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // if ambiguous whether argument is for command or switch, favour switch"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName !\u003d null) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (currCommand.isArgForbidden(currSwitchName)) { // switch should not have arguments"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                currCommand.initSwitchVal(currSwitchName, null);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                currCommand.initArg(elementBuilder.toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                currCommand.initSwitchVal(currSwitchName, elementBuilder.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currSwitchName \u003d null;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else { //currCommand.arg \u003d\u003d null"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currCommand.initArg(elementBuilder.toString());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        elementBuilder.setLength(0); //clear elementBuilder"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void addSwitch() throws DukeHelpException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newSwitchName \u003d elementBuilder.toString().toLowerCase();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // if previous switch was not given an argument, set to null"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName !\u003d null) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currCommand.initSwitchVal(currSwitchName, null);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // search for switch name in switch name map, then use algorithm to find it if necessary"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!currCommand.hasSwitch(newSwitchName)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String findSwitchName \u003d CommandUtils.findSwitch(newSwitchName, currCommand);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (findSwitchName \u003d\u003d null) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"I don\u0027t know what this switch is: \" + newSwitchName, currCommand);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newSwitchName \u003d findSwitchName;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currSwitchName \u003d newSwitchName;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        elementBuilder.setLength(0); //clear elementBuilder"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 206
    }
  },
  {
    "path": "src/main/java/duke/command/ArgSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract class for the argument specification for a particular class. Although Java does not provide a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * mechanism to enforce or document this contract, any subclass of ArgSpec must have a private constructor which sets"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * {@code cmdArgLevel} and {@code emptyArgMsg}, and which calls {@code switchInit()}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public abstract class ArgSpec extends CommandSpec {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgLevel cmdArgLevel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Map\u003cString, Switch\u003e switchMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Map\u003cString, String\u003e switchAliases;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgCommand cmd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Set {@code cmd} to the supplied command, exposing access to the switches supplied to it, and perform the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * operations specified by this CommandSpec object\u0027s {@code execute(DukeCore core)} method, using the supplied"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * switches to modify behaviour."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore object to use to execute the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param cmd The ArgCommand instance being executed, holding the relevant switches."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see DukeCore"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see ArgCommand"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If an error occurs during command execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core, ArgCommand cmd) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        execute(core);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.cmd \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgLevel getCmdArgLevel() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return cmdArgLevel;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, Switch\u003e getSwitchMap() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchMap;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchAliases() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchAliases;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void initSwitches(Switch... switches) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, Switch\u003e tempSwitchMap \u003d new HashMap\u003cString, Switch\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, String\u003e tempSwitchAliases \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Set\u003cString\u003e switchRootSet \u003d new HashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Switch currSwitch : switches) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // create map of switch names to switch objects"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String name \u003d currSwitch.name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (!tempSwitchMap.containsKey(name));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            tempSwitchMap.put(name, currSwitch);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // extract prefixes to build lookup table"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (name.startsWith(currSwitch.root));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (!switchRootSet.contains(currSwitch.root));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switchRootSet.add(currSwitch.root);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (int j \u003d currSwitch.root.length(); j \u003c\u003d name.length(); ++j) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                tempSwitchAliases.put(name.substring(0, j), name);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // extract remaining aliases"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (String alias : currSwitch.aliases) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                tempSwitchAliases.put(alias, name);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchMap \u003d Collections.unmodifiableMap(tempSwitchMap);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchAliases \u003d Collections.unmodifiableMap(tempSwitchAliases);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 80
    }
  },
  {
    "path": "src/main/java/duke/command/BackSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class BackSpec extends CommandSpec {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final BackSpec spec \u003d new BackSpec();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static BackSpec getSpec() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.uiContext.moveBackOneContext();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ByeSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ByeSpec extends CommandSpec {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ByeSpec spec \u003d new ByeSpec();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ByeSpec getSpec() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeFatalException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.ui.showInfoDialog(\"Dr. Duke\", \"Thank you for using Dr. Duke. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.stop();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 3,
      "aquohn": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Highest-level abstract class for Command objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected final CommandSpec spec;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Command(CommandSpec spec) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.spec \u003d spec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the command using the parameters loaded with Command\u0027s parse method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore object for this command to operate on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If command fails to execute."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see DukeCore"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        spec.execute(core, this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    //TODO: replace with abstract function that actually prints excerpts from the user guide"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec.getHelp();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 15,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/command/CommandSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public abstract class CommandSpec {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Command cmd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Set {@code cmd} to the supplied command, exposing access to the switches supplied to it, and perform the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * operations specified by this CommandSpec object\u0027s {@code execute(DukeCore core)} method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore object to use to execute the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param cmd The command instance being executed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see DukeCore"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If an error occurs during command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core, Command cmd) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        execute(core);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.cmd \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected abstract void execute(DukeCore core) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Returns a string describing the operation and effect of this command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The help string for this command, typically an excerpt of the user guide."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return \"https://github.com/AY1920S1-CS2113-T14-1/main/blob/master/docs/UserGuide.adoc\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 35
    }
  },
  {
    "path": "src/main/java/duke/command/CommandUtils.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeUtilException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Functions for command autocompletion and autocorrection."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class CommandUtils {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * For autocorrect, do not consider strings whose lengths differ from the input by more than this value."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final int MAX_LEN_DIFF \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final Map\u003cCharacter, Coord\u003e keyboardMap \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.ofEntries(Map.entry(\u0027q\u0027, new Coord(0, 1)), Map.entry(\u0027w\u0027, new Coord(1, 1)),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027e\u0027, new Coord(2, 1)), Map.entry(\u0027r\u0027, new Coord(3, 1)),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027t\u0027, new Coord(4, 1)), Map.entry(\u0027y\u0027, new Coord(5, 1)),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027u\u0027, new Coord(6, 1)), Map.entry(\u0027i\u0027, new Coord(7, 1)),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027o\u0027, new Coord(8, 1)), Map.entry(\u0027p\u0027, new Coord(9, 1)),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027a\u0027, new Coord(0, 2)), Map.entry(\u0027z\u0027, new Coord(0, 3)),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027s\u0027, new Coord(1, 2)), Map.entry(\u0027x\u0027, new Coord(1, 3)),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027d\u0027, new Coord(2, 2)), Map.entry(\u0027c\u0027, new Coord(2, 3)),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027f\u0027, new Coord(3, 2)), Map.entry(\u0027b\u0027, new Coord(4, 3)),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027m\u0027, new Coord(5, 3)), Map.entry(\u0027j\u0027, new Coord(6, 2)),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027g\u0027, new Coord(4, 2)), Map.entry(\u0027h\u0027, new Coord(5, 2)),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027k\u0027, new Coord(7, 2)), Map.entry(\u0027l\u0027, new Coord(8, 2)),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027v\u0027, new Coord(3, 3)), Map.entry(\u0027n\u0027, new Coord(5, 3)),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u00271\u0027, new Coord(0, 0)), Map.entry(\u00272\u0027, new Coord(1, 0)),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u00273\u0027, new Coord(2, 0)), Map.entry(\u00274\u0027, new Coord(3, 0)),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u00275\u0027, new Coord(4, 0)), Map.entry(\u00276\u0027, new Coord(5, 0)),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u00277\u0027, new Coord(6, 0)), Map.entry(\u00278\u0027, new Coord(7, 0)),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u00279\u0027, new Coord(8, 0)), Map.entry(\u00270\u0027, new Coord(9, 0)),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027[\u0027, new Coord(10, 1)), Map.entry(\u0027]\u0027, new Coord(9, 1)),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027;\u0027, new Coord(9, 2)), Map.entry(\u0027\\\u0027\u0027, new Coord(10, 2)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027,\u0027, new Coord(8, 3)), Map.entry(\u0027.\u0027, new Coord(9, 3)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027/\u0027, new Coord(10, 3)), Map.entry(\u0027-\u0027, new Coord(10, 0)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    Map.entry(\u0027+\u0027, new Coord(11, 0)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final Map\u003cCharacter, Integer\u003e charMap;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    static class Coord {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        private int xcoord;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        private int ycoord;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Coord(int x, int y) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            this.xcoord \u003d x;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            this.ycoord \u003d y;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HashMap\u003cCharacter, Integer\u003e tempMap \u003d new HashMap\u003cCharacter, Integer\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (char c : keyboardMap.keySet()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            tempMap.put(c, i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ++i;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        charMap \u003d Collections.unmodifiableMap(tempMap);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // I hate Java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Given a switch name provided by the user, finds the switch it is referring to, or the closest match,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * allowing the user to disambiguate."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param word    The name provided by the user, which may not match any switch."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param command The command that the word is supposed to be a switch for."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The full name of the switch of the command that matches the word."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static String findSwitch(String word, ArgCommand command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String corrStr \u003d command.getSwitchAliases().get(word);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (corrStr !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return corrStr;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int wordLen \u003d word.length();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HashMap\u003cString, String\u003e suggestions \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int minDist \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : command.getSwitchAliases().entrySet()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String alias \u003d entry.getKey();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (Math.abs(alias.length() - wordLen) \u003e MAX_LEN_DIFF) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int dist \u003d stringDistance(alias, word, minDist);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (dist \u003c minDist) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    suggestions.clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    suggestions.put(entry.getValue(), entry.getKey());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    minDist \u003d dist;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                } else if (dist \u003d\u003d minDist) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    suggestions.put(entry.getValue(), entry.getKey());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                } //ignore if dist \u003e minDist"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return disambiguateSwitches(word, suggestions, command.getSwitchMap().keySet());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Identifies a switch which is not matched exactly. Returns the closest match if it exists, and provides the user"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * with a window offering the choice between the closest possible options and a list of valid options otherwise,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * including the choice to enter his own input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param word        The user-provided switch name."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param suggestions A map of the closest matching switch aliases to the switch names they represent."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param valid       The set of valid switches for this command."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The string that the user has selected."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static String disambiguateSwitches(String word, HashMap\u003cString, String\u003e suggestions, Set\u003cString\u003e valid) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(\"I didn\u0027t understand \u0027\").append(word)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(\"\u0027. Here are the closest matches:\").append(System.lineSeparator());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : suggestions.entrySet()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            builder.append(\"  \").append(i).append(\". \u0027\").append(entry.getKey())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    .append(\"\u0027 - for switch \u0027\").append(entry.getValue()).append(\"\u0027\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    .append(System.lineSeparator());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ++i;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        builder.append(System.lineSeparator()).append(\"Enter the number corresponding to a suggestion to\")"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(\"select it, or enter the full form of one of the valid options listed below:\")"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(System.lineSeparator()).append(System.lineSeparator()).append(\"  \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String validStr : valid) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            builder.append(validStr).append(\", \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //delete trailing comma and add newline"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        builder.delete(builder.length() - 2, builder.length()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String selectedStr \u003d \"\"; //TODO: get from user"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return selectedStr;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Algorithm to compute a hybrid version of the Damerau-Levenshtein distance that takes into account distance"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * between keys on a standard QWERTY keyboard when computing substitution cost. Search is pruned if it exceeds"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the minimum distance found so far, returning the distance computed up to that point."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str1 The first string to compare."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str2 The second string to compare."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param minDist The minimum string distance found so far, or 0 if no distance computations have been"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                performed yet."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The hybrid Damerau-Levenshtein distance between str1 and str2."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static int stringDistance(String str1, String str2, int minDist) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: use logging library, collected data can help optimise distance weights"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //setup values"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int len1 \u003d str1.length();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int len2 \u003d str2.length();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int[] d1 \u003d new int[keyboardMap.size()]; //values initialised to 0"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int[][] d \u003d new int[len1 + 2][len2 + 2];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int maxdist \u003d len1 + len2;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //populate boundary values"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        d[0][0] \u003d maxdist;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d len1 + 1; ++i) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            d[i][0] \u003d maxdist;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            d[i][1] \u003d i;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int j \u003d 1; j \u003c\u003d len2 + 1; ++j) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            d[0][j] \u003d maxdist;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            d[1][j] \u003d j;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 2; i \u003c\u003d len1 + 1; ++i) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            int d2 \u003d 2;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            char c1 \u003d str1.charAt(i - 2);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (int j \u003d 2; j \u003c\u003d len2 + 1; ++j) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int k \u003d d1[charMap.get(str2.charAt(j - 2))];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int l \u003d d2;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int subCostInc;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                char c2 \u003d str2.charAt(j - 2);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (c1 \u003d\u003d c2) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    subCostInc \u003d 0;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    d2 \u003d j;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    // TODO: implement scaling factor?"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    subCostInc \u003d Math.abs(keyboardMap.get(c1).xcoord - keyboardMap.get(c2).xcoord)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            + Math.abs(keyboardMap.get(c1).ycoord - keyboardMap.get(c2).ycoord);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                //calculate cost of each edit and find minimum"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int subCost \u003d d[i - 2][j - 2] + subCostInc;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int insCost \u003d d[i - 1][j - 2] + 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int delCost \u003d d[i - 2][j - 1] + 1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int transCost \u003d d[k - 2][l - 2] + (i - k - 3) + 1 + (j - l - 3);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                List\u003cInteger\u003e costs \u003d Arrays.asList(subCost, insCost, delCost, transCost);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                // TODO: verify that this pruning works; won\u0027t work if the distance decreases as it converges"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int min \u003d Collections.min(costs);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                assert (min !\u003d 0);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (min \u003e minDist \u0026\u0026 minDist !\u003d 0) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    return min;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    d[i - 1][j - 1] \u003d min;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            d1[charMap.get(str1.charAt(i - 2))] \u003d i;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return d[len1 + 1][len2 + 1];"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO might move these to respective DukeObjects"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Find a {@code Patient} with the supplied identifier. Only 1 of either bed number or displayed index"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * should be used to identify said patient."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core  DukeCore object."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param bedNo Bed number of patient."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param nameOrIdx Displayed index of patient (Home context), or name of Patient."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Patient object"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If 1 of the following 3 conditions applies."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       1. No identifier is provided."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       2. 2 identifiers are provided."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       3. 1 unique identifier is provided but said patient does not exist."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static Patient findFromHome(DukeCore core, String bedNo, String nameOrIdx) throws DukeException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (nameOrIdx \u003d\u003d null \u0026\u0026 bedNo \u003d\u003d null) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeUtilException(\"Please provide a way to identify the patient! Patients can be searched for\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    + \"by name/index or by bed.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (nameOrIdx !\u003d null \u0026\u0026 bedNo !\u003d null) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeUtilException(\"I don\u0027t know if you want me to find the patient \");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (bedNo !\u003d null) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return core.patientList.getPatient(bedNo);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int index \u003d idxFromString(nameOrIdx);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // TODO: Law of demeter"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            List\u003cDukeObject\u003e patientList \u003d core.ui.getIndexedList(\"patient\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            int count \u003d patientList.size();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (index \u003e count) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"I have only \" + ((count \u003d\u003d 1) ? (\"1 patient\") : (count + \"patients\")) + \" in \""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        + \"my list!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return (Patient) patientList.get(index - 1);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO proper searching"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return core.patientList.findPatientsByName(nameOrIdx).get(0);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Find a {@code DukeObject} with the supplied identifier. Only 1 of either name or displayed index should be used"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * to identify said DukeObject."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core    DukeCore object."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param patient Patient object."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param type    Type of DukeObject."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param nameOrIdx   Name of DukeObject or displayed index."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return DukeObject object,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If 1 of the following 3 conditions applies."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       1. No identifier is provided."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       2. 2 identifiers are provided."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       3. 1 unique identifier is provided but said DukeObject does not exist."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static DukeObject findFromPatient(DukeCore core, Patient patient, String type, String nameOrIdx)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int index \u003d idxFromString(nameOrIdx);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return core.ui.getIndexedList(type).get(index - 1);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"No such \" + type + \" exists in the list!\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO proper search"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArrayList\u003cDukeObject\u003e resultList \u003d new ArrayList\u003cDukeObject\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findImpressionsByName(nameOrIdx));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findCriticalsByName(nameOrIdx));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findFollowUpsByName(nameOrIdx));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (\"impression\".equals(type)) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findImpressionsByName(nameOrIdx));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else if (\"critical\".equals(type)) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findCriticalsByName(nameOrIdx));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                resultList.addAll(patient.findFollowUpsByName(nameOrIdx));"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (resultList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeUtilException(\"Can\u0027t find anything with those search parameters!\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return resultList.get(0);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Extracts an index from a string argument."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param inputStr The string to parse, generally a command argument."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The index represented by the string, or -1 if the string does not represent an index."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static int idxFromString(String inputStr) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return Integer.parseInt(inputStr);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (NumberFormatException excp) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks two possibly-null strings for equality in a null-safe way."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str1 The first string to compare."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str2 The second string to compare."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return True if the strings are both null, or both equal. False otherwise."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static boolean equalsIfNotBothNull(String str1, String str2) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (str1 !\u003d null) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return str1.equals(str2);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return str2 \u003d\u003d null;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 46,
      "aquohn": 282
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "// TODO: Write different commands for different contexts?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeDischargeSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeFindSpec;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeHistorySpec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeNewSpec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeOpenSpec;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeReportSpec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionDeleteSpec;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionEditSpec;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionFindSpec;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionMoveSpec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionNewSpec;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionPrimarySpec;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionPrioritySpec;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionResultSpec;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionStatusSpec;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientDeleteSpec;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientDischargeSpec;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientEditSpec;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientFindSpec;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientHistorySpec;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientNewSpec;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientOpenSpec;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientPrimarySpec;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientReportSpec;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Maintains the associations between command keywords and commands (e.g. \"list\" -\u003e ListCommand). For use in parsing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs and returns the command corresponding to a name provided by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param cmdStr The user-provided name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The newly constructed command without any parameters loaded."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Command getCommand(String cmdStr, Context context) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // check context-independent switches first"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (cmdStr) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new Command(ByeSpec.getSpec());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new Command(BackSpec.getSpec());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"up\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new Command(UpSpec.getSpec());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break; //not one of these; continue"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (context) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case HOME:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (cmdStr) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeFindSpec.getSpec());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"new\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeNewSpec.getSpec());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"open\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeOpenSpec.getSpec());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"report\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeReportSpec.getSpec());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"discharge\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeDischargeSpec.getSpec());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"history\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(HomeHistorySpec.getSpec());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case PATIENT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (cmdStr) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"new\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientNewSpec.getSpec());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientFindSpec.getSpec());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"report\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new Command(PatientReportSpec.getSpec());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"discharge\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientDischargeSpec.getSpec());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientDeleteSpec.getSpec());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"primary\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientPrimarySpec.getSpec());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientEditSpec.getSpec());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"history\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientHistorySpec.getSpec());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"open\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(PatientOpenSpec.getSpec());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case IMPRESSION:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (cmdStr) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"new\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionNewSpec.getSpec());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionEditSpec.getSpec());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionFindSpec.getSpec());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"move\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionMoveSpec.getSpec());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionDeleteSpec.getSpec());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"result\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionResultSpec.getSpec());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"priority\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionPrioritySpec.getSpec());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"status\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new ArgCommand(ImpressionStatusSpec.getSpec());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"primary\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new Command(ImpressionPrimarySpec.getSpec());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case TREATMENT:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (\"status\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                //return new TreatmentStatusCommand();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case INVESTIGATION:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (\"result\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                //return new InvxResultCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case EVIDENCE:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 7,
      "aquohn": 118,
      "-": 9,
      "JeremyKwok": 6
    }
  },
  {
    "path": "src/main/java/duke/command/Executor.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for executing user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeCore core;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an Executor object with the defined core."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core Core of Dr. Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Executor(DukeCore core) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.core \u003d core;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes the specified command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param command Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If there is an error executing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        command.execute(core);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 30
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeUtilException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.UiContext;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static java.lang.Math.min;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Class for parsing user input from the UI in order to construct Commands of the appropriate type and parameters,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * and execute them. The static initializer generates a static map from Cmd enum values to allow fast lookup of"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * command types."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final Commands commands;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final UiContext uiContext;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final ArgParser argParser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs a new Parser, generating a HashMap from an array of enum values to allow fast lookup of command types."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Parser(UiContext uiContext, Commands commands) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.uiContext \u003d uiContext;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.argParser \u003d new ArgParser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs a new Parser, using the Cmd enum to supply the command names."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Parser(UiContext uiContext) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this(uiContext, new Commands());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Command of the type requested by the user, and extracts the necessary data for the command from"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the arguments. Literal line separators in the text will be converted to \\n for consistency."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param inputStr The input to the command line"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A new instance of the Command object requested"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If there is no matching command or the arguments do not meet the command\u0027s requirements."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parse(String inputStr) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        inputStr \u003d inputStr.replace(\"\\t\", \"    \"); //sanitise input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int spaceIdx \u003d inputStr.indexOf(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int sepIdx \u003d inputStr.indexOf(System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String cmdStr \u003d inputStr;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!(spaceIdx \u003d\u003d -1 \u0026\u0026 sepIdx \u003d\u003d -1)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (spaceIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, sepIdx);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else if (sepIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, spaceIdx);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, min(sepIdx, spaceIdx));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Command command \u003d commands.getCommand(cmdStr, uiContext.getContext());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t recognise this command: \" + cmdStr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: autocorrect system"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // trim command and first space after it from input if needed, and standardise newlines"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command instanceof ArgCommand) { // stripping not required otherwise"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //standardise line separators for internal manipulation"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputStr \u003d inputStr.replaceAll(\"(\\\\r\\\\n|\\\\n|\\\\r)\", \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                argParser.parseArgument((ArgCommand) command, inputStr.substring(cmdStr.length()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (DukeUtilException excp) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(excp.getMessage(), command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 7,
      "aquohn": 43,
      "-": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Switch.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * A switch for a command, with various specified properties."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class Switch {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final Class type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final boolean isOptional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final ArgLevel argLevel;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final String root;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Construct a new Switch object, describing the properties of the switch."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param name       The full name of the switch, which will be internally lowercased."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param type       The expected type of the switch. If there is more than one possible type, specify \"String\" and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                   parse and differentiate within the command itself."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param isOptional Whether or not the switch is optional."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param argLevel   The requirement for an argument for this switch."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param root       The shortest prefix of this switch by which it can be unambiguously recognised."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param aliases    Any other names for this switch that do not constitute a prefix for it."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Switch(String name, Class type, boolean isOptional, ArgLevel argLevel, String root, String... aliases) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.name \u003d name.toLowerCase();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.isOptional \u003d isOptional;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.argLevel \u003d argLevel;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.root \u003d root;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.aliases \u003d List.of(aliases);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 36
    }
  },
  {
    "path": "src/main/java/duke/command/UpSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class UpSpec extends CommandSpec {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final UpSpec spec \u003d new UpSpec();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static UpSpec getSpec() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.uiContext.moveUpOneContext();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 10,
      "aquohn": 7
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeDischargeSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeDischargeSpec extends ArgSpec {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final HomeDischargeSpec spec \u003d new HomeDischargeSpec();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String header \u003d \"DISCHARGED PATIENT REPORT\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String explanation \u003d \"This report shows all the data that was stored about a patient at the \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            + \"time the report was created.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String result \u003d \"Patient discharged. A discharge report have been created.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static HomeDischargeSpec getSpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HomeDischargeSpec() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.OPTIONAL, \"sum\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String bed \u003d cmd.getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d CommandUtils.findFromHome(core, bed, cmd.getArg());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HomeReportSpec.createReport(patient, header, explanation, cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientList.deletePatient(patient.getBedNo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(result);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 40
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeFindSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeFindSpec extends ArgSpec {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final HomeFindSpec spec \u003d new HomeFindSpec();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static HomeFindSpec getSpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HomeFindSpec() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"patient\", String.class, true, ArgLevel.NONE, \"p\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.NONE, \"i\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.NONE, \"e\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.NONE, \"t\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchTerm \u003d cmd.getArg();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeObject\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.hasNoSwitches()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            resultList \u003d core.patientList.find(searchTerm);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArrayList\u003cPatient\u003e filteredPatients \u003d core.patientList.findPatient(searchTerm);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (Patient patient : filteredPatients) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (cmd.isSwitchSet(\"patient\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    resultList.add(patient);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                ArrayList\u003cImpression\u003e impressionResult \u003d patient.findImpressions(searchTerm);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                for (Impression imp : impressionResult) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    if (cmd.isSwitchSet(\"impression\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        resultList.add(imp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    if (cmd.isSwitchSet(\"evidence\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        resultList.addAll(imp.findEvidences(searchTerm));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    if (cmd.isSwitchSet(\"treatment\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        resultList.addAll(imp.findTreatments(searchTerm));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.showSearchResults(searchTerm, resultList, null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 42,
      "JeremyKwok": 19
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeHistorySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHistorySpec extends ArgSpec {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final HomeHistorySpec spec \u003d new HomeHistorySpec();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static HomeHistorySpec getSpec() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HomeHistorySpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"message\", String.class, false, ArgLevel.REQUIRED, \"m\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"rewrite\", String.class, true, ArgLevel.REQUIRED, \"r\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String bed \u003d cmd.getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d CommandUtils.findFromHome(core, bed, cmd.getArg());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String patientDetails \u003d cmd.getArg() + \", \" + patient.getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String message \u003d cmd.getSwitchVal(\"message\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String rewrite \u003d cmd.getSwitchVal(\"rewrite\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newHistory \u003d message;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (rewrite !\u003d null \u0026\u0026 (rewrite.toLowerCase().equals(\"y\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                || rewrite.toLowerCase().equals(\"yes\") || rewrite.toLowerCase().equals(\"ye\"))) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setHistory(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newHistory \u003d patient.appendHistory(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"History of \" + patientDetails + \" updated with:\\n\" + newHistory + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 29,
      "JeremyKwok": 15
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeNewSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeNewSpec extends ArgSpec {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final HomeNewSpec spec \u003d new HomeNewSpec();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static HomeNewSpec getSpec() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HomeNewSpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"name\", String.class, false, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"bed\", String.class, false, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"allergies\", String.class, false, ArgLevel.REQUIRED, \"a\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        \"allergy\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"height\", Integer.class, true, ArgLevel.REQUIRED, \"h\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"weight\", Integer.class, true, ArgLevel.REQUIRED, \"w\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"age\", Integer.class, true, ArgLevel.REQUIRED, \"ag\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"number\", Integer.class, true, ArgLevel.REQUIRED, \"num\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"address\", String.class, true, ArgLevel.REQUIRED, \"ad\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.REQUIRED, \"hi\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"go\", String.class, true, ArgLevel.NONE, \"g\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //ideally, we would pass an array of objects"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmd.nullToEmptyString(); //set optional string parameters to \"\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer height \u003d cmd.switchToInt(\"height\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer weight \u003d cmd.switchToInt(\"weight\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer age \u003d cmd.switchToInt(\"age\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer number \u003d cmd.switchToInt(\"number\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String bed \u003d cmd.getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String address \u003d cmd.getSwitchVal(\"address\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String history \u003d cmd.getSwitchVal(\"history\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: format checks for bed number?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Patient patient : core.patientList.getPatientList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (patient.getBedNo().equals(bed)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"There is already a patient at that bed!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d new Patient(cmd.getSwitchVal(\"name\"), bed,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmd.getSwitchVal(\"allergies\"), height, weight, age, number,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                address, history);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientList.addPatient(patient);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Patient added.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.isSwitchSet(\"go\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.PATIENT, patient);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 2,
      "aquohn": 62
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeOpenSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HomeOpenSpec extends ArgSpec {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final HomeOpenSpec spec \u003d new HomeOpenSpec();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static HomeOpenSpec getSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private HomeOpenSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.NONE, \"im\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String bed \u003d cmd.getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d CommandUtils.findFromHome(core, bed, cmd.getArg());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.isSwitchSet(\"impression\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Impression primaryDiagnosis \u003d patient.getPrimaryDiagnosis();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (primaryDiagnosis !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.uiContext.setContext(Context.PATIENT, patient);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.uiContext.setContext(Context.IMPRESSION, primaryDiagnosis);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.updateUi(\"Accessing primary diagnosis of \" + patient.getName());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(patient.getName() + \" has no primary diagnosis at the moment!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.PATIENT, patient);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.updateUi(\"Accessing details of \" + patient.getName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 15,
      "aquohn": 33
    }
  },
  {
    "path": "src/main/java/duke/command/home/HomeReportSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.home;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeReportSpec extends ArgSpec {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final HomeReportSpec spec \u003d new HomeReportSpec();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static HomeReportSpec getSpec() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HomeReportSpec() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.OPTIONAL, \"sum\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String header \u003d \"PATIENT REPORT\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String explanation \u003d \"This report shows all the data that was stored about a patient at the time the report was\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" created.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (core.patientList.getPatient(cmd.getSwitchVal(\"bed\")) !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            createReport(core.patientList.getPatient(cmd.getSwitchVal(\"bed\")), header, explanation,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            core.updateUi(\"Patient report created for \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    + core.patientList.getPatient(cmd.getSwitchVal(\"bed\")).getName());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a report file for a patient."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param patient The patient that the report will be created for."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param header The header of the report."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param explanation An explanation that describes what the report will contain."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param summary A summary that the doctor can write for the report, for example why the report is written."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createReport(Patient patient, String header, String explanation, String summary)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            throws DukeFatalException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data/reports\" + File.separator + patient.getName() + \"-\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    + patient.getBedNo() + \".txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.write(header + \"\\n\\n\" + explanation + \"\\n\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            if (summary !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                fileWriter.write(\"Report Summary: \" + summary + \"\\n\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.write(\"Patient Data;\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.write(patient.toReportString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeFatalException(\"Unable to create report! Some data may have been lost,\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 22,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/command/impression/DukeDataSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public abstract class DukeDataSpec extends ArgSpec {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final Map\u003cString, Class\u003e typeMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"medicine\", Medicine.class),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"plan\", Plan.class),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"investigation\", Investigation.class),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"result\", Result.class),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"observation\", Observation.class));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO: change map to allowed switches, and code accordingly"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final Map\u003cString, List\u003cString\u003e\u003e forbiddenSwitchesMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"medicine\", Arrays.asList(\"summary\", \"subjective\", \"objective\")),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"plan\", Arrays.asList(\"dose\", \"duration\", \"date\", \"subjective\", \"objective\")),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"investigation\", Arrays.asList(\"dose\", \"duration\", \"date\", \"subjective\", \"objective\")),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"result\", Arrays.asList(\"dose\", \"duration\", \"date\", \"status\", \"subjective\", \"objective\")),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Map.entry(\"observation\", Arrays.asList(\"dose\", \"duration\", \"date\", \"status\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks if the type of data to add was uniquely specified."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The type of data specified amongst the switches for this Command, or null if none of them were given."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If multiple data type switches were specified."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected String uniqueDataType(ArgCommand cmd) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String addType \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String type : typeMap.keySet()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.isSwitchSet(type)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (addType !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    throw new DukeHelpException(\"Multiple types of data specified: \u0027\" + addType"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            + \"\u0027 and \u0027\" + type + \"\u0027!\", cmd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                addType \u003d type;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return addType;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void checkTypeSwitches(String addType, ArgCommand cmd) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // check if required switches are in place"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (\"medicine\".equals(addType)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.getSwitchVal(\"dose\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"I need to know the dose of this course of medicine!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.getSwitchVal(\"duration\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"I need to know how long this medicine will be given for!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        List\u003cString\u003e forbiddenSwitches \u003d forbiddenSwitchesMap.get(addType);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String switchName : forbiddenSwitches) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.isSwitchSet(switchName)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Illegal switch \u0027\" + switchName + \"\u0027 for data type \u0027\" + addType + \"\u0027!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Class getDataClass(String type) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return typeMap.get(type);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 75
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionDeleteSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionDeleteSpec extends ArgSpec {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionDeleteSpec spec \u003d new ImpressionDeleteSpec();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionDeleteSpec getSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionDeleteSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.REQUIRED, \"e\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.REQUIRED, \"t\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData delData \u003d ImpressionUtils.getData(cmd.getArg(), cmd.getSwitchVal(\"evidence\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmd.getSwitchVal(\"treatment\"), impression);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String delMsg \u003d \"\u0027\" + delData.getName() + \"\u0027 deleted!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (delData instanceof Evidence) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.deleteEvidence(delData.getName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (delData instanceof Treatment) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.deleteTreatment(delData.getName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(delMsg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 42
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionEditSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeUtilException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionEditSpec extends DukeDataSpec {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionEditSpec spec \u003d new ImpressionEditSpec();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionEditSpec getSpec() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionEditSpec() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"append\", null, true, ArgLevel.NONE, \"a\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"medicine\", null, true, ArgLevel.REQUIRED, \"m\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"investigation\", null, true, ArgLevel.REQUIRED, \"i\", \"invx\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"plan\", null, true, ArgLevel.REQUIRED, \"p\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"observation\", null, true, ArgLevel.REQUIRED, \"o\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"result\", null, true, ArgLevel.NONE, \"r\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"name\", String.class, true, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"status\", String.class, true, ArgLevel.REQUIRED, \"sta\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"priority\", Integer.class, true, ArgLevel.REQUIRED, \"pri\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.REQUIRED, \"sum\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"dose\", String.class, true, ArgLevel.REQUIRED, \"d\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"date\", String.class, true, ArgLevel.REQUIRED, \"da\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"duration\", String.class, true, ArgLevel.REQUIRED, \"du\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"subjective\", null, true, ArgLevel.NONE, \"sub\"),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"objective\", null, true, ArgLevel.NONE, \"obj\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"description\", String.class, true, ArgLevel.REQUIRED, \"desc\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO: split method to call one method per editType"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String editType \u003d uniqueDataType(cmd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData editData;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        boolean isAppending \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.isSwitchSet(\"append\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            isAppending \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (editType \u003d\u003d null) { // edit impression"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            editImpression(ImpressionUtils.getImpression(core), isAppending);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.isSwitchSet(\"description\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"Descriptions are only for impressions!\", cmd);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // find DukeData of editType"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO: proper search with disambiguation"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO: select by index"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String editDataName \u003d cmd.getSwitchVal(editType);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            List\u003cDukeData\u003e resultList \u003d ImpressionUtils.getImpression(core).find(editDataName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            editData \u003d findDataOfClass(resultList, getDataClass(editType));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (editData \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"I can\u0027t find a \" + editType + \" item named \u0027\" + editDataName + \"\u0027!\", cmd);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // process status"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (editType) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"plan\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                updateStatus(editData, Plan.getStatusArr());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"medicine\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                updateStatus(editData, Medicine.getStatusArr());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"investigation\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                updateStatus(editData, Investigation.getStatusArr());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // process remaining switches entered"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e entry : cmd.getSwitchVals().entrySet()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                String switchName \u003d entry.getKey();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                String entryStr \u003d entry.getValue();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int entryInt \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (Integer.class.equals(getSwitchMap().get(switchName).type)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    entryInt \u003d cmd.switchToInt(switchName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                // ignore switches that don\u0027t need processing"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (switchName.equals(editType)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                // TODO: deal with null"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                switch (switchName) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                case \"name\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    //TODO check for allergies for medicine"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    editData.setName((isAppending) ? editData.getName() + entryStr : entryStr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                case \"priority\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    if (entryInt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    ImpressionUtils.checkPriority(entryInt);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    editData.setPriority(entryInt);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                case \"summary\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    editData.setSummary((isAppending) ? editData.getSummary() + entryStr : entryStr);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    switch (editType) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    case \"medicine\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        Medicine med \u003d (Medicine) editData;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        switch (switchName) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        case \"dose\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            med.setDose((isAppending) ? med.getDose() + entryStr : entryStr);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        case \"date\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            med.setStartDate((isAppending) ? med.getStartDate() + entryStr : entryStr);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        case \"duration\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            med.setDuration((isAppending) ? med.getDuration() + entryStr : entryStr);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            throw new DukeHelpException(\"Medicine plans do not have the property: \u0027\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                                    + entryStr + \"\u0027\", cmd);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    case \"observation\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        Observation obsv \u003d (Observation) editData;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        if (cmd.isSwitchSet(\"objective\") \u0026\u0026 cmd.isSwitchSet(\"subjective\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            throw new DukeHelpException(\"I don\u0027t know if you want the observation to be objective\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                                    + \"or subjective!\", cmd);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        } else if (cmd.isSwitchSet(\"objective\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            obsv.setObjective(true);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        } else if (cmd.isSwitchSet(\"subjective\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            obsv.setObjective(false);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    case \"plan\": //fallthrough"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    case \"result\": //fallthrough"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    case \"investigation\": //all switches should already be handled"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        throw new DukeException(\"Invalid data type found when making edits!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Details updated\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void editImpression(Impression impression, boolean isAppending) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) impression.getParent();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newName \u003d cmd.getSwitchVal(\"name\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (newName !\u003d null) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.setName((isAppending) ? impression.getName() + newName : newName);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newDesc \u003d cmd.getSwitchVal(\"description\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (newDesc !\u003d null) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.setDescription((isAppending) ? impression.getDescription() + newDesc : newDesc);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO proper searching"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // simply gets the first search result with a matching class"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // this is a terrible method, kill it and replace it with proper disambiguation as soon as possible"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private DukeData findDataOfClass(List\u003cDukeData\u003e resultList, Class dataClass) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (DukeData result : resultList) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (result.getClass() \u003d\u003d dataClass) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void updateStatus(DukeData editData, List\u003cString\u003e statusList) throws DukeUtilException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String statusStr \u003d cmd.getSwitchVal(\"status\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (statusStr !\u003d null) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Treatment treatment \u003d (Treatment) editData;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            treatment.setStatusIdx(ImpressionUtils.processStatus(statusStr, statusList));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 205
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionFindSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.SearchResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class ImpressionFindSpec extends ArgSpec {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final ImpressionFindSpec spec \u003d new ImpressionFindSpec();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static ImpressionFindSpec getSpec() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ImpressionFindSpec() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.NONE, \"e\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.NONE, \"t\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchTerm \u003d cmd.getArg();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d (Impression) core.uiContext.getObject();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.getSwitchVals().isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            searchResult.addAll(impression.find(searchTerm));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.getSwitchVals().containsKey(\"evidence\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                searchResult.addAll(impression.findEvidences(searchTerm));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (cmd.getSwitchVals().containsKey(\"treatment\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                searchResult.addAll(impression.findTreatments(searchTerm));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!searchResult.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            SearchResult search \u003d new SearchResult(searchTerm, searchResult, impression);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.SEARCH, search);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.updateUi(\"Returning result of search of \" + searchTerm);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"There were no relevant treatments or evidences.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 34,
      "JeremyKwok": 22
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionMoveSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionMoveSpec extends ArgSpec {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionMoveSpec spec \u003d new ImpressionMoveSpec();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionMoveSpec getSpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionMoveSpec() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.REQUIRED, \"e\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.REQUIRED, \"t\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.REQUIRED, \"im\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: query user for correct impression if no impression is given"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String targetImpressionName \u003d cmd.getSwitchVal(\"impression\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression newImpression;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (\"\".equals(targetImpressionName)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO ask user to pick"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newImpression \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO: proper search"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            List\u003cImpression\u003e newImpressionList \u003d ImpressionUtils.getPatient(impression)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    .findImpressionsByName(targetImpressionName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (newImpressionList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Can\u0027t find an impression with that name!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newImpression \u003d newImpressionList.get(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData moveData \u003d ImpressionUtils.getData(cmd.getArg(), cmd.getSwitchVal(\"evidence\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmd.getSwitchVal(\"treatment\"), ImpressionUtils.getImpression(core));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        moveData.setParent(newImpression);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (moveData instanceof Evidence) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Evidence evidence \u003d (Evidence) moveData;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newImpression.addNewEvidence(evidence);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.deleteEvidence(evidence.getName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (moveData instanceof Treatment) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Treatment treatment \u003d (Treatment) moveData;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newImpression.addNewTreatment(treatment);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.deleteTreatment(treatment.getName());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"\u0027\" + moveData.getName() + \"\u0027 moved from \u0027\" + impression.getName() + \"\u0027 to \u0027\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                + newImpression.getName() + \"\u0027\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 67
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionNewSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionNewSpec extends DukeDataSpec {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionNewSpec spec \u003d new ImpressionNewSpec();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionNewSpec getSpec() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionNewSpec() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"medicine\", null, true, ArgLevel.NONE, \"m\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"investigation\", null, true, ArgLevel.NONE, \"i\", \"invx\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"plan\", null, true, ArgLevel.NONE, \"p\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"observation\", null, true, ArgLevel.NONE, \"o\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"result\", null, true, ArgLevel.NONE, \"r\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"go\", null, true, ArgLevel.NONE, \"g\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"name\", String.class, false, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"status\", String.class, true, ArgLevel.REQUIRED, \"sta\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"priority\", Integer.class, true, ArgLevel.REQUIRED, \"pri\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.REQUIRED, \"sum\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"dose\", String.class, true, ArgLevel.REQUIRED, \"d\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"date\", String.class, true, ArgLevel.REQUIRED, \"da\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"duration\", String.class, true, ArgLevel.REQUIRED, \"du\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"subjective\", null, true, ArgLevel.NONE, \"sub\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"objective\", null, true, ArgLevel.NONE, \"obj\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO refactor into 5 different methods for each type"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String addType \u003d uniqueDataType(cmd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (addType \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"No data type specified!\", cmd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        checkTypeSwitches(addType, cmd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData newData;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newStr;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //extract parameters and data type"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int priority \u003d cmd.switchToInt(\"priority\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (priority \u003d\u003d -1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            priority \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ImpressionUtils.checkPriority(priority);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmd.nullToEmptyString(); //set optional string parameters to \"\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int status;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (addType) { //isn\u0027t polymorphism fun?"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"medicine\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //TODO check for allergies"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            status \u003d ImpressionUtils.processStatus(cmd.getSwitchVal(\"status\"), Medicine.getStatusArr());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //TODO proper date parsing"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String startDate \u003d cmd.getSwitchVal(\"date\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (\"\".equals(startDate)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                startDate \u003d LocalDate.now().format(formatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Medicine medicine \u003d new Medicine(cmd.getSwitchVal(\"name\"), impression, priority, status,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"dose\"), startDate, cmd.getSwitchVal(\"duration\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.addNewTreatment(medicine);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newData \u003d medicine;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newStr \u003d \"New medicine course added:\\n\" + medicine.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"plan\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            status \u003d ImpressionUtils.processStatus(cmd.getSwitchVal(\"status\"), Plan.getStatusArr());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Plan plan \u003d new Plan(cmd.getSwitchVal(\"name\"), impression, priority, status,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.addNewTreatment(plan);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newData \u003d plan;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newStr \u003d \"New treatment plan item added:\\n\" + plan.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"investigation\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            status \u003d ImpressionUtils.processStatus(cmd.getSwitchVal(\"status\"), Investigation.getStatusArr());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Investigation invx \u003d new Investigation(cmd.getSwitchVal(\"name\"), impression, priority, status,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.addNewTreatment(invx);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newData \u003d invx;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newStr \u003d \"New investigation being tracked:\\n\" + invx.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"result\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Result result \u003d new Result(cmd.getSwitchVal(\"name\"), impression, priority,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.addNewEvidence(result);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newData \u003d result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newStr \u003d \"New result entered:\\n\" + result.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"observation\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            boolean isObjective \u003d !cmd.isSwitchSet(\"subjective\"); //default to objective"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Observation obsv \u003d new Observation(cmd.getSwitchVal(\"name\"), impression, priority,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    cmd.getSwitchVal(\"summary\"), isObjective);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impression.addNewEvidence(obsv);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newData \u003d obsv;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newStr \u003d \"New observation logged:\\n\" + obsv.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"Invalid data type!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(newStr);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.isSwitchSet(\"go\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (addType) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"plan\": //fallthrough"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"medicine\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.uiContext.setContext(Context.TREATMENT, newData);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"investigation\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.uiContext.setContext(Context.INVESTIGATION, newData);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"result\": //fallthrough"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"observation\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.uiContext.setContext(Context.EVIDENCE, newData);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Invalid data type!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 146
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionPrimarySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionPrimarySpec extends CommandSpec {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionPrimarySpec spec \u003d new ImpressionPrimarySpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionPrimarySpec getSpec() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d ImpressionUtils.getPatient(impression);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient.setPrimaryDiagnosis(impression.getName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.updateUi(\"Updated \" + patient.getName() + \"\u0027s primary diagnosis to \u0027\" + impression.getName() + \"\u0027!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 23
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionPrioritySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionPrioritySpec extends ArgSpec {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionPrioritySpec spec \u003d new ImpressionPrioritySpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionPrioritySpec getSpec() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionPrioritySpec() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.REQUIRED, \"e\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.REQUIRED, \"t\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"set\", Integer.class, false, ArgLevel.REQUIRED, \"s\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData prioData \u003d ImpressionUtils.getData(cmd.getArg(), cmd.getSwitchVal(\"evidence\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmd.getSwitchVal(\"treatment\"), ImpressionUtils.getImpression(core));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int priority \u003d cmd.switchToInt(\"set\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ImpressionUtils.checkPriority(priority);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        prioData.setPriority(priority);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Updated \u0027\" + prioData.getName() + \"\u0027 priority to \" + priority + \"!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 36
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionResultSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionResultSpec extends ArgSpec {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionResultSpec spec \u003d new ImpressionResultSpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionResultSpec getSpec() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionResultSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.REQUIRED, \"sum\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: find by name or index"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 28
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionStatusSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionStatusSpec extends ArgSpec {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ImpressionStatusSpec spec \u003d new ImpressionStatusSpec();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ImpressionStatusSpec getSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ImpressionStatusSpec() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"set\", Integer.class, true, ArgLevel.REQUIRED, \"s\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d ImpressionUtils.getImpression(core);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Treatment treatment \u003d (Treatment) ImpressionUtils.getData(null, null, cmd.getArg(), impression);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        List\u003cString\u003e statusList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Class targetClass \u003d treatment.getClass(); //statics don\u0027t play nice with polymorphism"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (targetClass \u003d\u003d Medicine.class) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            statusList \u003d Medicine.getStatusArr();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (targetClass \u003d\u003d Investigation.class) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            statusList \u003d Investigation.getStatusArr();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (targetClass \u003d\u003d Plan.class) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            statusList \u003d Plan.getStatusArr();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"This is not a recognised treatment!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int status;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String statusStr \u003d cmd.getSwitchVal(\"set\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (statusStr \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            status \u003d treatment.getStatusIdx() + 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (status \u003e\u003d statusList.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"This treatment cannot progress any further!\", cmd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            status \u003d ImpressionUtils.processStatus(statusStr, statusList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        treatment.setStatusIdx(status);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Status of \u0027\" + treatment.getName() + \"\u0027 updated to \u0027\" + statusList.get(status) + \"\u0027\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aquohn": 63
    }
  },
  {
    "path": "src/main/java/duke/command/impression/ImpressionUtils.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.impression;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeUtilException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionUtils {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Gets the current Impression being displayed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore that the app is running on."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The current Impression."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If the current context is not an Impression, should not happen."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static Impression getImpression(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return (Impression) core.uiContext.getObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (ClassCastException excp) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"The current context is not an Impression!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Gets the Patient that is the parent of an Impression."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param impression The impression whose parent we are trying to get."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The parent Patient of an Impression."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If the parent of the Impression is not a Patient, should not happen."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static Patient getPatient(Impression impression) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return (Patient) impression.getParent();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (ClassCastException excp) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"This Impression is not attached to a Patient!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * General-purpose function for finding DukeData by name or index. One and only one of allStr (search evidences"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * and treatments), treatStr (search treatments) and evidStr (search evidences) is to be non-null. The appropriate"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * search in the names will then be performed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param allStr A search term that will be searched for amongst both treatments and evidences."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param evidStr A search term that will be searched for amongst evidences."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param treatStr A search term that will be searched for amongst treatments."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param impression The impression whose DukeData we want to find."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The required DukeData matching the user\u0027s query."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If a matching evidence or treatment cannot be found, given the provided search terms, or"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                       more than one search term was non-null."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static DukeData getData(String allStr, String evidStr, String treatStr, Impression impression)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeData data;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeException dataNotFound;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        List\u003cDukeData\u003e findList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO handle idx"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (allStr !\u003d null \u0026\u0026 evidStr \u003d\u003d null \u0026\u0026 treatStr \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            findList \u003d new ArrayList\u003cDukeData\u003e(impression.findByName(allStr));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            dataNotFound \u003d new DukeException(\"Can\u0027t find any data item with that name!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (allStr \u003d\u003d null \u0026\u0026 evidStr !\u003d null \u0026\u0026 treatStr \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            findList \u003d new ArrayList\u003cDukeData\u003e(impression.findEvidencesByName(evidStr));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            dataNotFound \u003d new DukeException(\"Can\u0027t find any evidences with that name!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (allStr \u003d\u003d null \u0026\u0026 evidStr \u003d\u003d null \u0026\u0026 treatStr !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            findList \u003d new ArrayList\u003cDukeData\u003e(impression.findTreatmentsByName(treatStr));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            dataNotFound \u003d new DukeException(\"Can\u0027t find any treatments with that name!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeUtilException(\"I don\u0027t know what you want me to look for!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO proper search"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (findList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            data \u003d findList.get(0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw dataNotFound;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks if an integer is a valid priority value."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param priority The integer to check."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeUtilException If the priority is out of the valid range."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static void checkPriority(int priority) throws DukeUtilException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (priority \u003c 0 || priority \u003e DukeData.PRIORITY_MAX) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeUtilException(\"Priority must be between 0 and \" + DukeData.PRIORITY_MAX + \"!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks if a status is a string or an integer, and returns the appropriate integer if it is a string."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param status The String supplied as an argument to the status switch."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param statusList The status descriptions that the numeric value of the status represent. The numeric value of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                  the status is the index of the corresponding description in the array."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The Integer that the string represents, or 0 if it is null."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws NumberFormatException If the string is not a valid representation of an integer."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static int processStatus(String status, List\u003cString\u003e statusList)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throws DukeUtilException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        assert (status !\u003d null);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (\"\".equals(status)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                int convertedStatus \u003d Integer.parseInt(status);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (convertedStatus \u003c 0 || convertedStatus \u003e\u003d statusList.size()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    throw new DukeUtilException(status + \"is not a valid numeric value for the status!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return convertedStatus;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (NumberFormatException excp) { // not numeric"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                // TODO: parse with autocorrect?"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                for (int i \u003d 0; i \u003c statusList.size(); ++i) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    if (statusList.get(i).equalsIgnoreCase(status)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeUtilException(\"\u0027\" + status + \"\u0027 is not a valid status name!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 127
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientDeleteSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class PatientDeleteSpec extends ArgSpec {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final PatientDeleteSpec spec \u003d new PatientDeleteSpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static PatientDeleteSpec getSpec() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private PatientDeleteSpec() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                new Switch(\"critical\", String.class, true, ArgLevel.OPTIONAL, \"c\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"investigation\", String.class, true, ArgLevel.OPTIONAL, \"in\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.OPTIONAL, \"im\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"index\", Integer.class, true, ArgLevel.REQUIRED, \"i\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"name\", String.class, true, ArgLevel.REQUIRED, \"n\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchCritical \u003d cmd.getSwitchVal(\"critical\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchInvestigation \u003d cmd.getSwitchVal(\"investigation\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchImpression \u003d cmd.getSwitchVal(\"impression\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO refactor, this is not what the standard says"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (searchCritical !\u003d null \u0026\u0026 (patient.getPrimaryDiagnosis()) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (patient.getPrimaryDiagnosis().getName().equals((searchCritical))) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                patient.deletePriDiagnose();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.updateUi(\"Successfully deleted \" + searchCritical);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.updateUi(\"Unsuccessfully deleted patient\u0027s primary diagnosis does not match \" + searchCritical);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (searchCritical !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.updateUi(\"Patient does not have a primary diagnosis.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (searchInvestigation !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.updateUi(\"Not implemented yet, bug when adding treatments needs to be solved first\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //core.ui.print(\"Successfully deleted \" + searchInvestigation);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO proper searching"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (searchImpression !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (patient.getImpression(searchImpression) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                patient.deleteImpression(searchImpression);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.updateUi(\"Successfully deleted \" + searchImpression);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                core.updateUi(\"Unsuccessfully deleted, none of patient\u0027s impressions match \" + searchImpression);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 4,
      "aquohn": 44,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientDischargeSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeReportSpec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class PatientDischargeSpec extends ArgSpec {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final PatientDischargeSpec spec \u003d new PatientDischargeSpec();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String header \u003d \"DISCHARGED PATIENT REPORT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String explanation \u003d \"This report shows all the data that was stored about a patient at the \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            + \"time the report was created.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String result \u003d \"Patient discharged. A discharge report have been created.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static PatientDischargeSpec getSpec() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private PatientDischargeSpec() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"index\", Integer.class, true, ArgLevel.REQUIRED, \"i\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"summary\", String.class, true, ArgLevel.OPTIONAL, \"sum\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HomeReportSpec.createReport(patient, header, explanation, cmd.getSwitchVal(\"summary\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientList.deletePatient(patient.getBedNo());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.uiContext.setContext(Context.HOME, null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(result);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 5,
      "aquohn": 30,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientEditSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientEditSpec extends ArgSpec {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientEditSpec spec \u003d new PatientEditSpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientEditSpec getSpec() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientEditSpec() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // TODO: Changes need to be made to Patient class. Update section in User Guide"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // new Switch(\"name\", String.class, true, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // new Switch(\"bed\", String.class, true, ArgLevel.OPTIONAL, \"b\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"allergies\", String.class, true, ArgLevel.REQUIRED, \"a\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \"allergy\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"height\", Integer.class, true, ArgLevel.REQUIRED, \"h\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"weight\", Integer.class, true, ArgLevel.REQUIRED, \"w\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"age\", Integer.class, true, ArgLevel.REQUIRED, \"ag\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"number\", Integer.class, true, ArgLevel.REQUIRED, \"num\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"address\", String.class, true, ArgLevel.REQUIRED, \"ad\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.REQUIRED, \"hi\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"append\", String.class, true, ArgLevel.NONE, \"app\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        boolean append \u003d cmd.isSwitchSet(\"append\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int height \u003d cmd.switchToInt(\"height\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (height !\u003d -1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setHeight(height);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int weight \u003d cmd.switchToInt(\"weight\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (weight !\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setWeight(weight);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int age \u003d cmd.switchToInt(\"age\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (age !\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setAge(age);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int number \u003d cmd.switchToInt(\"number\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (number !\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setNumber(number);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String address \u003d cmd.getSwitchVal(\"address\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (address !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setAddress(append ? (patient.getAddress() + \" \" + address) : address);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String history \u003d cmd.getSwitchVal(\"history\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (history !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setHistory(append ? (patient.getHistory() + \" \" + history) : history);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String allergies \u003d cmd.getSwitchVal(\"allergies\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (allergies !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setAllergies(append ? (patient.getAllergies() + \", \" + allergies) : allergies);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Edited specified details of patient!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 26,
      "aquohn": 52
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientFindSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.SearchResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientFindSpec extends ArgSpec {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final PatientFindSpec spec \u003d new PatientFindSpec();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static PatientFindSpec getSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private PatientFindSpec() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.NONE, \"i\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.NONE, \"e\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.NONE, \"t\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String searchTerm \u003d cmd.getArg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeObject\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cImpression\u003e impressionResult;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.hasNoSwitches()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            resultList \u003d patient.find(searchTerm);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            impressionResult \u003d patient.findImpressions(searchTerm);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (Impression imp : impressionResult) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (cmd.isSwitchSet(\"impression\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    resultList.add(imp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (cmd.isSwitchSet(\"evidence\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    resultList.addAll(imp.findEvidences(searchTerm));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (cmd.isSwitchSet(\"treatment\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    resultList.addAll(imp.findTreatments(searchTerm));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!resultList.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            SearchResult search \u003d new SearchResult(searchTerm, resultList, patient);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.SEARCH, search);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.updateUi(\"Returning result of search of \" + searchTerm);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"No results found in this patient context.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.showSearchResults(searchTerm, resultList, patient);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 62,
      "JeremyKwok": 4
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientHistorySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientHistorySpec extends ArgSpec {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientHistorySpec spec \u003d new PatientHistorySpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientHistorySpec getSpec() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientHistorySpec() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient.appendHistory(cmd.getArg());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Note appended!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 14,
      "aquohn": 15
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientNewSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class PatientNewSpec extends ArgSpec {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final PatientNewSpec spec \u003d new PatientNewSpec();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static PatientNewSpec getSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private PatientNewSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"name\", String.class, false, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"description\", String.class, false, ArgLevel.REQUIRED, \"desc\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d new Impression(cmd.getSwitchVal(\"name\"), cmd.getSwitchVal(\"description\"), patient);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient.addNewImpression(impression);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Impression added:\\n\" + patient.getImpression(impression.getName()).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (cmd.isSwitchSet(\"go\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.IMPRESSION, impression);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 26,
      "JeremyKwok": 14
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientOpenSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientOpenSpec extends ArgSpec {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientOpenSpec spec \u003d new PatientOpenSpec();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientOpenSpec getSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientOpenSpec() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.NONE, \"im\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"critical\", String.class, true, ArgLevel.NONE, \"c\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"investigation\", String.class, true, ArgLevel.NONE, \"inv\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, Boolean\u003e conditions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        conditions.put(\"impression\", cmd.isSwitchSet(\"impression\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        conditions.put(\"critical\", cmd.isSwitchSet(\"critical\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        conditions.put(\"investigation\", cmd.isSwitchSet(\"investigation\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String type \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Map.Entry\u003cString, Boolean\u003e condition : conditions.entrySet()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (condition.getValue()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    type \u003d condition.getKey();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    throw new DukeException(\"Please provide at most 1 unique type (IMPRESSION, CRITICAL or \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            + \"INVESTIGATION that you wish to open!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        DukeObject object \u003d CommandUtils.findFromPatient(core, patient, type, cmd.getArg());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (object instanceof Impression) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.IMPRESSION, object);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.uiContext.setContext(Context.IMPRESSION, object.getParent());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Accessing \" + object.getClass().getName() + \" of Bed \" + patient.getBedNo());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 15,
      "aquohn": 48
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientPrimarySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.CommandUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientPrimarySpec extends ArgSpec {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientPrimarySpec spec \u003d new PatientPrimarySpec();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientPrimarySpec getSpec() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientPrimarySpec() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"index\", Integer.class, true, ArgLevel.REQUIRED, \"i\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"name\", String.class, true, ArgLevel.REQUIRED, \"n\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression impression \u003d (Impression) CommandUtils.findFromPatient(core, patient, \"impression\", cmd.getArg());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient.setPrimaryDiagnosis(impression.getName());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.writeJsonFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.updateUi(\"Primary diagnosis set!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17,
      "aquohn": 18
    }
  },
  {
    "path": "src/main/java/duke/command/patient/PatientReportSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command.patient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeReportSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientReportSpec extends ArgSpec {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String header \u003d \"DISCHARGED PATIENT REPORT\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String explanation \u003d \"This report shows all the data that was stored about a patient at the \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"time the report was created.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final PatientReportSpec spec \u003d new PatientReportSpec();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static PatientReportSpec getSpec() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        DukeObject patient \u003d core.uiContext.getObject();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HomeReportSpec.createReport((Patient) patient, header, explanation, null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.updateUi(\"Patient report created for \" + patient.getName());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 4,
      "aquohn": 13,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/data/DukeData.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class DukeData extends DukeObject {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static final int PRIORITY_MAX \u003d 4;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer priority;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected String summary;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the evidence or treatment data of a patient."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A DukeData object corresponds to the evidence or treatment a doctor has,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that data as well as an integer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the evidence or treatment needed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the data is tagged to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the investigation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeData(String name, Impression impression, Integer priority) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(name, impression);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super.setName(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getPriority() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Updates priority of treatment."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param priority The integer value of the priority between 1 to 4"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return the integer of the updated priority"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Integer setPriority(Integer priority) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getPriority();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Impression: \" + getParent().getName() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString +\u003d \"Priority: \" + this.priority + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setSummary(String summary) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks for equality with another DukeData object - all fields have the same value and all references point to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the same objects. Primarily for testing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param other The DukeData to compare against."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return True if all fields and references are the same, false otherwise."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(DukeData other) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getName().equals(other.getName())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 priority.equals(other.priority)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 getParent() \u003d\u003d other.getParent()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 ((getSummary() \u003d\u003d null \u0026\u0026 other.getSummary() \u003d\u003d null) || getSummary().equals(other.getSummary()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // null check required because medicine summary is null"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 35,
      "JeremyKwok": 39
    }
  },
  {
    "path": "src/main/java/duke/data/DukeObject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Highest level of abstraction for all DukeObjects storing Patient related Data"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * A Duke object has a relevant name specifying what it is."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Attributes:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - name: what the object is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class DukeObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private transient DukeObject parent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeObject(String name, DukeObject parent) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.parent \u003d parent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * The toString function returns a String representing the information stored in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the `DukeObject`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the String representation of the object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return \"Name: \" + this.name + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * The toReportString function returns a String formatted"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * to be used in a Report about the relevant DukeObject."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the String in Report format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public abstract String toReportString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setParent(DukeObject parent) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.parent \u003d parent;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeObject getParent() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return parent;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 3,
      "JeremyKwok": 50
    }
  },
  {
    "path": "src/main/java/duke/data/Evidence.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstraction of evidence supporting a medical diagnosis."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * An Evidence object corresponds to the notes of the doctor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * on a piece of medical evidence as well as"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * an integer between 1-4 representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Attributes:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - name: information on the evidence"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - impression: the impression object the evidence is tagged to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - priority: the priority level of the evidence"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class Evidence extends DukeData {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence(String name, Impression impression, Integer priority, String summary) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Integer setPriority(Integer priorityVal) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (priorityVal \u003e\u003d 0 \u0026\u0026 priorityVal \u003c 5) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            super.setPriority(priorityVal);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return super.getPriority();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The priority must be within 0 to 4!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString \u003d \"Summary: \" + summary + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString \u003d \"Summary: \" + summary + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 8,
      "JeremyKwok": 33,
      "-": 6
    }
  },
  {
    "path": "src/main/java/duke/data/EvidenceAdaptor.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonDeserializationContext;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonDeserializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonElement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonPrimitive;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonSerializationContext;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonSerializer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class EvidenceAdaptor implements JsonSerializer\u003cEvidence\u003e, JsonDeserializer\u003cEvidence\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throws JsonParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonObject result \u003d json.getAsJsonObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String type \u003d result.get(\"type\").getAsString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonElement element \u003d result.get(\"properties\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return context.deserialize(element, Class.forName(\"duke.data.\" + type));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new JsonParseException(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public JsonElement serialize(Evidence src, Type typeOfSrc, JsonSerializationContext context) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonObject result \u003d new JsonObject();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        result.add(\"type\", new JsonPrimitive(src.getClass().getSimpleName()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        result.add(\"properties\", context.serialize(src, src.getClass()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 35
    }
  },
  {
    "path": "src/main/java/duke/data/GsonStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeResetException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles storage of patients."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class GsonStorage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * the file that the patients will be stored in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final File jsonFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * the filepath to the file that the patients will be stored in."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private Gson gson;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //private RuntimeTypeAdapterFactory\u003cDukeObject\u003e typeAdapterFactory;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for GsonStorage."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if a Json file exists at the specified filepath and creates one if it does not exist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public GsonStorage(String path) throws DukeFatalException, DukeResetException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        /*typeAdapterFactory \u003d RuntimeTypeAdapterFactory"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                .of(DukeObject.class, \"type\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Patient.class, \"type1\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Impression.class, \"type2\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(DukeData.class, \"type3\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Evidence.class, \"type4\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Treatment.class, \"type5\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Investigation.class, \"type6\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Plan.class, \"type7\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Medicine.class, \"type8\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                .registerSubtype(Observation.class, \"type9\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                .registerSubtype(Result.class, \"type10\");*/"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        GsonBuilder gsonBuilder \u003d new GsonBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        gsonBuilder.registerTypeAdapter(Treatment.class, new TreatmentAdaptor())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                .registerTypeAdapter(Evidence.class, new EvidenceAdaptor());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        gson \u003d gsonBuilder.create();//new GsonBuilder().registerTypeAdapterFactory(typeAdapterFactory).create();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        File dataDir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        File reportDir \u003d new File(\"data/reports\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!reportDir.exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            reportDir.mkdir();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        filePath \u003d path;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        jsonFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!jsonFile.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (!jsonFile.createNewFile()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeFatalException(\"Unable to setup data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads all the patients in the JSON file to a hash map."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the hash map containing the patients"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e loadPatients() throws DukeFatalException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String json \u003d Files.readString(Paths.get(filePath), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Patient[] patientArr \u003d gson.fromJson(json, Patient[].class);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (patientArr \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return patients;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patients.addAll(Arrays.asList(patientArr));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeFatalException(\"Unable to load data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return patients;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a list with the patients in the hash map and writes the lists json representation"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * to the json file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param patientList the hash map containng all the patients"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If the file writer cannot be setup."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void writeJsonFile(ArrayList\u003cPatient\u003e patientList) throws DukeFatalException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(jsonFile);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            fileWriter.write(gson.toJson(patientList));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeFatalException(\"Unable to write data! Some data may have been lost,\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the filepath to the json file containing the Json representation of all the patients."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the filepath"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clears the json file and the paitent hash map. Used to reset the storage data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return an empty PatientList object"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientList resetAllData() throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(jsonFile);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return new PatientList();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Loads all the details in the JSON file to a hash map."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param helpFile the path of the helpFile"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the hash map containing the helpfile"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public HashMap\u003cString, HashMap\u003cString, String\u003e\u003e loadHelpHashMap(String helpFile) throws DukeFatalException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        final File jsonFile \u003d new File(helpFile);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (!jsonFile.exists()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (!jsonFile.createNewFile()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeFatalException(\"Unable to setup data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        HashMap\u003cString, HashMap\u003cString, String\u003e\u003e helpMap;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            JsonReader reader \u003d new JsonReader(new FileReader(helpFile));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            helpMap \u003d gson.fromJson(reader, new TypeToken\u003cHashMap\u003cString, HashMap\u003cString, String\u003e\u003e\u003e() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }.getType());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeFatalException(\"Unable to load data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return helpMap;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /* @@author gowgos5 */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Loads help details from a pre-defined JSON file."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param file Relative file path."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return A list of {@code Help} objects."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the data file cannot be loaded."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cHelp\u003e loadHelpList(String file) throws DukeException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        List\u003cHelp\u003e helpList;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            JsonReader reader \u003d new JsonReader(new FileReader(file));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Help[] helps \u003d gson.fromJson(reader, Help[].class);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            helpList \u003d Arrays.asList(helps);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(\"The help data file cannot be loaded. The help window will be disabled.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return helpList;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 99,
      "aquohn": 13,
      "-": 44,
      "JeremyKwok": 42
    }
  },
  {
    "path": "src/main/java/duke/data/Help.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Help {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String summary;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String switches;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Context context;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getSwitches() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return switches;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Context getContext() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return context;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 36
    }
  },
  {
    "path": "src/main/java/duke/data/Impression.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Impression extends DukeObject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cEvidence\u003e evidences;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cTreatment\u003e treatments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO: integrate finding with autocorrect?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the impression a doctor has about a Patient."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * An Impression object corresponds to the impression a Doctor has of a patient’s Condition,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression, the description of an impression and a list of Evidences"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * that led to the impression as well as a Treatment list with the treatments determined by a Doctor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * It also has a handler to the Patient it is observed about."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - evidence the list of evidences contributing to the impression"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - treatments: the list of treatments determined by a doctor to deal with the impression"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * - patient: the Patient it is tagged to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param name        the name of the impression"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param description the description of the impression"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression(String name, String description, Patient patient) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, patient);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.evidences \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.treatments \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This functions search for treatment relevant to the searchTerm."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return ArrayList of the Treatments"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cTreatment\u003e findTreatments(String searchTerm) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cTreatment\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : treatments) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (treatment.toString().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                searchResult.add(treatment);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This functions search for Evidence relevant to the searchTerm."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return ArrayList of the Evidence"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cEvidence\u003e findEvidences(String searchTerm) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cEvidence\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence : evidences) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (evidence.toString().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                searchResult.add(evidence);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This find function returns a list of all DukeData related to the impression containing the search term."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to be used to filter the DukeData"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the list of DukeData"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeData\u003e find(String searchTerm) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeData\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        searchResult.addAll(findEvidences(searchTerm));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        searchResult.addAll(findTreatments(searchTerm));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function searches for treatments whose names contain the searchTerm."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return ArrayList of the Treatments"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cTreatment\u003e findTreatmentsByName(String searchTerm) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cTreatment\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment entry : treatments) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (entry.getName().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                searchResult.add(entry);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function searches for evidences whose names contain the searchTerm."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return ArrayList of the Evidences"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cEvidence\u003e findEvidencesByName(String searchTerm) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cEvidence\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence entry : evidences) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (entry.getName().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                searchResult.add(entry);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function searches for DukeData whose names contain the searchTerm."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm String to be used to filter the DukeData"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return the list of DukeData"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cDukeData\u003e findByName(String searchTerm) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeData\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        searchResult.addAll(findEvidencesByName(searchTerm));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        searchResult.addAll(findTreatmentsByName(searchTerm));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void sortEvidences() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        evidences.sort(Comparator.comparing(Evidence::getPriority));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void sortTreatments() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        treatments.sort(Comparator.comparing(Treatment::getPriority)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        .thenComparing(Treatment::getStatusIdx));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This addNewEvidence function adds a new evidence to the evidence list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newEvidence the evidence to be added"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Evidence added"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence addNewEvidence(Evidence newEvidence) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (getEvidence(newEvidence.getName()) \u003d\u003d null) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            evidences.add(newEvidence);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            sortEvidences();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return newEvidence;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I already have an Evidence named that\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteEvidence function deletes an evidence at the specified index from the evidence list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the evidence"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the deleted Evidence"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence deleteEvidence(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Evidence deletedEvidence \u003d getEvidence(keyIdentifier);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (deletedEvidence !\u003d null) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            evidences.remove(deletedEvidence);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            sortEvidences();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return deletedEvidence;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I can\u0027t delete that evidence because I don\u0027t have it!\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getEvidence function returns the evidence from the evidence list at the specified index."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the evidence"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the evidence specified by the index"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence getEvidence(String keyIdentifier) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String lowerKey \u003d keyIdentifier.toLowerCase();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence : evidences) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String dataName \u003d evidence.getName().toLowerCase();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (dataName.equals(lowerKey)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return evidence;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Adds a new treatment to the treatment list."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newTreatment the treatment to be added"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the treatment added"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment addNewTreatment(Treatment newTreatment) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (getTreatment(newTreatment.getName()) \u003d\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            treatments.add(newTreatment);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            sortTreatments();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return newTreatment;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I already have a treatment named that.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteTreatment function deletes a treatment at the specified index from the treatment list."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the treatment"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the deleted treatment"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment deleteTreatment(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Treatment deletedTreatment \u003d getTreatment(keyIdentifier);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (deletedTreatment !\u003d null) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            treatments.remove(deletedTreatment);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            sortEvidences();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return deletedTreatment;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I can\u0027t delete that treatment because I don\u0027t have it!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getTreatment function returns the treatment from the treatment list at the specified index."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyIdentifier index of the treatment"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the treatment specified by the index"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment getTreatment(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String lowerKey \u003d keyIdentifier.toLowerCase();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment: treatments) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String dataName \u003d treatment.getName().toLowerCase();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (dataName.equals(lowerKey)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return treatment;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        StringBuilder infoStrBuilder \u003d new StringBuilder(\"Impression details\\n\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        infoStrBuilder.append(\"Description: \").append(this.description).append(\"\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence: this.evidences) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            infoStrBuilder.append(evidence.toString());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : this.treatments) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            infoStrBuilder.append(treatment.toString());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return super.toString() + infoStrBuilder.toString() + \"\\n\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        StringBuilder informationString;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d new StringBuilder(\"\\n\\tDescription of impression: \" + this.description + \"\\n\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence: this.evidences) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            informationString.append(\"/t\").append(evidence.toReportString());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : this.treatments) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            informationString.append(\"\\t\").append(treatment.toReportString());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return informationString + \"\\n\\n\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cEvidence\u003e getEvidences() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return evidences;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cTreatment\u003e getTreatments() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return treatments;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function initialises the parent object of each evidence and treatment."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void initChild() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence : evidences) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            evidence.setParent(this);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : treatments) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            treatment.setParent(this);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Computes the number of critical items in this impression: items with priority 1."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The number of critical items in this impression."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public int getCriticalCount() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : treatments) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (treatment.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                ++count;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence : evidences) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (evidence.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                ++count;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Computes the number of follow up items: the number of Investigations not yet ordered, or whose results have not"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * been reviewed, and the number of plan items that have not been started on, and returns a string representing"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * these items."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return A string indicating the number of follow-up items in this impression."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getFollowUpCountStr() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : treatments) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if ((treatment instanceof Investigation \u0026\u0026 treatment.getStatusIdx() \u003c\u003d 1)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    || (treatment instanceof Plan \u0026\u0026 treatment.getStatusIdx() \u003c 1)) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                ++count;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"No follow-ups\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"1 follow-up\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return count + \"follow-ups\";"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Calls getCriticalCount() to compute the number of critical itmes (items with priority 1) and returns a string"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * indicating this value."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return A string indicating the number of critical items that are associated with this Impression."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getCriticalCountStr() {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int count \u003d getCriticalCount();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"No critical issues\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"1 critical issue\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return count + \"critical issues\";"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(Impression impression) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getName().equals(impression.getName()) \u0026\u0026 description.equals(impression.description)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 getParent() \u003d\u003d impression.getParent();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 11,
      "aquohn": 115,
      "JeremyKwok": 222,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/data/Investigation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Investigation extends Treatment {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final List\u003cString\u003e statusArr \u003d Arrays.asList(\"Not ordered\", \"In progress\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the investigation needed to investigate an impression the Doctor has about a patient."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Investigation object corresponds to the investigation a doctor needs to better understand the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * signs and symptoms of a Patient, the impression that led to that particular investigation being necessary,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the status of the treatment, a description of the status, a summary of why the investigation is needed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the investigation needed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the investigation is tagged to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the investigation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the investigation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary description of the investigation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Investigation(String name, Impression impression, int priority,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                         int status, String summary) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(name, impression, priority, status);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This toResult function returns the result or conclusion from the investigation done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultName name of result"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultPriority importance of the result between 1 to 4"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultSummary description of the result"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the result object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Result toResult(String resultName, int resultPriority, String resultSummary) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return new Result(resultName, (Impression) getParent(), resultPriority, resultSummary);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Summary \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    //TODO complete"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getStatusStr() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return statusArr.get(getStatusIdx());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static List\u003cString\u003e getStatusArr() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return Collections.unmodifiableList(statusArr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 16,
      "JeremyKwok": 45
    }
  },
  {
    "path": "src/main/java/duke/data/Medicine.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Medicine extends Treatment {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final List\u003cString\u003e statusArr \u003d Arrays.asList(\"Not ordered\", \"In progress\", \"Completed\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String dose;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the medicine needed to treat a symptom or impression of a patient."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Medicine object corresponds to the medicine prescribed by a doctor to treat the signs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * and symptoms of a Patient, the impression that led to that particular medicine being necessary,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the status of the treatment, a description of the status, the dosage, start date, duration of the treatment"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the medicine needed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the medicine is tagged to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the medicine"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the medicine"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param dose the dosage of the medicine needed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param startDate the starting date when the patient should be on the medicine"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param duration the duration the patient needs to take the medicine"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Medicine(String name, Impression impression, int priority, int status,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    String dose, String startDate, String duration) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(name, impression, priority, status);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.dose \u003d dose;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Dose: \" + this.dose + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Start Date: \" + this.startDate + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Duration: \" + this.duration + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDose() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return dose;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDose(String dose) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.dose \u003d dose;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getStartDate() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setStartDate(String startDate) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getStatusStr() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return statusArr.get(getStatusIdx());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static List\u003cString\u003e getStatusArr() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return Collections.unmodifiableList(statusArr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setSummary(String summary) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // medicine does not have a summary"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks for equality with another Medicine object - all fields have the same value and all references point to"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the same objects. Primarily for testing."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param medicine The medicine to compare against."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return True if all fields and references are the same, false otherwise."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(Medicine medicine) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (super.equals(medicine)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return dose.equals(medicine.dose)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    \u0026\u0026 duration.equals(medicine.duration)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    \u0026\u0026 startDate.equals(medicine.startDate);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 44,
      "JeremyKwok": 65
    }
  },
  {
    "path": "src/main/java/duke/data/Observation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Observation extends Evidence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private boolean isObjective;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents observations of a doctor about a patient."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * An Observation object corresponds to the observations of the doctor about the symptoms of a Patient,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the information that led to that particular observation, as well as an integer between 1-4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name information on the observation / symptom"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the evidence is tagged to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary a summary of what led to the observation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param isObjective whether the observation has physical evidence or is a symptom reported by the patient"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the evidence"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Observation(String name, Impression impression, int priority, String summary, boolean isObjective) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, summary);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.isObjective \u003d isObjective;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString \u003d \"Objective: \" + this.isObjective + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isObjective() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return isObjective;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setObjective(boolean objective) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        isObjective \u003d objective;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 2,
      "JeremyKwok": 43
    }
  },
  {
    "path": "src/main/java/duke/data/Patient.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Patient extends DukeObject {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String bedNo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String allergies;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Impression primaryDiagnosis;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cImpression\u003e impressions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer height;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer weight;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer age;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer number;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String address;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String history;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the patient."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Patient object corresponds to the biometric information of a patient,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * patient details, medical history, the impressions the doctor has about a patient."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * - primaryDiagnosis the chief complaint or most serious impression of a patient"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - impression the list of all impressions of a patient"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name      the name of the patient"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param bedNo     the bed number of the patient"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param height    the height of the patient"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param weight    the weight of the patient"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param age       the age of the patient"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param number    the contact details of a patient\u0027s NOK"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param address   the residential address of a patient"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param history   the medical history of a patient"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param allergies the Food and Drug allergies a patient has"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient(String name, String bedNo, String allergies, Integer height, Integer weight,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                   Integer age, Integer number, String address, String history) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.bedNo \u003d bedNo;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impressions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.primaryDiagnosis \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Boolean isDuplicate(Impression newImpression) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String newLower \u003d newImpression.getName().toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression oldImpression : impressions) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String oldLower \u003d oldImpression.getName().toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (oldLower.equals(newLower)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This addNewImpression function adds a new impression to the impressions list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newImpression the impression to be added"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Impression newly added"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Impression addNewImpression(Impression newImpression) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (isDuplicate(newImpression)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(\"Impression already exists!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impressions.add(newImpression);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newImpression;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteImpression function deletes an impression at the specified index"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * from the impressions list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the impression"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Impression of the deleted Impression"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression deleteImpression(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Impression deletedImpression \u003d getImpression(keyIdentifier);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (deletedImpression !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            impressions.remove(deletedImpression);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return deletedImpression;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getImpression function returns the impression from the impressions list at the specified index."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyIdentifier index of the impression"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return Impression the impression specified by the index"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression getImpression(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String id \u003d keyIdentifier.toLowerCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : impressions) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String impName \u003d imp.getName().toLowerCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (id.equals(impName)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return imp;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function finds Impressions relevant to the searchTerm."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param searchTerm the search term"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the list of impressions"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cImpression\u003e findImpressions(String searchTerm) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ArrayList\u003cImpression\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression impression : impressions) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (impression.toString().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                searchResult.add(impression);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function finds Impressions whose names contain the searchTerm."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm the search term"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return the list of impressions"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cImpression\u003e findImpressionsByName(String searchTerm) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cImpression\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression entry : impressions) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (entry.getName().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                resultList.add(entry);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function finds critical items in this patient whose names contain the searchTerm."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm the search term"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return the list of critical items"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cDukeData\u003e findCriticalsByName(String searchTerm) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeData\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression entry : impressions) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Evidence evidenceEntry : entry.getEvidences()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (evidenceEntry.getName().toLowerCase().contains(lowerSearchTerm)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u0026\u0026 evidenceEntry.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    resultList.add(evidenceEntry);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Treatment treatmentEntry : entry.getTreatments()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (treatmentEntry.getName().toLowerCase().contains(lowerSearchTerm)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u0026\u0026 treatmentEntry.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    resultList.add(treatmentEntry);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * This function finds follow-up items (Investigations for now) whose names contain the searchTerm."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm the search term"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return the list of follow-up items"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArrayList\u003cDukeData\u003e findFollowUpsByName(String searchTerm) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cDukeData\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : impressions) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Treatment treatmentEntry : imp.getTreatments()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (treatmentEntry.getName().toLowerCase().contains(lowerSearchTerm)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u0026\u0026 treatmentEntry.getClass() \u003d\u003d Investigation.class) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    resultList.add(treatmentEntry);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * This function find returns a list of all DukeObjects."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * with names related to the patient containing the search term."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to be used to filter the DukeObj"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the hashMap of DukeObjs"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeObject\u003e find(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cImpression\u003e filteredList \u003d findImpressions(searchTerm);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : filteredList) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.add(imp);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.addAll(imp.find(searchTerm));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function appends an addition to the history of a Patient."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param addition the string to be added"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the new history"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String appendHistory(String addition) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String newHistory;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.history !\u003d null \u0026\u0026 !this.history.equals(\"\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            newHistory \u003d this.history + System.lineSeparator() + addition;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            newHistory \u003d addition;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        setHistory(newHistory);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newHistory;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function find returns if a patient is allergic to an allergy."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param allergy String the possible allergy striped of spaces"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isAllergic(String allergy) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return this.allergies.contains(allergy);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a string representation of a patient displaying all the values of the patient\u0027s attributes"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * in a reader-friendly format."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return string representation of patient"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        StringBuilder informationString;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString \u003d new StringBuilder(\"Personal details\\n\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Height: \").append(this.height).append(\"\\n\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Weight: \").append(this.weight).append(\"\\n\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Age: \").append(this.age).append(\"\\n\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Number: \").append(this.number).append(\"\\n\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Address: \").append(this.address).append(\"\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"History: \").append(this.history).append(\"\\n\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Registration details\\n\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Bed Number: \").append(this.bedNo).append(\"\\n\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"Allergies: \").append(this.allergies).append(\"\\n\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append((primaryDiagnosis !\u003d null) ? \"Primary Diagnosis: \""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + this.primaryDiagnosis.toString() + \"\\n\" : \"\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : this.impressions) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(imp.toString());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.toString() + informationString + \"\\n\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        StringBuilder informationString;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString \u003d new StringBuilder(\"\\tName of patient: \" + getName() + \"\\n\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        informationString.append(\"\\tBed Number: \").append(this.bedNo).append(\"\\n\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.height !\u003d -1) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tHeight: \").append(this.height).append(\"\\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.weight !\u003d -1) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tWeight: \").append(this.weight).append(\"\\n\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.allergies.equals(\"\")) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tAllergies: \").append(this.allergies).append(\"\\n\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.age !\u003d -1) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tAge: \").append(this.age).append(\"\\n\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.number !\u003d -1) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tNumber: \").append(this.number).append(\"\\n\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.address.equals(\"\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tAddress: \").append(this.address).append(\"\\n\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.history.equals(\"\")) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tHistory: \").append(this.history).append(\"\\n\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (this.primaryDiagnosis !\u003d null) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tRegistration details:\\n\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tAllergies: \").append(this.allergies).append(\"\\n\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\tPrimary Diagnosis: \").append(this.primaryDiagnosis.getDescription())"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    .append(\"\\n\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            informationString.append(\"\\nData about doctors impression of the patient and associated\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    + \" treatments and evidences;\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Impression imp : this.impressions) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                informationString.append(imp.toString());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString + \"\\n\\n\";"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getBedNo() {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return bedNo;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getAllergies() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return allergies;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAllergies(String allergies) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Impression getPrimaryDiagnosis() {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return primaryDiagnosis;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Sets the Primary Diagnosis of the patient specified by the index chosen."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param keyIdentifier index of the impression"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void setPrimaryDiagnosis(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Impression primaryImpression \u003d getImpression(keyIdentifier);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (primaryImpression !\u003d null) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            impressions.remove(primaryImpression);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            impressions.add(0, primaryImpression);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            primaryDiagnosis \u003d primaryImpression;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getHeight() {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setHeight(int height) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getWeight() {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setWeight(int weight) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getAge() {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAge(int age) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getNumber() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setNumber(int number) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getAddress() {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAddress(String address) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getHistory() {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return history;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setHistory(String history) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePriDiagnose() throws DukeException {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impressions.remove(primaryDiagnosis);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.primaryDiagnosis \u003d null;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Computes the number of critical items for this patient: DukeData objects with priority 1, across all impressions."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The number of critical DukeData items for this patient."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getCriticalCountStr() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : impressions) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            count +\u003d imp.getCriticalCount();"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"No critical issues\";"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return \"1 critical issue\";"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return count + \"critical issues\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(Patient other) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return this.getName().equals(other.getName());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cImpression\u003e getImpressions() {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return impressions;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 63,
      "aquohn": 70,
      "JeremyKwok": 247,
      "-": 35
    }
  },
  {
    "path": "src/main/java/duke/data/PatientList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeResetException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cPatient\u003e patientList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Creates a new PatientList, loading data from the Storage object provided."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param storage The Storage object pointing to the TSV file containing the data to load."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeResetException If file is corrupted or the data has been edited to be unreadable."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeFatalException If unable to write data file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientList(GsonStorage storage) throws DukeFatalException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientList \u003d storage.loadPatients();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : patientList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Impression imp: patient.getImpressions()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                imp.setParent(patient);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                imp.initChild();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (patient.getPrimaryDiagnosis() !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                String primaryDiagnosisID \u003d patient.getPrimaryDiagnosis().getName();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    patient.setPrimaryDiagnosis(primaryDiagnosisID);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Creates a new, empty TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Adds a new Patient to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newPatient The task to be added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object added."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient addPatient(Patient newPatient) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (getPatient(newPatient.getBedNo()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"This patient\u0027s bed is occupied\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientList.add(newPatient);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newPatient;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Deletes a patient from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier The argument given by the user to identify the patient to be deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object deleted"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeException If bedNo cannot be resolved to a valid bedNo."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient deletePatient(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Patient deletedPatient \u003d getPatient(keyIdentifier);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (deletedPatient !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            patientList.remove(deletedPatient);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return deletedPatient;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        throw new DukeException(\"The patient cannot be identified\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Gets a patient from the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier The argument given by the user to identify the patient."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient getPatient(String keyIdentifier) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String lowerKey \u003d keyIdentifier.toLowerCase();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : patientList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String lowerBed \u003d patient.getBedNo().toLowerCase();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String lowerName \u003d patient.getName().toLowerCase();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (lowerKey.equals(lowerBed) || lowerKey.equals(lowerName)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return patient;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * PatientList of all patients whose names contain the searchTerm."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to search through the patients for."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return PatientList of matching patients."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e findPatient(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cPatient\u003e filteredList \u003d new ArrayList\u003cPatient\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : patientList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (patient.toString().toLowerCase().contains(lowerSearchTerm)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                filteredList.add(patient);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (filteredList.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No relevant Patients\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * PatientList of all patients whose names contain the searchTerm."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param searchTerm String to search through the patients for."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return PatientList of matching patients."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e findPatientsByName(String searchTerm) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String lowerSearchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ArrayList\u003cPatient\u003e resultList \u003d new ArrayList\u003cPatient\u003e(patientList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * PatientList of all patients whose allergies contain the searchTerm."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to search if any patients are allergic."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return PatientList of matching patients."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientList findAllergies(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        PatientList filteredList \u003d new PatientList();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : patientList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (patient.isAllergic(searchTerm)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                filteredList.addPatient(patient);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                ++i;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No Patients are allergic!\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return filteredList;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Search entire database for search term."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term used for search"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return array list of objects relevant to the search"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeException if the database does not contain the information"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeObject\u003e find(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003cDukeObject\u003e();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cPatient\u003e filteredList \u003d findPatient(searchTerm);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : filteredList) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.add(patient);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.addAll(patient.find(searchTerm));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (searchResult.isEmpty()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No relevant search terms.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Reports the number of patients currently in the list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return A String reporting the current number of patients."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getPatientCountStr() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int patientCount \u003d patientList.size();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String patientCountStr \u003d patientCount + ((patientCount \u003d\u003d 1) ? \" patient\" : \" patients\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return \"Now you have \" + patientCountStr + \" in the list.\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean patientExist(String keyIdentifier) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return getPatient(keyIdentifier) !\u003d null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e getPatientList() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return patientList;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 5,
      "aquohn": 26,
      "JeremyKwok": 152,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/data/Plan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Plan extends Treatment {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final List\u003cString\u003e statusArr \u003d Arrays.asList(\"Not done/ordered\", \"In progress\", \"Completed\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the Plan devised by the doctor to treat a symptom or impression of a patient."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Plan object corresponds to the plan devised by a doctor to treat the signs and symptoms of a Patient,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that particular plan being necessary, the status of the treatment,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * a description of the status, the summary of the plan as well as an integer between 1-4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * representing the priority or significance of the plan."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the generic plan name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the plan is tagged to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the plan"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the plan"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary the summary of what the plan entails"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Plan(String name, Impression impression, int priority, int status, String summary) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(name, impression, priority, status);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Summary: \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getStatusStr() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return statusArr.get(getStatusIdx());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static List\u003cString\u003e getStatusArr() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return Collections.unmodifiableList(statusArr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 14,
      "JeremyKwok": 34
    }
  },
  {
    "path": "src/main/java/duke/data/Result.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Result extends Evidence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents results of an investigation based on the treatment prescribed for a patient."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Result object corresponds to the result of an investigation into the symptoms of a Patient,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the particular impression, as well as an integer between 1-4 representing the priority"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * or significance of the result."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the result"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the result is tagged to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary a summary of the result"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the evidence"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Result(String name, Impression impression, int priority, String summary) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, summary);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 31
    }
  },
  {
    "path": "src/main/java/duke/data/RuntimeTypeAdapterFactory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import com.google.gson.JsonElement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.JsonPrimitive;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.TypeAdapter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import com.google.gson.TypeAdapterFactory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.internal.Streams;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import com.google.gson.stream.JsonWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Copyright (C) 2011 Google Inc."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * copied from https://github.com/google/gson/blob/master/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * refer to the second answer at https://stackoverflow.com/questions/21767485/gson-deserialization-to-specific-object-type-based-on-field-value"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * https://www.novatec-gmbh.de/en/blog/gson-object-hierarchies/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke.data;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "//import com.google.gson.*;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "//import com.google.gson.internal.Streams;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "//import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "//import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "//import com.google.gson.stream.JsonWriter;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "//import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "//import java.util.Map;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "///**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "// * Adapts values whose runtime type may differ from their declaration type. This"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "// * is necessary when a field\u0027s type is not the same type that GSON should create"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "// * when deserializing that field. For example, consider these types:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "// * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "// *   abstract class Shape {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int x;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int y;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "// *   class Circle extends Shape {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int radius;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "// *   class Rectangle extends Shape {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int width;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int height;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "// *   class Diamond extends Shape {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int width;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "// *     int height;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "// *   class Drawing {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "// *     Shape bottomShape;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "// *     Shape topShape;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "// * the bottom shape in this drawing a rectangle or a diamond? \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "// *   {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "// *     \"bottomShape\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"width\": 10,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"height\": 5,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"x\": 0,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"y\": 0"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "// *     },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "// *     \"topShape\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"radius\": 2,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"x\": 4,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"y\": 1"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "// *     }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }}\u003c/pre\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "// * This class addresses this problem by adding type information to the"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "// * serialized JSON and honoring that type information when the JSON is"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "// * deserialized: \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "// *   {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "// *     \"bottomShape\": {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"type\": \"Diamond\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"width\": 10,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"height\": 5,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"x\": 0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"y\": 0"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "// *     },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "// *     \"topShape\": {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"type\": \"Circle\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"radius\": 2,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"x\": 4,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \"y\": 1"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "// *     }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "// *   }}\u003c/pre\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "// * Both the type field name ({@code \"type\"}) and the type labels ({@code"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "// * \"Rectangle\"}) are configurable."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "// *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "// * \u003ch3\u003eRegistering Types\u003c/h3\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "// * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "// * name to the {@link #of} factory method. If you don\u0027t supply an explicit type"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "// * field name, {@code \"type\"} will be used. \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "// *   RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "// *       \u003d RuntimeTypeAdapterFactory.of(Shape.class, \"type\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "// * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "// * Next register all of your subtypes. Every subtype must be explicitly"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "// * registered. This protects your application from injection attacks. If you"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "// * don\u0027t supply an explicit type label, the type\u0027s simple name will be used."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "// * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "// *   shapeAdapterFactory.registerSubtype(Rectangle.class, \"Rectangle\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "// *   shapeAdapterFactory.registerSubtype(Circle.class, \"Circle\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "// *   shapeAdapterFactory.registerSubtype(Diamond.class, \"Diamond\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "// * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "// * Finally, register the type adapter factory in your application\u0027s GSON builder:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "// * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "// *   Gson gson \u003d new GsonBuilder()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "// *       .registerTypeAdapterFactory(shapeAdapterFactory)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "// *       .create();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "// * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "// * Like {@code GsonBuilder}, this API supports chaining: \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "// *   RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory \u003d RuntimeTypeAdapterFactory.of(Shape.class)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "// *       .registerSubtype(Rectangle.class)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "// *       .registerSubtype(Circle.class)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "// *       .registerSubtype(Diamond.class);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "// * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "// */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "public class RuntimeTypeAdapterFactory\u003cT\u003e implements TypeAdapterFactory {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Class\u003c?\u003e baseType;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String typeFieldName;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cString, Class\u003c?\u003e\u003e labelToSubtype \u003d new LinkedHashMap\u003cString, Class\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cClass\u003c?\u003e, String\u003e subtypeToLabel \u003d new LinkedHashMap\u003cClass\u003c?\u003e, String\u003e();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean maintainType;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    private RuntimeTypeAdapterFactory(Class\u003c?\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        if (typeFieldName \u003d\u003d null || baseType \u003d\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        this.baseType \u003d baseType;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        this.typeFieldName \u003d typeFieldName;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        this.maintainType \u003d maintainType;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code maintainType} flag decide if the type will be stored in pojo or not."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, typeFieldName, maintainType);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, typeFieldName, false);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new runtime type adapter for {@code baseType} using {@code \"type\"} as"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * the type field name."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, \"type\", false);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Registers {@code type} identified by {@code label}. Labels are case"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * sensitive."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or {@code label}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type, String label) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type \u003d\u003d null || label \u003d\u003d null) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(\"types and labels must be unique\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        labelToSubtype.put(label, type);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        subtypeToLabel.put(type, label);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * Registers {@code type} identified by its {@link Class#getSimpleName simple"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * name}. Labels are case sensitive."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or its simple name"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        return registerSubtype(type, type.getSimpleName());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     * checkstyle fix."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    public \u003cR\u003e TypeAdapter\u003cR\u003e create(Gson gson, TypeToken\u003cR\u003e type) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type.getRawType() !\u003d baseType) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        final Map\u003cString, TypeAdapter\u003c?\u003e\u003e labelToDelegate"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003d new LinkedHashMap\u003cString, TypeAdapter\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        final Map\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e subtypeToDelegate"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003d new LinkedHashMap\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cString, Class\u003c?\u003e\u003e entry : labelToSubtype.entrySet()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            //TypeAdapter\u003c?\u003e delegate \u003d gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            //labelToDelegate.put(entry.getKey(), delegate);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            //subtypeToDelegate.put(entry.getValue(), delegate);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        return new TypeAdapter\u003cR\u003e() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public R read(JsonReader in) throws IOException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                JsonElement jsonElement \u003d Streams.parse(in);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                JsonElement labelJsonElement;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().get(typeFieldName);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().remove(typeFieldName);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                if (labelJsonElement \u003d\u003d null) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \" + baseType"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" because it does not define a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                String label \u003d labelJsonElement.getAsString();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                        TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) labelToDelegate.get(label);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \" + baseType + \" subtype named \""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                            + label + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                return delegate.fromJsonTree(jsonElement);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public void write(JsonWriter out, R value) throws IOException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                Class\u003c?\u003e srcType \u003d value.getClass();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                        TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) subtypeToDelegate.get(srcType);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                final String label \u003d subtypeToLabel.get(srcType);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                JsonObject jsonObject \u003d delegate.toJsonTree(value).getAsJsonObject();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    Streams.write(jsonObject, out);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                JsonObject clone \u003d new JsonObject();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                if (jsonObject.has(typeFieldName)) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" because it already defines a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                clone.add(typeFieldName, new JsonPrimitive(label));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Map.Entry\u003cString, JsonElement\u003e e : jsonObject.entrySet()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                    clone.add(e.getKey(), e.getValue());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                Streams.write(clone, out);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        }.nullSafe();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 4,
      "-": 265
    }
  },
  {
    "path": "src/main/java/duke/data/SearchResult.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class SearchResult extends DukeObject {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private List\u003c? extends DukeObject\u003e searchList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cPatient\u003e patientList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cImpression\u003e impressionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cEvidence\u003e evidenceList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cTreatment\u003e treatmentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the evidence or treatment data of a patient."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A DukeData object corresponds to the evidence or treatment a doctor has,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that data as well as an integer"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the list of DukeObjects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchList the impression object the data is tagged to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public SearchResult(String name, List\u003c? extends DukeObject\u003e searchList, DukeObject parent) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, parent);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.searchList \u003d searchList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.patientList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impressionList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.evidenceList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.treatmentList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public List\u003c? extends DukeObject\u003e getSearchList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e getPatientList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return patientList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cImpression\u003e getImpressionList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return impressionList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cEvidence\u003e getEvidenceList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return evidenceList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cTreatment\u003e getTreatmentList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return treatmentList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Object parseUserChoice(String inputStr) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void initList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (DukeObject object : searchList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (object instanceof Patient) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                patientList.add((Patient) object);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (object instanceof Impression) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                impressionList.add((Impression) object);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (object instanceof Observation || object instanceof Result) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                evidenceList.add((Evidence) object);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (object instanceof Investigation || object instanceof Medicine || object instanceof Plan) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                treatmentList.add((Treatment) object);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 10,
      "JeremyKwok": 72
    }
  },
  {
    "path": "src/main/java/duke/data/Treatment.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class Treatment extends DukeData {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Integer statusIdx;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the actions taken to treat an impression the Doctor has about a patient."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Treatment object corresponds to what actions the doctor is taking to treat the symptoms of a Patient,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the information that led to that particular treatment, the status of the treatment,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - name: the treatment given"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - impression: the impression object the treatment is tagged to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - status: the current status of the treatment"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - priority: the priority level of the treatment"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment(String name, Impression impression, int priority, int statusIdx) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.statusIdx \u003d statusIdx;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Integer setPriority(Integer priorityVal) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (priorityVal \u003e\u003d 0 \u0026\u0026 priorityVal \u003c 5) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            super.setPriority(priorityVal);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return super.getPriority();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The priority must be within 0 to 4!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString \u003d \"Status: \" + this.statusIdx + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString +\u003d \"Status Description: \" + getStatusStr() + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString \u003d \"Status of treatment: \" + this.statusIdx + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        informationString +\u003d \"Status Description: \" + getStatusStr() + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setStatusIdx(Integer statusIdx) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.statusIdx \u003d statusIdx;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Integer getStatusIdx() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return statusIdx;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public abstract String getStatusStr();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks for equality with another Treatment object - all fields have the same value and all references point to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the same objects. Primarily for testing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param treatment The treatment to compare against."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return True if all fields and references are the same, false otherwise."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public boolean equals(Treatment treatment) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (super.equals(treatment)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return statusIdx.equals(treatment.statusIdx);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 26,
      "JeremyKwok": 41,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/data/TreatmentAdaptor.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonDeserializationContext;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonDeserializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonElement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonPrimitive;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonSerializationContext;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.JsonSerializer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class TreatmentAdaptor implements JsonSerializer\u003cTreatment\u003e, JsonDeserializer\u003cTreatment\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throws JsonParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonObject result \u003d json.getAsJsonObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String type \u003d result.get(\"type\").getAsString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonElement element \u003d result.get(\"properties\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return context.deserialize(element, Class.forName(\"duke.data.\" + type));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new JsonParseException(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public JsonElement serialize(Treatment src, Type typeOfSrc, JsonSerializationContext context) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        JsonObject result \u003d new JsonObject();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        result.add(\"type\", new JsonPrimitive(src.getClass().getSimpleName()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        result.add(\"properties\", context.serialize(src, src.getClass()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 35
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeHelpException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DukeHelpException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public DukeHelpException(String msg, Command command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(msg + System.lineSeparator() + System.lineSeparator() + command.getHelp());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUtilException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Exception thrown by a static function, that needs some extra context to be properly displayed. Meant to be caught"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * and re-thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DukeUtilException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public DukeUtilException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/MessageBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class MessageBox extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"MessageBox.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image userAvatar \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image dukeAvatar \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private HBox container;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Circle avatar;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox messageHolder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Text message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a new MessageBox object to be displayed in the command window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private MessageBox(String text, Image image) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        message.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        message.wrappingWidthProperty().bind(messageHolder.prefWidthProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        avatar.setFill(new ImagePattern(image));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates a message box for the user\u0027s input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static MessageBox getUserMessage(String text) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        MessageBox messageBox \u003d new MessageBox(text, userAvatar);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageBox.flip();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return messageBox;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates a new message box for Duke\u0027s response."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static MessageBox getDukeMessage(String text) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        MessageBox messageBox \u003d new MessageBox(text, dukeAvatar);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageBox.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return messageBox;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Flips the message box such that the {@code avatar} is on the left and the {@code message} is on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(container.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        container.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        container.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 70
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * API of the UI component of the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Starts the UI (and the JavaFX application)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Stage created by the JavaFX system when the application starts up."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints message on the {@code CommandWindow}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Output message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void print(String message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update UI of current context."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Output message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void updateUi(String message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Displays an info pop-up dialog on screen."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param title   Title of dialog."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Dialog message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void showInfoDialog(String title, String message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param title Title of error dialog."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param e     Thrown Error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void showErrorDialogAndShutdown(String title, Throwable e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Retrieves indexed list of DukeObjects."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * List is dependent on the current {@code UiContext}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param type DukeObject type."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Indexed list of DukeObjects."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    List\u003cDukeObject\u003e getIndexedList(String type);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 58
    }
  },
  {
    "path": "src/main/java/duke/ui/UiElement.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a distinct UI element in the application, e.g. windows, panels, dialogs, etc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * @param \u003cT\u003e Root node\u0027s type."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class UiElement\u003cT\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a UiElement with the specified FXML file name and root object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * The FXML file MUST not specify the {@code fx:controller} attribute as it will be specified"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * in {@link #loadFxmlFile(URL, T)}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiElement(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        loadFxmlFile(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return FXML file URL for the FXML file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        URL fxmlFileUrl \u003d DukeCore.class.getResource(FXML_FILE_FOLDER + fxmlFileName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Loads the object hierarchy from a FXML file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param url  Location of the FXML file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param root Root of the object hierarchy."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void loadFxmlFile(URL url, T root) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setLocation(url);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Returns the root element of this UiElement."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 69
    }
  },
  {
    "path": "src/main/java/duke/ui/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.window.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Manager of the UI component of the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image ICON_APPLICATION \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/icon.png\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeCore core;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the UIManager."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core Core of Dr. Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiManager(DukeCore core) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: We do not need the entire Duke\u0027s core in the UI component."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.core \u003d core;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        setApplicationIcon(primaryStage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            showMainWindow(primaryStage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            showErrorDialogAndShutdown(\"Fatal error encountered on application startup\", e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String displayMessage \u003d message.replace(\"\\t\", \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (mainWindow !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            mainWindow.print(displayMessage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi(String message) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (mainWindow !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            mainWindow.updateUi(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showInfoDialog(String title, String message) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        final Alert infoAlert \u003d new Alert(Alert.AlertType.INFORMATION);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        infoAlert.setTitle(title);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        infoAlert.setHeaderText(message);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        infoAlert.showAndWait();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        final Alert errorAlert \u003d new Alert(Alert.AlertType.ERROR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setTitle(title);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setHeaderText(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setContentText(e.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.showAndWait();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return mainWindow.getIndexedList(type);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set application\u0027s icon."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage for the application."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void setApplicationIcon(Stage primaryStage) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        primaryStage.getIcons().add(ICON_APPLICATION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Show main UI window of the application."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage for the application."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void showMainWindow(Stage primaryStage) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        mainWindow \u003d new MainWindow(primaryStage, core);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        mainWindow.show();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 112,
      "aquohn": 2,
      "JeremyKwok": 2
    }
  },
  {
    "path": "src/main/java/duke/ui/UiStrings.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import static java.util.Map.entry;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class UiStrings {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_ALLERGIES_NONE \u003d \"No allergies\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_HISTORY_NOT_SET \u003d \"No medical history\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_AGE_NOT_SET \u003d \"No age set\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_HEIGHT_NOT_SET \u003d \"No height set\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_WEIGHT_NOT_SET \u003d \"No weight set\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_NUMBER_NOT_SET \u003d \"No number set\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String DISPLAY_ADDRESS_NOT_SET \u003d \"No address set\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static final Map\u003cString, String\u003e SEARCH_HELPER \u003d Map.ofEntries("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Patient\", \"/images/patient.png\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Impression\", \"/images/impression_name.png\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Observation\", \"/images/observation.png\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Result\", \"/images/result.png\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Investigation\", \"/images/investigation.png\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Medicine\", \"/images/treatment.png\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            entry(\"Plan\", \"/images/plan.png\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 7,
      "aquohn": 4,
      "JeremyKwok": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/card/EvidenceCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of an {@code Evidence}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class EvidenceCard extends UiCard {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String[] priorities \u003d {\"No priority\", \"Critical\", \"Urgent\", \"Compulsory\", \"Optional\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label criticalLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Evidence evidence;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a EvidenceCard object with the specified {@code Evidence}\u0027s details."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param evidence     Evidence object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public EvidenceCard(String fxmlFileName, Evidence evidence) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(fxmlFileName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.evidence \u003d evidence;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillEvidenceCard();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Evidence}\u0027s details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillEvidenceCard() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(evidence.getName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String priorityText \u003d String.valueOf(evidence.getPriority());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (evidence.getPriority() \u003e\u003d 0 \u0026\u0026 evidence.getPriority() \u003c priorities.length) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            priorityText +\u003d \" - \" + priorities[evidence.getPriority()];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        criticalLabel.setText(priorityText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (super.equals(object)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!(object instanceof EvidenceCard)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        EvidenceCard card \u003d (EvidenceCard) object;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return evidence \u003d\u003d card.getEvidence();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public abstract Evidence getEvidence();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 58,
      "aquohn": 6
    }
  },
  {
    "path": "src/main/java/duke/ui/card/HelpCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Help;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays all of the information of a {@code Help}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HelpCard extends UiCard {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"HelpCard.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label commandLabel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label descriptionLabel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label formatLabel;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label switchLabel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox mainSection;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox detailsSection;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Help help;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a HelpCard object with the specified {@code Help}\u0027s details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param help           Help object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param isDetailsShown If the details for the Help object should be shown."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public HelpCard(Help help, boolean isDetailsShown) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.help \u003d help;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandLabel.setText(help.getCommand());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        descriptionLabel.setText(help.getSummary());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        formatLabel.setText(help.getFormat());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        switchLabel.setText(help.getSwitches());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!isDetailsShown) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            mainSection.getChildren().remove(detailsSection);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Help getHelp() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return help;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 53
    }
  },
  {
    "path": "src/main/java/duke/ui/card/ImpressionCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays basic information of an {@code Impression}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ImpressionCard extends UiCard {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"ImpressionCard.fxml\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String STYLE_NORMAL \u003d \"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String STYLE_PRIMARY \u003d \"-fx-border-color:blue; -fx-border-width: 3; -fx-border-style: solid;\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label criticalLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label followupLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label descriptionLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Impression impression;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private boolean isPrimary;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an ImpressionCard object with the specified {@code Impression}\u0027s details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param impression Impression object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param isPrimary  If the Impression object is a primary diagnosis."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ImpressionCard(Impression impression, boolean isPrimary) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.impression \u003d impression;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.isPrimary \u003d isPrimary;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillImpressionCard();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Impression}\u0027s details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillImpressionCard() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(impression.getName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        criticalLabel.setText(impression.getCriticalCountStr());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        followupLabel.setText(impression.getFollowUpCountStr());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        descriptionLabel.setText(impression.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (isPrimary) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setStyle(STYLE_PRIMARY);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setStyle(STYLE_NORMAL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (super.equals(object)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!(object instanceof ImpressionCard)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ImpressionCard card \u003d (ImpressionCard) object;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return impression \u003d\u003d card.getImpression();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Impression getImpression() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return impression;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 74,
      "aquohn": 3
    }
  },
  {
    "path": "src/main/java/duke/ui/card/InvestigationCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of an {@code Investigation}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class InvestigationCard extends TreatmentCard {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"InvestigationCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Investigation investigation;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an InvestigationCard object with the specified {@code Investigation}\u0027s details."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param investigation Investigation object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public InvestigationCard(Investigation investigation) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, investigation);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.investigation \u003d investigation;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillInvestigationCard();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Investigation}\u0027s details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillInvestigationCard() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(investigation.getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String statusText \u003d String.valueOf(investigation.getStatusIdx());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (investigation.getStatusIdx() \u003e\u003d 0 \u0026\u0026 investigation.getStatusIdx() \u003c Investigation.getStatusArr().size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            statusText +\u003d \" - \" + investigation.getStatusStr();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        statusLabel.setText(statusText);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Treatment getTreatment() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return investigation;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 43
    }
  },
  {
    "path": "src/main/java/duke/ui/card/MedicineCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of a {@code Medicine}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class MedicineCard extends TreatmentCard {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"MedicineCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    // TODO: holdover from when we intended to implement custom status arrays"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String[] statuses \u003d {\"No status\", \"Request not submitted\", \"Submitted request\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \"Pending\", \"Ongoing\", \"Completed\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Medicine medicine;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an MedicineCard object with the specified {@code Medicine}\u0027s details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param medicine Medicine object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public MedicineCard(Medicine medicine) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, medicine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.medicine \u003d medicine;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillMedicineCard();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Medicine}\u0027s details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillMedicineCard() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(medicine.getName() + \" - \" + medicine.getDose());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String statusText \u003d String.valueOf(medicine.getStatusIdx());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (medicine.getStatusIdx() \u003e\u003d 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u0026\u0026 medicine.getStatusIdx() \u003c Medicine.getStatusArr().size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            statusText +\u003d \" - \" + medicine.getStatusStr();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (medicine.getStatusIdx() \u003e\u003d 0 \u0026\u0026 medicine.getStatusIdx() \u003c statuses.length) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            statusText +\u003d \" - Default \" + statuses[medicine.getStatusIdx()];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        statusLabel.setText(statusText);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Treatment getTreatment() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return medicine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/card/ObservationCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of an {@code Observation}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ObservationCard extends EvidenceCard {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"ObservationCard.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label objectiveLabel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Observation observation;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an ObservationCard object with the specified {@code Observation}\u0027s details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param observation Observation object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ObservationCard(Observation observation) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, observation);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.observation \u003d observation;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillObservationCard();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Observation}\u0027s details."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillObservationCard() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (observation.isObjective()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            objectiveLabel.setText(\"Objective\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            objectiveLabel.setText(\"Subjective\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Evidence getEvidence() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return observation;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 46
    }
  },
  {
    "path": "src/main/java/duke/ui/card/PatientCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of a {@code Patient}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientCard extends UiCard {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"PatientCard.fxml\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label bedLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label diagnosisLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label issueLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Patient patient;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a PatientCard object with the specified {@code Patient}\u0027s details."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param patient Patient object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public PatientCard(Patient patient) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.patient \u003d patient;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillPatientCard();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Patient}\u0027s details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillPatientCard() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(patient.getName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        bedLabel.setText(\"Bed \" + patient.getBedNo());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (patient.getPrimaryDiagnosis() !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            diagnosisLabel.setText(patient.getPrimaryDiagnosis().getName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            diagnosisLabel.setText(\"No primary diagnosis\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        issueLabel.setText(patient.getCriticalCountStr());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (super.equals(object)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!(object instanceof PatientCard)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        PatientCard card \u003d (PatientCard) object;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return patient \u003d\u003d card.getPatient();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Patient getPatient() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return patient;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 70,
      "aquohn": 2
    }
  },
  {
    "path": "src/main/java/duke/ui/card/PlanCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PlanCard extends TreatmentCard {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"PlanCard.fxml\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Plan plan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a PlanCard object with the specified {@code Plan}\u0027s details."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param plan  Plan object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public PlanCard(Plan plan) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, plan);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.plan \u003d plan;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillPlanCard();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillPlanCard() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(plan.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String statusText \u003d String.valueOf(plan.getStatusIdx());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (plan.getStatusIdx() \u003e\u003d 0 \u0026\u0026 plan.getStatusIdx() \u003c Plan.getStatusArr().size()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            statusText +\u003d \" - \" + plan.getStatusStr();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        statusLabel.setText(statusText);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Treatment getTreatment() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return plan;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/card/ResultCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of a {@code Result}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ResultCard extends EvidenceCard {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"ResultCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Result result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a ResultCard object with the specified {@code Result}\u0027s details."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param result Result object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ResultCard(Result result) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, result);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.result \u003d result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Evidence getEvidence() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 29
    }
  },
  {
    "path": "src/main/java/duke/ui/card/TreatmentCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A UI card that displays the basic information of a {@code Treatment}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class TreatmentCard extends UiCard {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final String[] priorities \u003d {\"No priority\", \"Critical\", \"Urgent\", \"Compulsory\", \"Optional\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected Label nameLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected Label statusLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label criticalLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Treatment treatment;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a Treatment object with the specified {@code Treatment}\u0027s details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param treatment    Treatment object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    TreatmentCard(String fxmlFileName, Treatment treatment) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(fxmlFileName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.treatment \u003d treatment;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillTreatmentCard();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the UI card with the {@code Treatment}\u0027s details."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillTreatmentCard() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String priorityText \u003d String.valueOf(treatment.getPriority());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (treatment.getPriority() \u003e\u003d 0 \u0026\u0026 treatment.getPriority() \u003c priorities.length) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            priorityText +\u003d \" - \" + priorities[treatment.getPriority()];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        criticalLabel.setText(priorityText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (super.equals(object)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!(object instanceof TreatmentCard)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        TreatmentCard card \u003d (TreatmentCard) object;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return treatment \u003d\u003d card.getTreatment();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public abstract Treatment getTreatment();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 58,
      "aquohn": 6
    }
  },
  {
    "path": "src/main/java/duke/ui/card/UiCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * An UI element that displays basic information of a {@code DukeObject}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class UiCard extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label indexLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String cardType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a UiCard object with the specified {@code DukeObject}\u0027s details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    UiCard(String fxmlFileName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeCore.class.getResource(FXML_FILE_FOLDER + fxmlFileName));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // TODO: Proper exception handling here."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (indexLabel !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            cardType \u003d indexLabel.getText();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return object \u003d\u003d this;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set index of card."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param index New index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexLabel.setText(cardType + \" \" + index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 59
    }
  },
  {
    "path": "src/main/java/duke/ui/context/Context.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.context;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Enum defining the types of contexts that Dr. Duke can take on."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public enum Context {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    HOME,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    PATIENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    IMPRESSION,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    SEARCH,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    TREATMENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    EVIDENCE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    INVESTIGATION"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 12,
      "JeremyKwok": 2
    }
  },
  {
    "path": "src/main/java/duke/ui/context/UiContext.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.context;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeSupport;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI context of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class UiContext {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeObject object;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Context context;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Stack\u003cPair\u003cContext, DukeObject\u003e\u003e contexts;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PropertyChangeSupport pcs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the UI context with HOME as the default value."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiContext() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.context \u003d Context.HOME;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.object \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.pcs \u003d new PropertyChangeSupport(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.contexts \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Adds a listener to listen for changes in {@code context}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param pcl PropertyChangeListener object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void addListener(PropertyChangeListener pcl) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.addPropertyChangeListener(pcl);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Sets context for the application. An associated DukeObject should be provided as well."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * For example, from Home -\u003e Patient, a Patient object should be passed in."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param newContext New context"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param object     DukeObject associated with the new object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void setContext(Context newContext, DukeObject object) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (newContext !\u003d Context.HOME) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            contexts.push(new Pair\u003c\u003e(this.context, this.object));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        updateContext(newContext, object);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Moves up one in the hierarchy of contexts."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void moveUpOneContext() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (context \u003d\u003d Context.HOME) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(\"You are already in the Home context.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (context \u003d\u003d Context.PATIENT) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            setContext(Context.HOME, null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (context \u003d\u003d Context.IMPRESSION) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            setContext(Context.PATIENT, object.getParent());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            setContext(Context.IMPRESSION, object.getParent());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Moves back one context."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void moveBackOneContext() throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (contexts.empty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(\"No previous context before this!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Pair\u003cContext, DukeObject\u003e pair \u003d contexts.pop();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        updateContext(pair.getKey(), pair.getValue());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void updateContext(Context newContext, DukeObject object) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Context oldContext \u003d this.context;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.context \u003d newContext;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.object \u003d object;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.firePropertyChange(\"context\", oldContext, this.context);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Context getContext() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return context;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeObject getObject() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return object;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 77,
      "aquohn": 12,
      "JeremyKwok": 6
    }
  },
  {
    "path": "src/main/java/duke/ui/window/CommandWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Executor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.MessageBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI element designed for the user to interact with the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * It has 3 main tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 1. Displays and reads user\u0027s input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 2. Use the Parser to parse VALID user\u0027s input into a defined command and displays the corresponding result."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 3. Displays the appropriate error message for INVALID user\u0027s input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class CommandWindow extends InputHistoryWindow {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"CommandWindow.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_GREET \u003d \"Hello! I\u0027m Dr. Duke.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_QUESTION \u003d \"What can I do for you today?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox messageContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Executor executor;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the command window of the application."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param parser   Parser object responsible for parsing user commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param executor Executor object responsible for executing user commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public CommandWindow(Parser parser, Executor executor) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.executor \u003d executor;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        scrollPane.vvalueProperty().bind(messageContainer.heightProperty());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.requestFocus();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        printWelcome();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected void handleAction() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String input \u003d inputTextField.getText().strip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            storeInput(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeHistory();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                printError(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            messageContainer.getChildren().add(MessageBox.getUserMessage(input).getRoot());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                executor.execute(parseCommand(input));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                printError(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.setText(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Uses the Parser to retrieve the requested command, which will be loaded with parameters"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * extracted from the user\u0027s input arguments."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param input Input string to be parsed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return The command specified by the user, with arguments parsed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the parser fails to find a matching command or the arguments do not meet the command\u0027s"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       requirements."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Command parseCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return parser.parse(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageContainer.getChildren().add(MessageBox.getDukeMessage(message).getRoot());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void printWelcome() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String welcome \u003d MESSAGE_WELCOME_GREET + System.lineSeparator() + MESSAGE_WELCOME_QUESTION;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        print(welcome);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints error message from an exception."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void printError(DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        print(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public TextArea getInputTextField() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return inputTextField;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 112,
      "aquohn": 7
    }
  },
  {
    "path": "src/main/java/duke/ui/window/ContextWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiElement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class ContextWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a generic UI window."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ContextWindow(String fxmlFileName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(fxmlFileName, null);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update UI window."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public abstract void updateUi();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Retrieves indexed list of {@code DukeObject}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Indexed list of DukeObjects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public abstract List\u003cDukeObject\u003e getIndexedList(String type);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/window/HelpWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXListView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Help;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiElement;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.HelpCard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.UiContext;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI element for the help window."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HelpWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String HELP_FILE \u003d \"data\" + File.separator + \"helpDetails.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cHelpCard\u003e helpListView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cHelp\u003e helpList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cHelp\u003e contextedHelpList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a help window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage        GSON storage object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param inputTextField TextArea for user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param uiContext      UiContext object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the data file cannot be loaded by the GSON storage object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public HelpWindow(GsonStorage storage, TextArea inputTextField, UiContext uiContext) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initialise(storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        attachListenerToInput(inputTextField);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        attachListenerToContext(uiContext);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: tmp"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.requestFocus();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        helpListView.setOnMouseClicked(event -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputTextField.setText(helpListView.getSelectionModel().getSelectedItem().getHelp().getCommand());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputTextField.requestFocus();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputTextField.positionCaret(inputTextField.getText().length());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Initialises the {@link #helpList} and {@link #helpListView} for the Home context."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage GSON storage object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the data file cannot be loaded."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void initialise(GsonStorage storage) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        helpList \u003d storage.loadHelpList(HELP_FILE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        update(Context.HOME);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Updates the {@link #contextedHelpList} and {@link #helpListView} for a given context."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param context The current context."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void update(Context context) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        contextedHelpList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        helpListView.getItems().clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        helpList.forEach(help -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (help.getContext() \u003d\u003d context) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                contextedHelpList.add(help);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                helpListView.getItems().add(new HelpCard(help, false));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Attaches a listener to the input text field of the {@code CommandWindow}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param inputTextField TextArea for user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void attachListenerToInput(TextArea inputTextField) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            List\u003cHelp\u003e filteredHelpList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            helpListView.getItems().clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            for (Help help : contextedHelpList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String command \u003d help.getCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (newValue.contains(command)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    filteredHelpList.add(help);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else if (command.contains(newValue)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    filteredHelpList.add(help);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            boolean isDetailsShown \u003d (filteredHelpList.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            filteredHelpList.forEach(help -\u003e helpListView.getItems().add(new HelpCard(help, isDetailsShown)));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Attaches a listener to the {@code UiContext}."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param uiContext UiContext object."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void attachListenerToContext(UiContext uiContext) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        uiContext.addListener(event -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            update((Context) event.getNewValue());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 120
    }
  },
  {
    "path": "src/main/java/duke/ui/window/HomeContextWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXMasonryPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.PatientCard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI window for the Home context."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HomeContextWindow extends ContextWindow {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"HomeContextWindow.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXMasonryPane patientListPanel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cPatient\u003e patientList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cDukeObject\u003e indexedPatientList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the Home UI window."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param patientList List of {@code Patient} objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public HomeContextWindow(ArrayList\u003cPatient\u003e patientList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.patientList \u003d patientList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        JFXScrollPane.smoothScrolling(scrollPane);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        updateUi();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills {@code indexedPatientList} and {@code patientListPanel}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void fillPatientList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        indexedPatientList \u003d new ArrayList\u003c\u003e(patientList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patientListPanel.getChildren().clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexedPatientList.forEach(patient -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            PatientCard patientCard \u003d new PatientCard((Patient) patient);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            patientCard.setIndex(patientList.indexOf(patient) + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            patientListPanel.getChildren().add(patientCard);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fillPatientList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return indexedPatientList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Attaches a listener to the patient hashmap."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * This listener updates the {@code patientListPanel} whenever the patient hashmap is updated."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //private void attachPatientListListener() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //   patientObservableMap.addListener((MapChangeListener\u003cString, Patient\u003e) change -\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //       fillPatientList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //   });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 67,
      "JeremyKwok": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/window/ImpressionContextWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.jfoenix.controls.JFXListView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiStrings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.EvidenceCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.InvestigationCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.MedicineCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.ObservationCard;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.PlanCard;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.ResultCard;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.TreatmentCard;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI window for the Impression context."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ImpressionContextWindow extends ContextWindow {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"ImpressionContextWindow.fxml\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label patientNameLabel;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label patientBedLabel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label criticalLabel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label followUpLabel;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label descriptionLabel;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label allergiesLabel;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private JFXListView\u003cEvidenceCard\u003e evidenceListPanel;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private JFXListView\u003cTreatmentCard\u003e treatmentListPanel;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Patient patient;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Impression impression;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Constructs the patient UI window."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ImpressionContextWindow(Impression impression, Patient patient) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (impression !\u003d null \u0026\u0026 patient !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.patient \u003d patient;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.impression \u003d impression;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            //setImpression();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            updateUi();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set impressions for {@code patient}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void setImpression() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        assert (patient.getName().equals(impression.getParent().getName()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        updateUi();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //patient.getAttributes().addListener((MapChangeListener\u003cString, Object\u003e) change -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //    updateUi();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //});"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: description doesn\u0027t update UI"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //patient.getImpressionsObservableMap().addListener((MapChangeListener\u003cString, Impression\u003e) change -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //    updateUi();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //});"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        for (Map.Entry\u003cString, Evidence\u003e pair : impression.getObservableEvidences().entrySet()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            evidenceListPanel.getItems().add(newEvidenceCard(pair.getValue()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        for (Map.Entry\u003cString, Treatment\u003e pair : impression.getObservableTreatments().entrySet()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            treatmentListPanel.getItems().add(newTreatmentCard(pair.getValue()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        // TODO: optimise by tracking critical and follow-up count in impression"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        impression.getObservableEvidences().addListener((MapChangeListener\u003cString, Evidence\u003e) change -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            if (change.wasAdded() \u0026\u0026 newEvidenceCard(change.getValueAdded()) !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //                evidenceListPanel.getItems().add(newEvidenceCard(change.getValueAdded()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            } else if (change.wasRemoved() \u0026\u0026 newEvidenceCard(change.getValueRemoved()) !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //                evidenceListPanel.getItems().remove(newEvidenceCard(change.getValueRemoved()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            criticalLabel.setText(impression.getCriticalCountStr());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        impression.getObservableTreatments().addListener((MapChangeListener\u003cString, Treatment\u003e) change -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            if (change.wasAdded() \u0026\u0026 newTreatmentCard(change.getValueAdded()) !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //                treatmentListPanel.getItems().add(newTreatmentCard(change.getValueAdded()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            } else if (change.wasRemoved() \u0026\u0026 newTreatmentCard(change.getValueAdded()) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //                treatmentListPanel.getItems().remove(newTreatmentCard(change.getValueRemoved()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            criticalLabel.setText(impression.getCriticalCountStr());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //            followUpLabel.setText(impression.getFollowUpCountStr());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function returns the new card added dependent on the class instance."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param evidence Evidence object"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param index    Displayed index."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return ObservationCard/ResultCard"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private EvidenceCard newEvidenceCard(Evidence evidence, int index) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        EvidenceCard evidenceCard;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (evidence instanceof Observation) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            evidenceCard \u003d new ObservationCard((Observation) evidence);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (evidence instanceof Result) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            evidenceCard \u003d new ResultCard((Result) evidence);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        evidenceCard.setIndex(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return evidenceCard;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function returns the new card added dependent on the class instance."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param treatment Treatment object."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param index     Displayed index."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return InvestigationCard/MedicineCard/PlanCard"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TreatmentCard newTreatmentCard(Treatment treatment, int index) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        TreatmentCard treatmentCard;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (treatment instanceof Investigation) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            treatmentCard \u003d new InvestigationCard((Investigation) treatment);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (treatment instanceof Medicine) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            treatmentCard \u003d new MedicineCard((Medicine) treatment);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (treatment instanceof Plan) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            treatmentCard \u003d new PlanCard((Plan) treatment);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        treatmentCard.setIndex(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return treatmentCard;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        nameLabel.setText(String.valueOf(impression.getName()));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientNameLabel.setText(String.valueOf(patient.getName()));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientBedLabel.setText(String.valueOf(patient.getBedNo()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        descriptionLabel.setText(String.valueOf(impression.getDescription()));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        StringBuilder allergies \u003d new StringBuilder();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (patient.getAllergies() !\u003d null) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (String allergy : patient.getAllergies().split(\",\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                allergies.append(allergy.strip()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            allergiesLabel.setText(allergies.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            allergiesLabel.setText(UiStrings.DISPLAY_ALLERGIES_NONE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        criticalLabel.setText(impression.getCriticalCountStr());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        followUpLabel.setText(impression.getFollowUpCountStr());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        evidenceListPanel.getItems().clear();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Evidence evidence : impression.getEvidences()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            int index \u003d (evidence.getPriority() \u003d\u003d 1) ? 1 : evidenceListPanel.getItems().size() + 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            evidenceListPanel.getItems().add(newEvidenceCard(evidence, index));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        treatmentListPanel.getItems().clear();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Treatment treatment : impression.getTreatments()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            int index \u003d (treatment.getPriority() \u003d\u003d 1) ? 1 : treatmentListPanel.getItems().size() + 1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            treatmentListPanel.getItems().add(newTreatmentCard(treatment, index));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 94,
      "aquohn": 4,
      "JeremyKwok": 104
    }
  },
  {
    "path": "src/main/java/duke/ui/window/InputHistoryWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiElement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/* @@author gowgos5 */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class InputHistoryWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected TextArea inputTextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cString\u003e inputHistory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private int historyPointer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String currentInput \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private File historyFile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the command window of the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public InputHistoryWindow(String fxmlFileName, Region root) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(fxmlFileName, root);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // listen for updates to text field, and save partial input to currentInput if not viewing history"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (historyPointer \u003d\u003d inputHistory.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentInput \u003d newValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        historyFile \u003d new File(\"data/history.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Scanner commandScanner \u003d new Scanner(historyFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            while (commandScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                inputHistory.add(commandScanner.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            historyPointer \u003d inputHistory.size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (FileNotFoundException excp) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            historyPointer \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Updates the text field with the previous input in {@code inputHistory},"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * if there exists a previous input in {@code inputHistory}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void navigateToPreviousInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (historyPointer \u003e 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            --historyPointer;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setText(inputHistory.get(historyPointer));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Updates the text field with the next input in {@code inputHistory},"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * if there exists a next input in {@code inputHistory}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void navigateToNextInput() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (historyPointer \u003c inputHistory.size() - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ++historyPointer;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setText(inputHistory.get(historyPointer));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (historyPointer \u003d\u003d inputHistory.size() - 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ++historyPointer;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setText(currentInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } //ignore if already viewing current input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Sets {@code inputTextField} with {@code text} and"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * positions the caret to the end of the {@code text}."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param text Text to be set in the input text field of the command window."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void setText(String text) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.setText(text);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        inputTextField.positionCaret(inputTextField.getText().length());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Handles key press event, {@code keyEvent}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void handleKeyPress(KeyEvent keyEvent) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        switch (keyEvent.getCode()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case PAGE_UP:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            navigateToPreviousInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case PAGE_DOWN:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            navigateToNextInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case ENTER:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            handleAction();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /* @@author aquohn */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void storeInput(String input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (historyPointer !\u003d inputHistory.size() - 1 || (historyPointer \u003d\u003d inputHistory.size() - 1"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 !input.equals(inputHistory.get(historyPointer)))) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputHistory.add(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        historyPointer \u003d inputHistory.size();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currentInput \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void writeHistory() throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            FileWriter cmdFileWr \u003d new FileWriter(historyFile);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            StringBuilder cmdStrBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (String input : inputHistory) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStrBuilder.append(input).append(System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            cmdFileWr.write(cmdStrBuilder.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            cmdFileWr.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"Unable to write command history! Some data may have been lost,\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Handles the event where the user presses \u0027Enter\" after he/she has finished"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * typing the command in {@code inputTextField}."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected abstract void handleAction();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 99,
      "aquohn": 45
    }
  },
  {
    "path": "src/main/java/duke/ui/window/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Executor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.SearchResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiElement;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.UiContext;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Tab;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Main UI window of the application."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Acts as a container for child UI elements."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class MainWindow extends UiElement\u003cStage\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private AnchorPane commandWindowHolder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TabPane contextWindowHolder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private AnchorPane homeWindowHolder;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox helpWindowHolder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private UiContext uiContext;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cPatient\u003e patientList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Executor executor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private GsonStorage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ContextWindow currentContextWindow;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Tab currentTab;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private CommandWindow commandWindow;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the main UI window to house child UI elements."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage of the application."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core         Core of Dr. Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public MainWindow(Stage primaryStage, DukeCore core) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.uiContext \u003d core.uiContext;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.patientList \u003d core.patientList.getPatientList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.executor \u003d new Executor(core);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.parser \u003d new Parser(core.uiContext);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.storage \u003d core.storage;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        placeChildUiElements();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Places child UI elements in the main UI window."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void placeChildUiElements() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        currentContextWindow \u003d new HomeContextWindow(patientList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        currentTab \u003d new Tab(\"Home\", currentContextWindow.getRoot());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        contextWindowHolder.getTabs().add(currentTab);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandWindow \u003d new CommandWindow(parser, executor);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandWindowHolder.getChildren().add(commandWindow.getRoot());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            HelpWindow helpWindow \u003d new HelpWindow(storage, commandWindow.getInputTextField(), uiContext);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            helpWindowHolder.getChildren().add(helpWindow.getRoot());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            print(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Add contexts here."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        uiContext.addListener(event -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            contextWindowHolder.getTabs().remove(currentTab);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            switch ((Context) event.getNewValue()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case HOME:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                currentContextWindow \u003d new HomeContextWindow(patientList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentTab \u003d new Tab(\"Home\", currentContextWindow.getRoot());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case PATIENT:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentContextWindow \u003d new PatientContextWindow((Patient) uiContext.getObject());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentTab \u003d new Tab(\"Patient\", currentContextWindow.getRoot());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case IMPRESSION:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                Impression impression \u003d (Impression) uiContext.getObject();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentContextWindow \u003d new ImpressionContextWindow(impression, (Patient) impression.getParent());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentTab \u003d new Tab(\"Impression\", currentContextWindow.getRoot());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case SEARCH:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                SearchResult searchResult \u003d (SearchResult) uiContext.getObject();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentContextWindow \u003d new SearchContextWindow(searchResult);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                currentTab \u003d new Tab(\"Search\", currentContextWindow.getRoot());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            contextWindowHolder.getTabs().add(currentTab);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            contextWindowHolder.getSelectionModel().select(currentTab);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Shows the main UI window."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints message on the {@code CommandWindow}."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Output message."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandWindow.print(message);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update UI window."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi(String message) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        currentContextWindow.updateUi();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Retrieves indexed list of DukeObjects."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * List is dependent on the current {@code UiContext}."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param type DukeObject type."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Indexed list of DukeObjects."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return currentContextWindow.getIndexedList(type);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 140,
      "aquohn": 3,
      "JeremyKwok": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/window/PatientContextWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXListView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Evidence;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Treatment;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiStrings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.EvidenceCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.ImpressionCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.InvestigationCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.MedicineCard;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.ObservationCard;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.PlanCard;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.ResultCard;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.card.TreatmentCard;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI window for the Patient context."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientContextWindow extends ContextWindow {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"PatientContextWindow.fxml\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label ageLabel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label heightLabel;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label weightLabel;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label bedLabel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label phoneLabel;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label addressLabel;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label historyLabel;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label allergiesLabel;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cNode\u003e impressionListPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cNode\u003e criticalListPanel;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cNode\u003e investigationListPanel;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Patient patient;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cDukeObject\u003e indexedImpressionList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cDukeObject\u003e indexedCriticalList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cDukeObject\u003e indexedInvestigationList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the patient UI window."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public PatientContextWindow(Patient patient) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.patient \u003d patient;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.indexedImpressionList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.indexedCriticalList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.indexedInvestigationList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (patient \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        updateUi();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //updatePatientWindow();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //attachPatientWindowListener();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void updatePatientWindow() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: clean up"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(String.valueOf(patient.getName()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        bedLabel.setText(String.valueOf(patient.getBedNo()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int ageNum \u003d patient.getAge();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ageLabel.setText((ageNum \u003d\u003d -1) ? UiStrings.DISPLAY_AGE_NOT_SET : ageNum + \" years old\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int heightNum \u003d patient.getHeight();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        heightLabel.setText((heightNum \u003d\u003d -1) ? UiStrings.DISPLAY_HEIGHT_NOT_SET : patient.getHeight() + \" cm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int weightNum \u003d patient.getWeight();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        weightLabel.setText((weightNum \u003d\u003d -1) ? UiStrings.DISPLAY_WEIGHT_NOT_SET : patient.getWeight() + \" kg\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int number \u003d patient.getNumber();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        phoneLabel.setText((number \u003d\u003d -1) ? UiStrings.DISPLAY_NUMBER_NOT_SET : String.valueOf(number));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String addressStr \u003d patient.getAddress();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        addressLabel.setText((\"\".equals(addressStr)) ? UiStrings.DISPLAY_ADDRESS_NOT_SET : addressStr);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String historyStr \u003d patient.getHistory();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        historyLabel.setText((\"\".equals(historyStr)) ? UiStrings.DISPLAY_HISTORY_NOT_SET : historyStr);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        StringBuilder allergies \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (\"\".equals(patient.getAllergies())) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            allergiesLabel.setText(UiStrings.DISPLAY_ALLERGIES_NONE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // TODO: document the fact that comma separated allergies are displayed on distinct rows"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            for (String allergy : patient.getAllergies().split(\",\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                allergies.append(allergy.strip()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            allergiesLabel.setText(allergies.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexedImpressionList.clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexedCriticalList.clear();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexedInvestigationList.clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        impressionListPanel.getItems().clear();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        criticalListPanel.getItems().clear();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        indexedInvestigationList.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression impression : patient.getImpressions()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Impression list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ImpressionCard impressionCard;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (impression.equals(patient.getPrimaryDiagnosis())) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionCard \u003d new ImpressionCard(impression, true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionListPanel.getItems().add(0, impressionCard);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                indexedImpressionList.add(0, impression);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionCard \u003d new ImpressionCard(impression, false);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionListPanel.getItems().add(impressionCard);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                indexedImpressionList.add(impression);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Critical list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Treatment treatment : impression.getTreatments()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (treatment.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    criticalListPanel.getItems().add(newTreatmentCard(treatment));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    indexedCriticalList.add(treatment);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Evidence evidence : impression.getEvidences()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (evidence.getPriority() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    criticalListPanel.getItems().add(newEvidenceCard(evidence));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    indexedCriticalList.add(evidence);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Investigation list"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Treatment treatment : impression.getTreatments()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (treatment instanceof Investigation) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    Investigation investigation \u003d (Investigation) treatment;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    if (investigation.getPriority() !\u003d 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        investigationListPanel.getItems().add(new InvestigationCard(investigation));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        indexedInvestigationList.add(investigation);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        impressionListPanel.getItems().forEach(card -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ((ImpressionCard) card).setIndex(impressionListPanel.getItems().indexOf(card) + 1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        criticalListPanel.getItems().forEach(card -\u003e {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ((EvidenceCard) card).setIndex(criticalListPanel.getItems().indexOf(card) + 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        investigationListPanel.getItems().forEach(card -\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ((InvestigationCard) card).setIndex(investigationListPanel.getItems().indexOf(card) + 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //private void attachPatientWindowListener() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //    patient.getAttributes().addListener((MapChangeListener\u003cString, Object\u003e) change -\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //        updatePatientWindow();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //    });"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * This function returns the new card added dependent on the class instance."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param evidence the evidence"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return ObservationCard/ResultCard"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private EvidenceCard newEvidenceCard(Evidence evidence) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (evidence instanceof Observation) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new ObservationCard((Observation) evidence);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (evidence instanceof Result) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new ResultCard((Result) evidence);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * This function returns the new card added dependent on the class instance."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param treatment the treatment"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return InvestigationCard/MedicineCard/PlanCard"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TreatmentCard newTreatmentCard(Treatment treatment) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (treatment instanceof Investigation) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new InvestigationCard((Investigation) treatment);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (treatment instanceof Medicine) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new MedicineCard((Medicine) treatment);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (treatment instanceof Plan) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new PlanCard((Plan) treatment);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        updatePatientWindow();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (\"impression\".equals(type)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return indexedImpressionList;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (\"critical\".equals(type)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return indexedCriticalList;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (\"investigation\".equals(type)) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return indexedInvestigationList;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 222,
      "aquohn": 7,
      "JeremyKwok": 9
    }
  },
  {
    "path": "src/main/java/duke/ui/window/SearchContextWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.ui.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.jfoenix.controls.JFXListView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.SearchResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.UiStrings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.ImpressionCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.InvestigationCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.MedicineCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.ObservationCard;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.PatientCard;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.PlanCard;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.ResultCard;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.card.UiCard;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * UI window for the Patient context."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class SearchContextWindow extends ContextWindow {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"SearchContextWindow.fxml\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label parentTypeLabel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label parentNameLabel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label searchTermLabel;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label searchDetailsLabel;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private JFXListView\u003cUiCard\u003e searchListPanel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ImageView parentTypeImage2;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ImageView parentTypeImage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private DukeObject parent;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private SearchResult searchResults;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Constructs the search UI window."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    SearchContextWindow(SearchResult searchResults) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (searchResults !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.parent \u003d searchResults.getParent();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.searchResults \u003d searchResults;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            setSearchWindow();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void setSearchWindow() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        setParent();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchTermLabel.setText(searchResults.getName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetailsLabel.setText(buildSearchDetails());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (DukeObject object : searchResults.getSearchList()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchListPanel.getItems().add(newCard(object));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function returns the new card added dependent on the class instance."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param object the object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return relevant card"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private UiCard newCard(DukeObject object) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (object instanceof Patient) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new PatientCard((Patient) object);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Impression) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new ImpressionCard((Impression) object,false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Observation) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // TODO: index"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new ObservationCard((Observation) object);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Result) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // TODO: index"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new ResultCard((Result) object);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Investigation) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // TODO: index"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new InvestigationCard((Investigation) object);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Medicine) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // TODO: index"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new MedicineCard((Medicine) object);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (object instanceof Plan) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // TODO: index"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new PlanCard((Plan) object);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void setParent() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (parent !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            parentTypeLabel.setText(parent.getClass().getSimpleName().toUpperCase() + \" SEARCH CONTEXT\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            parentNameLabel.setText(String.valueOf(parent.getName()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Image image \u003d new Image(DukeCore.class.getResourceAsStream("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    UiStrings.SEARCH_HELPER.get(parent.getClass().getSimpleName())));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            parentTypeImage.setImage(image);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            parentTypeImage2.setImage(image);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String buildSearchDetails() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        StringBuilder searchDetails \u003d new StringBuilder();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetails.append(\"There are \").append(searchResults.getSearchList().size()).append(\" result(s).\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (parent \u003d\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchDetails.append(\"There are \").append(searchResults.getPatientList().size()).append(\" patient(s)\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (parent instanceof Patient || parent \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchDetails.append(\"There are \")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    .append(searchResults.getImpressionList().size()).append(\" impression(s)\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetails.append(\"There are \").append(searchResults.getEvidenceList().size()).append(\" evidence(s)\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchDetails.append(\"There are \").append(searchResults.getTreatmentList().size()).append(\" treatment(s)\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchDetails.toString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateUi() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cDukeObject\u003e getIndexedList(String type) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17,
      "JeremyKwok": 128
    }
  },
  {
    "path": "src/main/resources/view/CommandWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cTextArea fx:id\u003d\"inputTextField\" layoutY\u003d\"558.0\" onKeyPressed\u003d\"#handleKeyPress\" prefHeight\u003d\"60.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "              prefWidth\u003d\"400.0\" promptText\u003d\"Enter command here\" wrapText\u003d\"true\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "              AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                prefHeight\u003d\"540.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cVBox fx:id\u003d\"messageContainer\" maxWidth\u003d\"400.0\" minWidth\u003d\"400.0\" prefWidth\u003d\"400.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17
    }
  },
  {
    "path": "src/main/resources/view/HelpCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"350.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cVBox layoutX\u003d\"9.0\" layoutY\u003d\"9.0\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"350.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cBorderPane maxWidth\u003d\"-Infinity\" prefWidth\u003d\"320.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cleft\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"commandLabel\" alignment\u003d\"CENTER\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               style\u003d\"-fx-background-color: #d1a1ff; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"COMMAND\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/left\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cVBox fx:id\u003d\"mainSection\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"320.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"descriptionLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Nam eget augue viverra, ultrices mi non, tempus nisl. Suspendisse dapibus luctus sagittis. In rutrum ipsum quis sapien posuere pretium. Ut eu luctus dolor. Mauris sed turpis efficitur, hendrerit eros at, pellentesque ante. Sed ut finibus justo. Curabitur at vulputate elit, at tincidunt lectus.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cVBox fx:id\u003d\"detailsSection\" prefWidth\u003d\"320.0\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cLabel fx:id\u003d\"formatHeader\" text\u003d\"FORMAT\" textFill\u003d\"#6a56ff\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cInsets top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cLabel fx:id\u003d\"formatLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                       text\u003d\"Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nam aliquam sed risus in facilisis. Suspendisse posuere ligula id pellentesque finibus. Donec varius sodales bibendum. In vitae sagittis magna, nec efficitur quam. Integer nec nunc eu tortor volutpat varius. Ut sollicitudin interdum urna, et facilisis ex mattis eget. Donec nec commodo lacus, quis egestas nisi. Vestibulum laoreet ex convallis ligula porttitor lacinia.\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                       wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cFont size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cLabel fx:id\u003d\"switchHeader\" text\u003d\"SWITCH(ES)\" textFill\u003d\"#5608fc\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cInsets top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cLabel fx:id\u003d\"switchLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                       text\u003d\"Fusce facilisis diam non interdum condimentum. Aenean dictum vehicula enim et vestibulum. Cras fermentum vitae mi vitae suscipit. Proin magna risus, consectetur vel nisi finibus, bibendum suscipit risus. Pellentesque nec varius turpis. Pellentesque ipsum purus, sollicitudin at luctus pharetra, mollis ac ante. Curabitur et sem ante. Proin quis lorem egestas, molestie odio eu, accumsan ligula.\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                       wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cFont size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 86
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"helpListView\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 13
    }
  },
  {
    "path": "src/main/resources/view/HomeContextWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXMasonryPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cJFXMasonryPane fx:id\u003d\"patientListPanel\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 16
    }
  },
  {
    "path": "src/main/resources/view/ImpressionCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"170.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"42.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_name.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"77.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"115.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_follow-up.png\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"152.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/details.png\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"83.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"106.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"followupLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"122.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"106.0\" text\u003d\"Follow-up\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"descriptionLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"157.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"106.0\" text\u003d\"Description\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"47.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"106.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutY\u003d\"7.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: lightblue; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"IMPRESSION\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 68
    }
  },
  {
    "path": "src/main/resources/view/ImpressionContextWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"582.0\" prefWidth\u003d\"673.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"137.0\" prefHeight\u003d\"33.0\" prefWidth\u003d\"265.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"4.0\" layoutY\u003d\"2.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/impression_details.png\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"44.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"202.0\" text\u003d\"IMPRESSION DESCRIPTION\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"1.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" layoutX\u003d\"15.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/patient_home.png\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"52.0\" layoutY\u003d\"1.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"PATIENT\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"255.0\" layoutY\u003d\"3.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"134.0\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/impression_name.png\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"47.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"154.0\" text\u003d\"IMPRESSION\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"93.0\" prefWidth\u003d\"235.0\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"88.0\" prefWidth\u003d\"231.0\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"5.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/patient_name.png\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"patientNameLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"9.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"180.0\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"49.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cImage url\u003d\"@../images/ward.png\"/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"patientBedLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"54.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"180.0\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Bed\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"9.0\" layoutY\u003d\"316.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/allergies.png\"/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"ALLERGIES\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"256.0\" layoutY\u003d\"36.0\" prefWidth\u003d\"405.0\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"400.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"90.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"228.0\" layoutY\u003d\"10.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/impression_critical.png\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"267.0\" layoutY\u003d\"15.0\" maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               maxWidth\u003d\"-Infinity\" prefHeight\u003d\"22.0\" prefWidth\u003d\"128.0\" text\u003d\"Critical Issues\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"228.0\" layoutY\u003d\"50.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/impression_follow-up.png\"/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"followUpLabel\" layoutX\u003d\"268.0\" layoutY\u003d\"54.0\" maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               maxWidth\u003d\"-Infinity\" prefHeight\u003d\"22.0\" prefWidth\u003d\"127.0\" text\u003d\"Follow-up\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cScrollPane layoutX\u003d\"7.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"82.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003ccontent\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cAnchorPane maxWidth\u003d\"383.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"90.0\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                            prefWidth\u003d\"188.0\"\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"8.0\" layoutY\u003d\"2.0\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                               prefHeight\u003d\"610.0\" prefWidth\u003d\"176.0\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                               text\u003d\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ut turpis sit amet justo dapibus blandit vel a augue. Suspendisse placerat dapibus porta. Donec finibus augue euismod vestibulum iaculis. Maecenas vitae suscipit nisi. Fusce quis ante quis leo pellentesque mattis at id ante. Ut aliquam, sem ac aliquam pharetra, mi leo eleifend magna, nec gravida nunc magna quis urna. Nunc vel massa porta, consequat mauris ac, lacinia mauris. Nulla eget laoreet erat, in pellentesque lectus. Nunc purus magna, bibendum ut semper in, sollicitudin ut lectus. Ut sed est sem. Nullam dictum sagittis varius. Vivamus sed justo vitae lectus finibus ultrices vitae id erat. Nunc ornare faucibus leo, rhoncus viverra nisl malesuada a. Nunc vitae nisl quam.\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/content\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"215.0\" layoutY\u003d\"313.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/evidence.png\"/\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"6.0\" text\u003d\"EVIDENCE\"\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"evidenceListPanel\" layoutX\u003d\"221.0\" layoutY\u003d\"353.0\" prefHeight\u003d\"194.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"440.0\" layoutY\u003d\"314.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/treatment.png\"/\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"6.0\" text\u003d\"TREATMENT\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"treatmentListPanel\" layoutX\u003d\"442.0\" layoutY\u003d\"353.0\" prefHeight\u003d\"193.0\" prefWidth\u003d\"219.0\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"176.0\" prefHeight\u003d\"130.0\" prefWidth\u003d\"651.0\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"646.0\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"descriptionLabel\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               maxWidth\u003d\"639.0\" prefWidth\u003d\"639.0\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Vestibulum maximus nulla mi, a cursus sem iaculis non. Vestibulum a nibh odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tellus sem, egestas vel risus ac, volutpat vestibulum tortor. Nam at diam non est euismod finibus eu nec mi. Mauris vitae libero efficitur, vestibulum nulla in, euismod ex. Ut ut rutrum libero. Morbi et nisl dictum, semper mi et, iaculis augue. Phasellus eleifend tortor eget ante venenatis euismod. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"353.0\" prefHeight\u003d\"194.0\" prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"170.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"170.0\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"allergiesLabel\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\" maxWidth\u003d\"170.0\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               prefWidth\u003d\"170.0\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Ut pellentesque, urna nec dictum ullamcorper, dolor nisl convallis elit, ac iaculis tellus sem id felis. Fusce consectetur ex sit amet ligula bibendum maximus. Fusce tristique dolor vel pharetra ultrices. Mauris et neque imperdiet, cursus eros eu, vestibulum purus. Mauris suscipit, dolor sit amet scelerisque sagittis, augue neque pulvinar diam, sit amet efficitur dolor risus et justo. Maecenas accumsan a augue non semper. Nullam viverra consequat ipsum. Suspendisse auctor turpis nibh, eu hendrerit dui vehicula in. Suspendisse feugiat fringilla diam, quis suscipit massa mollis sed. Nam tempus tincidunt est, ac ultrices dui pharetra id.\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 100,
      "JeremyKwok": 126
    }
  },
  {
    "path": "src/main/resources/view/InvestigationCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"157.0\" prefWidth\u003d\"172.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"statusLabel\" layoutX\u003d\"54.0\" layoutY\u003d\"122.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"110.0\" text\u003d\"Status\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"11.0\" layoutY\u003d\"42.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/investigation.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"11.0\" layoutY\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"11.0\" layoutY\u003d\"118.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/status.png\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"54.0\" layoutY\u003d\"85.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"110.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"54.0\" layoutY\u003d\"47.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"110.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutX\u003d\"2.0\" layoutY\u003d\"3.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: lightgreen; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"INVESTIGATION\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 20,
      "JeremyKwok": 38
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"600\" minWidth\u003d\"1473.0\" resizable\u003d\"false\" title\u003d\"Dr. Duke\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImage url\u003d\"@/images/icon.png\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cBorderPane prefHeight\u003d\"600.0\" prefWidth\u003d\"1473.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cleft\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cTabPane fx:id\u003d\"contextWindowHolder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                             prefWidth\u003d\"673.0\" tabClosingPolicy\u003d\"UNAVAILABLE\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/left\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003ccenter\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cAnchorPane fx:id\u003d\"commandWindowHolder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" BorderPane.alignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/center\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cright\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cVBox fx:id\u003d\"helpWindowHolder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                          minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" BorderPane.alignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/right\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 30,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/MedicineCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"168.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"statusLabel\" layoutX\u003d\"50.0\" layoutY\u003d\"120.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"113.0\" text\u003d\"Status\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"41.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/treatment.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"8.0\" layoutY\u003d\"81.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"116.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/status.png\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"50.0\" layoutY\u003d\"86.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"114.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"50.0\" layoutY\u003d\"46.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"114.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutX\u003d\"3.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: pink; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"MEDICINE\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 19,
      "JeremyKwok": 39
    }
  },
  {
    "path": "src/main/resources/view/MessageBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cHBox fx:id\u003d\"container\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cVBox fx:id\u003d\"messageHolder\" alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"44.0\" prefWidth\u003d\"314.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"3.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cText fx:id\u003d\"message\" text\u003d\"Hello World!\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cCircle fx:id\u003d\"avatar\" fill\u003d\"WHITE\" radius\u003d\"22.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Circle\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 6,
      "-": 18
    }
  },
  {
    "path": "src/main/resources/view/ObservationCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"168.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"44.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/observation.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"117.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/objective.png\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"47.0\" layoutY\u003d\"85.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"115.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"objectiveLabel\" layoutX\u003d\"47.0\" layoutY\u003d\"124.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"115.0\" text\u003d\"Objectivity\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"47.0\" layoutY\u003d\"47.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"115.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutX\u003d\"1.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: lightgrey; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"OBSERVATION\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 19,
      "JeremyKwok": 39
    }
  },
  {
    "path": "src/main/resources/view/PatientCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"cardView\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"216.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         prefWidth\u003d\"218.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cBorderPane layoutX\u003d\"4.0\" layoutY\u003d\"10.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"212.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccenter\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                       style\u003d\"-fx-background-color: #FFF111; -fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                       text\u003d\"PATIENT\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/center\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"18.0\" layoutY\u003d\"60.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/patient_home.png\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"19.0\" layoutY\u003d\"95.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/ward.png\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"18.0\" layoutY\u003d\"133.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_name.png\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"18.0\" layoutY\u003d\"170.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/issues.png\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"60.0\" layoutY\u003d\"59.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"150.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont name\u003d\"System Bold\" size\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"bedLabel\" layoutX\u003d\"61.0\" layoutY\u003d\"101.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"150.0\" text\u003d\"Bed\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"diagnosisLabel\" layoutX\u003d\"61.0\" layoutY\u003d\"138.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"150.0\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               text\u003d\"Primary Diagnosis\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"issueLabel\" layoutX\u003d\"62.0\" layoutY\u003d\"176.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"149.0\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               text\u003d\"Critical Issues\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 76
    }
  },
  {
    "path": "src/main/resources/view/PatientContextWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"impressionListPanel\" layoutX\u003d\"10.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/impressions.png\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"6.0\" text\u003d\"IMPRESSIONS\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"criticalListPanel\" layoutX\u003d\"231.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"231.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"17.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/issues.png\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"61.0\" layoutY\u003d\"6.0\" text\u003d\"CRITICAL\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"investigationListPanel\" layoutX\u003d\"452.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"452.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/follow-ups.png\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"5.0\" text\u003d\"FOLLOW-UPS\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"4.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/details.png\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"PARTICULARS\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"459.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/heart.png\"/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"MEDICAL HISTORY\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"235.0\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"217.0\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"4.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/patient_name.png\"/\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"88.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/height.png\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"131.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/weight.png\"/\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"44.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/age.png\"/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"ageLabel\" layoutX\u003d\"48.0\" layoutY\u003d\"48.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Age\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"weightLabel\" layoutX\u003d\"48.0\" layoutY\u003d\"135.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Weight\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"heightLabel\" layoutX\u003d\"48.0\" layoutY\u003d\"92.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Height\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"171.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/ward.png\"/\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"bedLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"175.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Bed\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"213.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/phone.png\"/\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"phoneLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"217.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Phone\"\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"258.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/address.png\"/\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"addressLabel\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"49.0\" layoutY\u003d\"261.0\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               prefWidth\u003d\"165.0\" text\u003d\"Address\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"253.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/allergies.png\"/\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"ALLERGIES\"\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"461.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"170.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"170.0\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"historyLabel\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\" maxWidth\u003d\"170.0\" prefWidth\u003d\"170.0\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ut turpis sit amet justo dapibus blandit vel a augue. Suspendisse placerat dapibus porta. Donec finibus augue euismod vestibulum iaculis. Maecenas vitae suscipit nisi. Fusce quis ante quis leo pellentesque mattis at id ante. Ut aliquam, sem ac aliquam pharetra, mi leo eleifend magna, nec gravida nunc magna quis urna. Nunc vel massa porta, consequat mauris ac, lacinia mauris. Nulla eget laoreet erat, in pellentesque lectus. Nunc purus magna, bibendum ut semper in, sollicitudin ut lectus. Ut sed est sem. Nullam dictum sagittis varius. Vivamus sed justo vitae lectus finibus ultrices vitae id erat. Nunc ornare faucibus leo, rhoncus viverra nisl malesuada a. Nunc vitae nisl quam.\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"253.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"170.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"170.0\"\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"allergiesLabel\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\" maxWidth\u003d\"170.0\" prefWidth\u003d\"170.0\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Ut pellentesque, urna nec dictum ullamcorper, dolor nisl convallis elit, ac iaculis tellus sem id felis. Fusce consectetur ex sit amet ligula bibendum maximus. Fusce tristique dolor vel pharetra ultrices. Mauris et neque imperdiet, cursus eros eu, vestibulum purus. Mauris suscipit, dolor sit amet scelerisque sagittis, augue neque pulvinar diam, sit amet efficitur dolor risus et justo. Maecenas accumsan a augue non semper. Nullam viverra consequat ipsum. Suspendisse auctor turpis nibh, eu hendrerit dui vehicula in. Suspendisse feugiat fringilla diam, quis suscipit massa mollis sed. Nam tempus tincidunt est, ac ultrices dui pharetra id.\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 235
    }
  },
  {
    "path": "src/main/resources/view/PlanCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"168.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"statusLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"125.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"118.0\" text\u003d\"Status\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"43.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/plan.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"81.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/status.png\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"87.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"118.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"48.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"118.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutX\u003d\"7.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: orange; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"PLAN\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 19,
      "JeremyKwok": 39
    }
  },
  {
    "path": "src/main/resources/view/ResultCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003cfx:root fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"168.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"42.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/result.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"83.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"47.0\" layoutY\u003d\"88.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"108.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"47.0\" layoutY\u003d\"48.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"78.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003cBorderPane layoutX\u003d\"1.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"168.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: lightcyan; -fx-border-color: black; -fx-border-width: 1; -fx-border-style: solid;\" text\u003d\"RESULT\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17,
      "JeremyKwok": 31
    }
  },
  {
    "path": "src/main/resources/view/SearchContextWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003cAnchorPane prefHeight\u003d\"582.0\" prefWidth\u003d\"673.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"137.0\" prefHeight\u003d\"31.0\" prefWidth\u003d\"651.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/searchResults.png\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"6.0\" text\u003d\"SEARCH RESULT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"4.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cImageView fx:id\u003d\"parentTypeImage\" fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/duke.png\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cLabel fx:id\u003d\"parentTypeLabel\" layoutX\u003d\"46.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"285.0\" text\u003d\"HOME CONTEXT SEARCH\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"93.0\" prefWidth\u003d\"651.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"173.0\" prefWidth\u003d\"631.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImageView fx:id\u003d\"parentTypeImage2\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"4.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cImage url\u003d\"@../images/home.png\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cLabel fx:id\u003d\"parentNameLabel\" layoutX\u003d\"49.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\" text\u003d\"Home Context\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"49.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cImage url\u003d\"@../images/details.png\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cLabel fx:id\u003d\"searchDetailsLabel\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"49.0\" layoutY\u003d\"53.0\" prefHeight\u003d\"118.0\" prefWidth\u003d\"574.0\" text\u003d\"Search Details\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                                \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                  \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"316.0\" layoutY\u003d\"4.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                     \u003cimage\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cImage url\u003d\"@../images/search.png\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                     \u003c/image\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                  \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                  \u003cLabel fx:id\u003d\"searchTermLabel\" layoutX\u003d\"360.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\" text\u003d\"Search Specification\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                     \u003cfont\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                     \u003c/font\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "      \u003cJFXListView fx:id\u003d\"searchListPanel\" layoutX\u003d\"10.0\" layoutY\u003d\"168.0\" prefHeight\u003d\"409.0\" prefWidth\u003d\"651.0\" style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 81
    }
  },
  {
    "path": "src/main/unused/AutoCompleteTextField.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package unused;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.geometry.Side;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ContextMenu;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.CustomMenuItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.SortedSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/* @@author gowgos5 */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * TextField with an autocomplete feature."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class AutoCompleteTextField extends TextArea {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final SortedSet\u003cString\u003e entries;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ContextMenu menu;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a new textfield with autocomplete feature."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * TODO: Populate entries in the constructor for the full menu."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public AutoCompleteTextField() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        entries \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        menu \u003d new ContextMenu();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // Listen to changes in textfield"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (getText().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                menu.hide();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                List\u003cString\u003e menuEntries \u003d new ArrayList\u003c\u003e(entries.subSet(getText(), getText() + Character.MAX_VALUE));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (entries.size() \u003e 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    updateMenu(menuEntries);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    // temporary workaround for focus"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.hide();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.show(AutoCompleteTextField.this, Side.BOTTOM, 0, 0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.hide();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // Listen to changes in focus"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        focusedProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            menu.hide();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update the entries of the context menu."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param menuEntries Entries for the context menu."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void updateMenu(List\u003cString\u003e menuEntries) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        int maxMenuSize \u003d Math.min(menuEntries.size(), 15);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        menu.getItems().clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (int i \u003d 0; i \u003c maxMenuSize; ++i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            final String entry \u003d menuEntries.get(i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            CustomMenuItem item \u003d new CustomMenuItem(new Label(entry), true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            item.setOnAction(actionEvent -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                setText(entry);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                positionCaret(AutoCompleteTextField.this.getText().length());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                menu.hide();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            menu.getItems().add(item);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 77
    }
  },
  {
    "path": "src/main/unused/HomeHelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package unused;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/* @@author JeremyKwok */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHelpCommand extends ArgCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private final String filePath \u003d \"data\" + File.separator + \"helpDetails.json\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return HomeHelpSpec.getSpec();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        final String[] infoFields \u003d {\"command\", \"summary\", \"format\", \"switches\", \"info\"};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        HashMap\u003cString, HashMap\u003cString, String\u003e\u003e helpDetails;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        helpDetails \u003d core.storage.loadHelpHashMap(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (getSwitchVals().isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Map.Entry\u003cString, HashMap\u003cString, String\u003e\u003e mapElement : helpDetails.entrySet()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                HashMap\u003cString, String\u003e value \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                StringBuilder helpInfo \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    helpInfo.append(infoFields[i]).append(\": \").append(value.get(infoFields[i])).append(\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                core.updateUi(helpInfo.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e mapElement : getSwitchVals().entrySet()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                String key \u003d mapElement.getKey();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (helpDetails.containsKey(key)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    HashMap\u003cString, String\u003e value \u003d helpDetails.get(key);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    StringBuilder helpInfo \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    for (String field : infoFields) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        if (value.containsKey(field)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            helpInfo.append(field).append(\": \").append(value.get(field)).append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    core.updateUi(helpInfo.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 2,
      "JeremyKwok": 49
    }
  },
  {
    "path": "src/main/unused/HomeHelpSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package unused;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/* @@author JeremyKwok */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHelpSpec extends ArgSpec {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final HomeHelpSpec spec \u003d new HomeHelpSpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static HomeHelpSpec getSpec() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HomeHelpSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"critical\", String.class, true, ArgLevel.NONE, \"c\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"discharge\", String.class, true, ArgLevel.NONE, \"d\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"archive\", String.class, true, ArgLevel.NONE, \"a\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"open\", String.class, true, ArgLevel.NONE, \"o\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"new\", String.class, true, ArgLevel.NONE, \"n\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.NONE, \"h\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"undo\", String.class, true, ArgLevel.NONE, \"u\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"redo\", String.class, true, ArgLevel.NONE, \"r\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 4,
      "JeremyKwok": 24
    }
  },
  {
    "path": "src/test/java/mocks/DoctorSpec.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DoctorSpec extends ArgSpec {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final DoctorSpec spec \u003d new DoctorSpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static DoctorSpec getSpec() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private DoctorSpec() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"switch\", String.class, false, ArgLevel.REQUIRED, \"s\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"optswitch\", String.class, true, ArgLevel.REQUIRED, \"o\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"maybe\", String.class, true, ArgLevel.OPTIONAL, \"m\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"none\", String.class, true, ArgLevel.NONE, \"n\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.ui.print(\"Argument: \" + cmd.getArg() + System.lineSeparator() + \"Switch: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                + cmd.getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 31
    }
  },
  {
    "path": "src/test/java/mocks/TestCommands.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class TestCommands extends Commands {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Command getCommand(String cmdStr, Context context) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (\"doctor\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new ArgCommand(DoctorSpec.getSpec());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (\"empty\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new ArgCommand(ValidEmptySpec.getSpec());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 2,
      "aquohn": 16
    }
  },
  {
    "path": "src/test/java/mocks/ValidEmptySpec.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ValidEmptySpec extends ArgSpec {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final ValidEmptySpec spec \u003d new ValidEmptySpec();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static ValidEmptySpec getSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ValidEmptySpec() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.OPTIONAL;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"switch\", String.class, true, ArgLevel.REQUIRED, \"s\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"optswitch\", String.class, true, ArgLevel.REQUIRED, \"o\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void execute(DukeCore core) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 27
    }
  },
  {
    "path": "src/test/java/templates/CommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package templates;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.PatientList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract test for testing command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public abstract class CommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected static DukeCore core;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected static ByteArrayOutputStream testOut \u003d new ByteArrayOutputStream(); //stores printed output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected static PrintStream testPrint \u003d new PrintStream(testOut); //System.out replacement, prints to testOut"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected static final String testFilePath \u003d \"data\" + File.separator + \"test.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Create data directory if necessary and use a test task file to create test DukeCore, with output directed to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * testOut."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static void setupCore() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core \u003d new DukeCore();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.patientList \u003d new PatientList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.storage \u003d new GsonStorage(testFilePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.writeJsonFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Could not setup storage for testing!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Reset taskList and testOut, and flush the testPrint stream after each test is done with them."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void clearPatientMap() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientList \u003d new PatientList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        testPrint.flush();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        testOut.reset();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Deletes testing data after test is completed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static void clearTestData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        File testData \u003d new File(testFilePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!testData.delete()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Unable to delete test data file!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 2,
      "aquohn": 58,
      "-": 2
    }
  },
  {
    "path": "src/test/java/tests/GsonStorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Investigation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Observation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.PatientList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Plan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.Result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import templates.CommandTest;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * JUnit class testing the class GsonStorage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "/* @@author JacobToresson */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class GsonStorageTest extends CommandTest {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * A dummy patient used for testing. In this context a dummy patient refers to a patient object that only has"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * a name, a bed number and one allergy."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Patient dummy1 \u003d new Patient(\"dummy1\", \"A100\", \"nuts\", 0, 0, 0,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            0, \"\", \"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * A dummy patient used for testing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Patient dummy2 \u003d new Patient(\"dummy2\", \"A200\", \"\", 0, 0, 0,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            0, \"\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * A dummy patient used for testing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Patient dummy3 \u003d new Patient(\"dummy3\", \"A300\", \"cats\", 0, 0, 0,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            0, \"\", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * The expected Json representation of dummy1, dummy2, dummy 3 and the complex patient that is created with"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * the createComplexPatient method."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private String expected \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            \"[{\\\"bedNo\\\":\\\"A100\\\",\\\"allergies\\\":\\\"nuts\\\",\\\"impressions\\\":[],\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"number\\\":0,\\\"address\\\":\\\"\\\",\\\"history\\\":\\\"\\\",\\\"name\\\":\\\"dummy1\\\"},\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"A200\\\",\\\"allergies\\\":\\\"\\\",\\\"impressions\\\":[],\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"number\\\":0,\\\"address\\\":\\\"\\\",\\\"history\\\":\\\"\\\",\\\"name\\\":\\\"dummy2\\\"},\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"A300\\\",\\\"allergies\\\":\\\"cats\\\",\\\"impressions\\\":[],\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"number\\\":0,\\\"address\\\":\\\"\\\",\\\"history\\\":\\\"\\\",\\\"name\\\":\\\"dummy3\\\"},\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"C1\\\",\\\"allergies\\\":\\\"test allergies\\\",\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"primaryDiagnosis\\\":{\\\"description\\\":\\\"test description 1\\\",\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"evidences\\\":[{\\\"type\\\":\\\"Observation\\\",\\\"properties\\\":{\\\"isObjective\\\":false,\\\"priority\\\":0,\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"summary\\\":\\\"test summary 1\\\",\\\"name\\\":\\\"test obs 1\\\"}},{\\\"type\\\":\\\"Observation\\\",\\\"properties\\\":{\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"isObjective\\\":true,\\\"priority\\\":1,\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\\\"test obs 2\\\"}},{\\\"type\\\":\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"Result\\\",\\\"properties\\\":{\\\"priority\\\":2,\\\"summary\\\":\\\"test summary 1\\\",\\\"name\\\":\\\"test result 1\\\"}},\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"{\\\"type\\\":\\\"Result\\\",\\\"properties\\\":{\\\"priority\\\":3,\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test result 2\\\"}}],\\\"treatments\\\":[{\\\"type\\\":\\\"Plan\\\",\\\"properties\\\":{\\\"statusIdx\\\":1,\\\"priority\\\":0,\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\\\"test plan 1\\\"}},{\\\"type\\\":\\\"Investigation\\\",\\\"properties\\\":{\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"statusIdx\\\":1,\\\"priority\\\":0,\\\"summary\\\":\\\"test summary 1\\\",\\\"name\\\":\\\"test inv 1\\\"}}],\\\"name\\\":\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test imp 1\\\"},\\\"impressions\\\":[{\\\"description\\\":\\\"test description 1\\\",\\\"evidences\\\":[{\\\"type\\\":\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"Observation\\\",\\\"properties\\\":{\\\"isObjective\\\":false,\\\"priority\\\":0,\\\"summary\\\":\\\"test summary 1\\\",\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"name\\\":\\\"test obs 1\\\"}},{\\\"type\\\":\\\"Observation\\\",\\\"properties\\\":{\\\"isObjective\\\":true,\\\"priority\\\":1,\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\\\"test obs 2\\\"}},{\\\"type\\\":\\\"Result\\\",\\\"properties\\\":{\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"priority\\\":2,\\\"summary\\\":\\\"test summary 1\\\",\\\"name\\\":\\\"test result 1\\\"}},{\\\"type\\\":\\\"Result\\\",\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"properties\\\":{\\\"priority\\\":3,\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\\\"test result 2\\\"}}],\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"treatments\\\":[{\\\"type\\\":\\\"Plan\\\",\\\"properties\\\":{\\\"statusIdx\\\":1,\\\"priority\\\":0,\\\"summary\\\":\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test summary 2\\\",\\\"name\\\":\\\"test plan 1\\\"}},{\\\"type\\\":\\\"Investigation\\\",\\\"properties\\\":{\\\"statusIdx\\\":\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"1,\\\"priority\\\":0,\\\"summary\\\":\\\"test summary 1\\\",\\\"name\\\":\\\"test inv 1\\\"}}],\\\"name\\\":\\\"test imp 1\\\"},\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"{\\\"description\\\":\\\"test description 2\\\",\\\"evidences\\\":[],\\\"treatments\\\":[{\\\"type\\\":\\\"Medicine\\\",\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"properties\\\":{\\\"dose\\\":\\\"test dose 1\\\",\\\"startDate\\\":\\\"test start date\\\",\\\"duration\\\":\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test duration\\\",\\\"statusIdx\\\":1,\\\"priority\\\":0,\\\"name\\\":\\\"test medicine 2\\\"}},{\\\"type\\\":\\\"Plan\\\",\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"properties\\\":{\\\"statusIdx\\\":2,\\\"priority\\\":1,\\\"summary\\\":\\\"test summary 2\\\",\\\"name\\\":\\\"test plan 2\\\"}\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"},{\\\"type\\\":\\\"Investigation\\\",\\\"properties\\\":{\\\"statusIdx\\\":3,\\\"priority\\\":2,\\\"summary\\\":\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test summary 2\\\",\\\"name\\\":\\\"test inv 2\\\"}},{\\\"type\\\":\\\"Medicine\\\",\\\"properties\\\":{\\\"dose\\\":\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"test dose 2\\\",\\\"startDate\\\":\\\"test start date\\\",\\\"duration\\\":\\\"test duration\\\",\\\"statusIdx\\\":3,\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"priority\\\":2,\\\"name\\\":\\\"test medicine 1\\\"}}],\\\"name\\\":\\\"test imp 2\\\"}],\\\"height\\\":123,\\\"weight\\\":456,\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"age\\\":100,\\\"number\\\":6582447,\\\"address\\\":\\\"test address\\\",\\\"history\\\":\\\"test history\\\",\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            + \"\\\"name\\\":\\\"testCPatient\\\"}]\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Creates a patient object and assign values to all of its attributes - used to test if the nesting works."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * @return the created patient object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Patient createComplexPatient() throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Patient complexPatient \u003d new Patient(\"testCPatient\", \"C1\", \"test allergies\", 123,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                456, 100, 6582447, \"test address\", \"test history\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Impression impression1 \u003d new Impression(\"test imp 1\", \"test description 1\", complexPatient);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Impression impression2 \u003d new Impression(\"test imp 2\", \"test description 2\", complexPatient);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Observation observation1 \u003d new Observation(\"test obs 1\", impression1, 0,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 1\", false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Observation observation2 \u003d new Observation(\"test obs 2\", impression2, 1,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 2\", true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Result result1 \u003d new Result(\"test result 1\", impression2, 2,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 1\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Result result2 \u003d new Result(\"test result 2\", impression2, 3,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 2\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewEvidence(observation1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewEvidence(observation2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewEvidence(result1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewEvidence(result2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        complexPatient.addNewImpression(impression1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        complexPatient.addNewImpression(impression2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Plan plan1 \u003d new Plan(\"test plan 1\", impression1, 0, 1,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 2\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Plan plan2 \u003d new Plan(\"test plan 2\", impression2, 1, 2,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test summary 2\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewTreatment(plan1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression2.addNewTreatment(plan2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Investigation investigation1 \u003d new Investigation(\"test inv 1\", impression1,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                0, 1, \"test summary 1\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Investigation investigation2 \u003d new Investigation(\"test inv 2\", impression2,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                2, 3, \"test summary 2\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression1.addNewTreatment(investigation1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression2.addNewTreatment(investigation2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Medicine medicine1 \u003d new Medicine(\"test medicine 2\", impression1, 0, 1,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test dose 1\", \"test start date\", \"test duration\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Medicine medicine2 \u003d new Medicine(\"test medicine 1\", impression2, 2, 3,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                \"test dose 2\", \"test start date\", \"test duration\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression2.addNewTreatment(medicine1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        impression2.addNewTreatment(medicine2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        complexPatient.setPrimaryDiagnosis(impression1.getName());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return complexPatient;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Compares all the attributes of two patients and returns true if they all are the same, otherwise it returns"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * false."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * @return A boolean stating if the storage function is working properly or not."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private boolean identical(Patient patient1, Patient patient2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if (!(patient1.getBedNo().equals(patient2.getBedNo()))) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAllergies(), patient2.getAllergies()))) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getHeight(), patient2.getHeight()))) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getWeight(), patient2.getWeight()))) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAge(), patient2.getAge()))) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getNumber(), patient2.getNumber()))) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAddress(), patient2.getAddress()))) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return java.util.Objects.equals(patient1.getHistory(), patient2.getHistory());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Tests if patients are transformed from the json file to the hash map properly."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void loadPatientHashMapTest() throws DukeException, IOException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(testFilePath);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        fileWriter.write(expected);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d new PatientList(core.storage);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(identical(core.patientList.getPatient(\"A100\"), dummy1));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(identical(core.patientList.getPatient(\"A200\"), dummy2));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(identical(core.patientList.getPatient(\"A300\"), dummy3));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(identical(core.patientList.getPatient(\"C1\"), createComplexPatient()));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Tests if patients are transformed from the hash map to the json file properly."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void writeJsonFileTest() throws IOException, DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(dummy1);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(dummy2);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(dummy3);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(createComplexPatient());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.storage.writeJsonFile(core.patientList.getPatientList());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String json \u003d Files.readString(Paths.get(testFilePath), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        for (int i \u003d 0; i \u003c json.length(); i++) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (json.charAt(i) !\u003d expected.charAt(i)) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                System.out.println(\"index\" + i);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        //System.out.println(json);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int i \u003d json.length() / 2;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertEquals(expected.substring(0, i), json.substring(0, i));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertEquals(expected.substring(i, json.length() - 1), json.substring(i, json.length() - 1));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Creates the Json representation of a dummy patient. Then recreates the patient objects based on what"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * is in the json file. When the recreation is done it checks if the first patients are identical to the new one."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void identicalDummyPatient() throws IOException, DukeException {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(dummy1);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.storage.writeJsonFile(core.patientList.getPatientList());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d new PatientList(core.storage);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Patient dummyPatientRecreated \u003d core.patientList.getPatient(dummy1.getBedNo());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        boolean equals \u003d identical(dummy1, dummyPatientRecreated);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(equals);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * Creates the Json representation of a complex patient and then recreates the patient objects based on what"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     * is in the json file. When the recreation is done it checks if the first patients are identical to the new one."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void identicalComplexPatient() throws IOException, DukeException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList \u003d core.storage.resetAllData();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Patient complexPatient \u003d createComplexPatient();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.patientList.addPatient(complexPatient);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.storage.writeJsonFile(core.patientList.getPatientList());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        core.storage.loadPatients();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Patient complexPatientRecreated \u003d core.patientList.getPatient(complexPatient.getBedNo());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        boolean equals \u003d identical(complexPatient, complexPatientRecreated);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        assertTrue(equals);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 14,
      "aquohn": 4,
      "JacobToresson": 207,
      "-": 9
    }
  },
  {
    "path": "src/test/java/tests/HomeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeNewSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.home.HomeReportSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import templates.CommandTest;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeCommandTest extends CommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Tests HomeNewCommand with all switches present."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void homeNewCommand_allSwitches_correctPatientCreated() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchNames \u003d {\"name\", \"bed\", \"allergies\", \"height\", \"weight\", \"age\", \"number\", \"address\", \"history\"};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchVals \u003d {\"testCPatient\", \"C1\", \"test allergies\", \"123\", \"456\", \"100\", \"6582447\", \"test address\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            \"test history\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Patient patient \u003d new Patient(\"testCPatient\", \"C1\", \"test allergies\", 123,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                456, 100, 6582447, \"test address\", \"test history\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand newPatientCmd \u003d new ArgCommand(HomeNewSpec.getSpec(), null, switchNames, switchVals);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newPatientCmd.execute(core);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(patient.equals(core.patientList.getPatient(\"C1\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when validly creating patient from command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tests HomeReport Command with the summary switch present."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void homeReportCommandTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] switchNames \u003d {\"bed\", \"summary\"};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] switchVals \u003d {\"testC1\", \"This as a test report that is used to test the report command from the\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" home context\"};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.patientList.addPatient(new Patient(\"testCPatient\", \"testC1\", \"test allergies\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    123, 456, 100, 6582447, \"test address\", \"test history\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand newReportCmd \u003d new ArgCommand(HomeReportSpec.getSpec(), \"\", switchNames, switchVals);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            newReportCmd.execute(core);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            String expected \u003d \"PATIENT REPORT\\n\\nThis report shows all the data that was stored about a patient at \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"the time the report was created.\\n\\nReport Summary: This as a test report that is used to test \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"the report command from the home context\\n\\nPatient Data;\\n\\tName of patient: \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"testCPatient\\n\\tBed Number: testC1\\n\\tHeight: 123\\n\\tWeight: 456\\n\\tAllergies: test \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"allergies\\n\\tAge: 100\\n\\tNumber: 6582447\\n\\tAddress: test address\\n\\tHistory: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"test history\\n\\n\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            String actual \u003d Files.readString(Paths.get(\"data/Reports/testCPatient-testC1.txt\"),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(expected, actual);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException | IOException excp) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when validly creating report from command in home context: \" + excp.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 45,
      "-": 21
    }
  },
  {
    "path": "src/test/java/tests/ImpressionCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionNewSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.impression.ImpressionPrimarySpec;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Medicine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import templates.CommandTest;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ImpressionCommandTest extends CommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Impression impression;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Patient patient;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Sets up the core of this object to have a patient and impression, opens the impression, and stores those"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * references for comparison."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setupPatientAndImpression() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient \u003d new Patient(\"name\", \"bedNo\", \"allergies\", 0, 0,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                0, 0, \"\", \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        impression \u003d new Impression(\"name\", \"description\", patient);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.addNewImpression(impression);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.patientList.addPatient(patient);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Failed to setup patient and impression for testing!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.uiContext.setContext(Context.IMPRESSION, impression);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void impressionNewCommand_fullCommand_correctDataCreated() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //TODO test other DukeData"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchNames \u003d {\"medicine\", \"name\", \"priority\", \"status\", \"dose\", \"date\", \"duration\"};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchVals \u003d {null, \"test\", \"2\", \"1\", \"test dose\", \"today\", \"next two weeks\"};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Medicine testMed \u003d new Medicine(\"test\", impression, 2, 1, \"test dose\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \"today\", \"next two weeks\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand newMedCmd \u003d new ArgCommand(ImpressionNewSpec.getSpec(), null, switchNames, switchVals);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newMedCmd.execute(core);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(testMed.equals(impression.getTreatment(\"test\")));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while executing valid command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void impressionNewCommand_minCommand_correctDataCreated() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //TODO test other DukeData"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchNames \u003d {\"medicine\", \"name\", \"dose\", \"duration\"};"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchVals \u003d {null, \"test\", \"test dose\", \"next two weeks\"};"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Medicine testMed \u003d new Medicine(\"test\", impression, 0, 0, \"test dose\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")), \"next two weeks\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand newMedCmd \u003d new ArgCommand(ImpressionNewSpec.getSpec(), null, switchNames, switchVals);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newMedCmd.execute(core);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(testMed.equals(impression.getTreatment(\"test\")));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while executing valid command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void impressionPrimaryCommand_fullCommand_setAsPrimary() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Command primaryCmd \u003d new Command(ImpressionPrimarySpec.getSpec());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression newImpression \u003d new Impression(\"name2\", \"description2\", patient);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.addNewImpression(newImpression);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Duplicate impression in patient, somehow.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            patient.setPrimaryDiagnosis(\"name2\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while setting primary diagnosis through API: \" + excp.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            primaryCmd.execute(core);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while setting primary diagnosis through command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        assertEquals(impression, patient.getPrimaryDiagnosis());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 102
    }
  },
  {
    "path": "src/test/java/tests/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.context.UiContext;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import mocks.DoctorSpec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import mocks.TestCommands;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import mocks.ValidEmptySpec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO check if exceptions are thrown for incorrect input formats"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Parser uut \u003d new Parser(new UiContext(), new TestCommands());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_fullSwitchNames_argumentsExtracted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor Hello -switch World -optswitch Optional\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            + \" -maybe berhabs -none \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\", \"optswitch\", \"maybe\", \"none\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"World\", \"Optional\", \"berhabs\", null};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\", switchNames, switchVals);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting valid test command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_switchesChained_argumentsExtracted() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor Hello -switch World -optswitch Optional -none-maybe\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\", \"optswitch\", \"maybe\", \"none\"};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"World\", \"Optional\", null, null};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\", switchNames, switchVals);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting test command with chained switches: \" + excp.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_differentOrder_argumentsExtracted() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor -switch World -optswitch Optional Hello\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\", \"optswitch\"};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"World\", \"Optional\"};"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\", switchNames, switchVals);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting arguments in different order: \" + excp.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_optionalOmitted_argumentsExtracted() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor -switch World Hello\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\"};"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"World\"};"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\", switchNames, switchVals);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when missing optional argument: \" + excp.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_stringsAndEscapes_argumentsExtracted() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor Hello\\\\\\\\World -switch \\\"double \\\\\\\" quote\\\"\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    + \"-maybe \\\"escaped \\\\\\\\ backslash\\\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\", \"maybe\"};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"double \\\" quote\", \"escaped \\\\ backslash\"};"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\\\\World\", switchNames, switchVals);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when parsing strings and escapes: \" + excp.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_validEmptyCommand_exceptionNotThrown() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"empty\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {};"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {};"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand emptyCmd \u003d new ArgCommand(ValidEmptySpec.getSpec(), null, switchNames,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    switchVals);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(emptyCmd.equals(testCmd));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when parsing valid empty command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_invalidEmptyCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        System.out.println(assertThrows(DukeHelpException.class, () -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            uut.parse(\"doctor       \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }).getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_argAfterNoArgSwitch_argumentsExtracted() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand testCmd \u003d (ArgCommand) uut.parse(\"doctor -none Hello -switch World -optswitch Optional \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                            + \"-maybe berhabs \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchNames \u003d {\"switch\", \"optswitch\", \"maybe\", \"none\"};"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String[] switchVals \u003d {\"World\", \"Optional\", \"berhabs\", null};"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand docCmd \u003d new ArgCommand(DoctorSpec.getSpec(), \"Hello\", switchNames, switchVals);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(docCmd.equals(testCmd));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting valid test command: \" + excp.getMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommand_repeatedArgs_exceptionThrown() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        System.out.println(assertThrows(DukeHelpException.class, () -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            uut.parse(\"doctor Hello -switch Goodbye World\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }).getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        System.out.println(assertThrows(DukeHelpException.class, () -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            uut.parse(\"doctor Hello -switch Goodbye -switch World\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }).getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 132,
      "JeremyKwok": 1
    }
  },
  {
    "path": "src/test/java/tests/PatientCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.patient.PatientNewSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.ui.context.Context;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import templates.CommandTest;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientCommandTest extends CommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Patient patient;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Sets up the core of this object to have a patient and impression, opens the impression, and stores those"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * references for comparison."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void setupPatient() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        patient \u003d new Patient(\"name\", \"bedNo\", \"allergies\", 0, 0,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                0, 0, \"\", \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.patientList.addPatient(patient);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while setting up patient! \" + excp.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.uiContext.setContext(Context.PATIENT, patient);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void patientNewCommand_allSwitches_correctImpressionCreated() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchNames \u003d {\"name\", \"description\"};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String[] switchVals \u003d {\"test\", \"test description\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Impression imp \u003d new Impression(\"test\", \"test description\", patient);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ArgCommand newImpCmd \u003d new ArgCommand(PatientNewSpec.getSpec(), null, switchNames, switchVals);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newImpCmd.execute(core);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertTrue(imp.equals(patient.getImpression(\"test\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when validly creating patient from command!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 49
    }
  }
]
