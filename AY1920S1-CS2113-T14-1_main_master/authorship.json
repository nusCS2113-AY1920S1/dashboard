[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.8.4\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "group \u0027dr.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "version \u00271.2.1\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveBaseName \u003d \"dr.duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveVersion \u003d \"1.2.1\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        xml.enabled \u003d true // coveralls plugin depends on xml format report"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    jacocoReportPath \u0027build/reports/jacoco/test/jacocoTestReport.xml\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    implementation \u0027com.jfoenix:jfoenix:9.0.8\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 24,
      "aquohn": 16,
      "-": 39
    }
  },
  {
    "path": "src/main/java/duke/DukeCore.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.PatientMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeResetException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiContext;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.UiManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * The core of Dr. Duke, which holds the UI and storage components."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DukeCore extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final String storagePath \u003d \"data\" + File.separator + \"patients.json\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiContext uiContext;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public GsonStorage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public PatientMap patientMap;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a DukeCore object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeCore() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ui \u003d new UiManager(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        uiContext \u003d new UiContext();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                storage \u003d new GsonStorage(storagePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                patientMap \u003d new PatientMap(storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeResetException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // Reset data file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeFatalException | IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            stop();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Terminate application gracefully"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 37,
      "aquohn": 23,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Launcher class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Entry point into the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param args Supplied command-line arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Application.launch(DukeCore.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ArgCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract class for commands that involve an argument."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class ArgCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO: create \u003cCommand Type\u003eSpec singletons that are each attached to individual Command types"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // Use internal protected classes to specify the properties of switches: optional or not, whether it takes"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // an argument, and whether it is an integer or a string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private String arg \u003d null; //argument supplied to the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HashMap\u003cString, String\u003e switchVals \u003d new HashMap\u003cString, String\u003e(); //hashmap of switch parameters"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // .."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void setSwitchValsMap(HashMap\u003cString, String\u003e switchVals) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.switchVals.putAll(switchVals);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void setSwitchVal(String switchName, String value) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchVals.put(switchName, value);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected String getSwitchVal(String switchName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchVals.get(switchName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void setArg(String arg) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected String getArg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return arg;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected abstract ArgSpec getSpec();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // I hate Java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getEmptyArgMsg() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSpec().getEmptyArgMsg();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgLevel getCmdArgLevel() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSpec().getCmdArgLevel();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, Switch\u003e getSwitchMap() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSpec().getSwitchMap();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchAliases() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return getSpec().getSwitchAliases();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchVals() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return Collections.unmodifiableMap(switchVals);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 61,
      "-": 9,
      "JeremyKwok": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ArgLevel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public enum ArgLevel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    NONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    REQUIRED,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    OPTIONAL"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 7
    }
  },
  {
    "path": "src/main/java/duke/command/ArgParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class ArgParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    enum ParseState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        EMPTY, //not parsing anything currently"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        ARG, //parsing a single-word argument for a switch or the command itself"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        STRING, //parsing a quoted string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        SWITCH //parsing a switch name"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ArgCommand currCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private StringBuilder elementBuilder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private ParseState state;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private String currSwitchName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private boolean isEscaped;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Map\u003cString, Switch\u003e switchMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HashMap\u003cString, String\u003e switchVals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Parses the user\u0027s input after the Command name and loads the parameters for the Command from it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param inputStr The input provided by the user for this command, without the command keyword and stripped."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws DukeException If input was in the wrong format, contained invalid values, or was otherwise unable to be"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                       parsed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseArgument(ArgCommand command, String inputStr) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currCommand \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        assert (!inputStr.contains(\"\\r\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (inputStr.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            checkEmptyString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currSwitchName \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchMap \u003d currCommand.getSwitchMap();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchVals \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        elementBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        isEscaped \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //FSM :D"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 0; i \u003c inputStr.length(); ++i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            char curr \u003d inputStr.charAt(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (state) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case EMPTY:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleEmpty(curr);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case ARG:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleArg(curr);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case STRING:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleString(curr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case SWITCH:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                handleSwitch(curr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Invalid parser state!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //cleanup and check if states exited correctly"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (state) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case EMPTY:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case STRING: //fallthrough; assume the user forgot to close the string"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case ARG:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            writeElement();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case SWITCH:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"Invalid parser state!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        checkCommandValid();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currCommand.setSwitchValsMap(switchVals);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleEmpty(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //TODO: check if switch is allowed rather than letting addSwitch handle it"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.SWITCH;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            checkInputAllowed();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.STRING;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027: //skip spaces"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            checkInputAllowed();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.ARG;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleArg(char curr) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Unescaped double quotes in argument: \" + elementBuilder.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"Unescaped hyphen in argument: \" + elementBuilder.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                isEscaped \u003d true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeElement();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            isEscaped \u003d false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleString(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeElement();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!isEscaped) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                isEscaped \u003d true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } //fallthrough"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            isEscaped \u003d false;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleSwitch(char curr) throws DukeHelpException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (curr) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.STRING;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027\\n\u0027: //fallthrough"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027 \u0027:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \u0027-\u0027:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            addSwitch();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.append(curr);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void writeElement() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        assert (currSwitchName !\u003d null || currCommand.getArg() \u003d\u003d null);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // if ambiguous whether argument is for command or switch, favour switch"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName !\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switchVals.put(currSwitchName, elementBuilder.toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currSwitchName \u003d null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else { //currCommand.arg \u003d\u003d null"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            currCommand.setArg(elementBuilder.toString());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        elementBuilder.setLength(0); //clear elementBuilder"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        state \u003d ParseState.EMPTY;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void addSwitch() throws DukeHelpException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String newSwitchName \u003d elementBuilder.toString();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // previous switch was not given an argument"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName !\u003d null) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (switchMap.get(currSwitchName).argLevel \u003d\u003d ArgLevel.REQUIRED) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"I need an argument for this switch: \" + currSwitchName, currCommand);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!switchMap.containsKey(newSwitchName)) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String findSwitchName \u003d CommandHelpers.findSwitch(newSwitchName, currCommand);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (findSwitchName \u003d\u003d null) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"I don\u0027t know what this switch is: \" + newSwitchName, currCommand);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            newSwitchName \u003d findSwitchName;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (switchVals.containsKey(newSwitchName)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"Multiple values supplied for switch: \" + newSwitchName, currCommand);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (switchMap.get(newSwitchName).argLevel !\u003d ArgLevel.NONE) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                currSwitchName \u003d newSwitchName;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                switchVals.put(newSwitchName, null);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            elementBuilder.setLength(0); //clear elementBuilder"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void checkInputAllowed() throws DukeHelpException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currSwitchName \u003d\u003d null) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (currCommand.getArg() \u003d\u003d null) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (currCommand.getCmdArgLevel() \u003d\u003d ArgLevel.NONE) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    throw new DukeHelpException(\"This command should not have an argument!\", currCommand);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"Multiple arguments supplied! You already gave: \" + currCommand.getArg(),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        currCommand);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void checkCommandValid() throws DukeException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currCommand.getCmdArgLevel() \u003d\u003d ArgLevel.REQUIRED \u0026\u0026 currCommand.getArg() \u003d\u003d null) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeHelpException(\"You need to give an argument for the command!\", currCommand);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (HashMap.Entry\u003cString, Switch\u003e switchEntry : switchMap.entrySet()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Switch checkSwitch \u003d switchEntry.getValue();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (!checkSwitch.isOptional \u0026\u0026 !switchVals.containsKey(checkSwitch.name)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"You need to give me this switch: \""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        + switchEntry.getKey(), currCommand);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void checkEmptyString() throws DukeException {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        boolean canBeEmpty \u003d true;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (currCommand.getCmdArgLevel() \u003d\u003d ArgLevel.REQUIRED) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            canBeEmpty \u003d false;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (Switch switchData : currCommand.getSwitchMap().values()) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                if (!switchData.isOptional) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    canBeEmpty \u003d false;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!canBeEmpty) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(currCommand.getEmptyArgMsg());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 260
    }
  },
  {
    "path": "src/main/java/duke/command/ArgSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract class for the argument specification for a particular class. Although Java does not provide a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * mechanism to enforce or document this contract, any subclass of ArgSpec must have a private constructor which sets"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * {@code cmdArgLevel} and {@code emptyArgMsg}, and which calls {@code switchInit()}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public abstract class ArgSpec {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected String emptyArgMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgLevel cmdArgLevel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Map\u003cString, Switch\u003e switchMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected Map\u003cString, String\u003e switchAliases;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public ArgLevel getCmdArgLevel() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return cmdArgLevel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, Switch\u003e getSwitchMap() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchMap;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Map\u003cString, String\u003e getSwitchAliases() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return switchAliases;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getEmptyArgMsg() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return emptyArgMsg;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void initSwitches(Switch... switches) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, Switch\u003e tempSwitchMap \u003d new HashMap\u003cString, Switch\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Map\u003cString, String\u003e tempSwitchAliases \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Set\u003cString\u003e switchRootSet \u003d new HashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Switch currSwitch : switches) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // create map of switch names to switch objects"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            String name \u003d currSwitch.name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (!tempSwitchMap.containsKey(name));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            tempSwitchMap.put(name, currSwitch);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // extract prefixes to build lookup table"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (name.startsWith(currSwitch.root));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assert (!switchRootSet.contains(currSwitch.root));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switchRootSet.add(currSwitch.root);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (int j \u003d currSwitch.root.length(); j \u003c\u003d name.length(); ++j) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                tempSwitchAliases.put(name.substring(0, j), name);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            // extract remaining aliases"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (String alias : currSwitch.aliases) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                tempSwitchAliases.put(alias, name);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchMap \u003d Collections.unmodifiableMap(tempSwitchMap);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switchAliases \u003d Collections.unmodifiableMap(tempSwitchAliases);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 64
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeFatalException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.stop();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 1,
      "aquohn": 3,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Highest-level abstract class for Command objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the command using the parameters loaded with Command\u0027s parse method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param core The DukeCore object for this command to operate on."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If command fails to execute."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @see DukeCore"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public abstract void execute(DukeCore core) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    //TODO: replace with abstract function that actually prints excerpts from the user guide"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return \"https://github.com/AY1920S1-CS2113-T14-1/main/blob/master/docs/UserGuide.adoc\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 7,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/command/CommandHelpers.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeHelpException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Functions for command autocompletion and autocorrection."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class CommandHelpers {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Checks if a particular switch in an ArgCommand is null, and if not, attempts to parse it as an Integer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param command The ArgCommand whose switch is being extracted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param switchName The name of the switch being extracted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The Integer that the string represents, or null if it is null."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @throws NumberFormatException If the string is not a valid representation of an integer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static Integer switchToInt(String switchName, ArgCommand command) throws DukeHelpException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String str \u003d command.getSwitchVal(switchName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return Integer.parseInt(str);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (NumberFormatException excp) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeHelpException(\"The switch \u0027\" + switchName + \"\u0027 must be an integer!\", command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Given a switch name provided by the user, finds the switch it is referring to, or the closest match,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * allowing the user to disambiguate."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param word The name provided by the user, which may not match any switch."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param command The command that the word is supposed to be a switch for."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The full name of the switch of the command that matches the word."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static String findSwitch(String word, ArgCommand command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String corrStr \u003d command.getSwitchAliases().get(word);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (corrStr !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return corrStr;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        HashMap\u003cString, String\u003e suggestions \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int minDist \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : command.getSwitchAliases().entrySet()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            int dist \u003d stringDistance(entry.getKey(), word, minDist);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (dist \u003c minDist) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                suggestions.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                suggestions.put(entry.getValue(), entry.getKey());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //return disambiguate(word, suggestions, command.getSwitchMap().keySet());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: finish up disambiguate"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Identifies a switch which is not matched exactly. Returns the closest match if it exists, and provides the user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * with a window offering the choice between the closest possible options and a list of valid options otherwise,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * including the choice to enter his own input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param word The user-provided switch name."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param suggestions A List of the closest matching switch names."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param valid The set of valid switches for this command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The string that the user has selected."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static String disambiguateSwitches(String word, ArrayList\u003cString\u003e suggestions, Set\u003cString\u003e valid) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(\"I didn\u0027t understand \u0027\").append(word)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(\"\u0027. Here are the closest matches:\").append(System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d suggestions.size(); ++i) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            builder.append(\"  \").append(i).append(\". \").append(suggestions.get(i - 1)).append(System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        builder.append(System.lineSeparator()).append(\"Enter the number corresponding to a suggestion to\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(\"select it, or enter the full form of one of the valid options listed below:\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                .append(System.lineSeparator()).append(System.lineSeparator()).append(\"  \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String validStr : valid) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            builder.append(validStr).append(\", \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //delete trailing comma and add newline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        builder.delete(builder.length() - 2, builder.length()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String selectedStr \u003d \"\"; //TODO: get from user"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return selectedStr;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Algorithm to compute a hybrid version of the Damerau-Levenshtein distance that takes into account distance"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * between keys on a standard QWERTY keyboard."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * https://stackoverflow.com/questions/29233888/"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * https://dl.acm.org/citation.cfm?doid\u003d1963190.1963191"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str1 The first string to compare."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param str2 The second string to compare."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param minDist The minimum string distance found so far."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The hybrid Damerau-Levenshtein distance between str1 and str2."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static int stringDistance(String str1, String str2, int minDist) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //if minDist is 0, run till the end; else break when dist exceeds minDist"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return str1.length() - str2.length() + minDist; //placeholder to deceive codacy"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //if dist \u003d\u003d 0 throw an error"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 111,
      "JeremyKwok": 1
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "// TODO: Write different commands for different contexts"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.Context;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Maintains the associations between command keywords and commands (e.g. \"list\" -\u003e ListCommand). For use in parsing"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs and returns the command corresponding to a name provided by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param cmdStr The user-provided name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @return The newly constructed command without any parameters loaded."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Command getCommand(String cmdStr, Context context) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // check context-independent switches first"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // maybe supply context as argument?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (cmdStr) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //return new BackCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case \"up\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //return new UpCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break; //not one of these; continue"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (context) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case HOME:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            switch (cmdStr) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return null;//new HomeFindCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"new\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new HomeNewCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"open\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new HomeOpenCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"report\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                return new HomeReportCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"discharge\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return new HomeDischargeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"history\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return new HomeHistoryCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                return new HomeHelpCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case PATIENT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (cmdStr) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"new\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return new PatientNewCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return new PatientFindCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"report\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                return new PatientReportCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"discharge\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                return new PatientDischargeCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"primary\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new PatientPrimaryCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new PatientEditCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"history\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new PatientHistoryCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case TREATMENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (\"status\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                //return new TreatmentStatusCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case INVESTIGATION:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (\"result\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                //return new InvxResultCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case EVIDENCE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 10,
      "aquohn": 59,
      "JeremyKwok": 9,
      "-": 13
    }
  },
  {
    "path": "src/main/java/duke/command/Executor.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for executing user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeCore core;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an Executor object with the defined core."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core Core of Dr. Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Executor(DukeCore core) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.core \u003d core;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes the specified command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param command Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If there is an error executing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        command.execute(core);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 30
    }
  },
  {
    "path": "src/main/java/duke/command/HomeDischargeAndReportSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class HomeDischargeAndReportSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final HomeDischargeAndReportSpec spec \u003d new HomeDischargeAndReportSpec();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static HomeDischargeAndReportSpec getSpec() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private HomeDischargeAndReportSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the patient\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches(new Switch(\"summary\", String.class, true, ArgLevel.OPTIONAL, \"sum\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/command/HomeHelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHelpCommand extends ArgCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final String filePath \u003d \"data\" + File.separator + \"helpDetails.json\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return HomeHelpSpec.getSpec();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        final String[] infoFields \u003d {\"command\", \"summary\", \"format\", \"switches\", \"info\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        HashMap\u003cString, HashMap\u003cString,String\u003e\u003e helpDetails;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        helpDetails \u003d core.storage.loadHelpHashMap(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (getSwitchVals().isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Map.Entry\u003cString, HashMap\u003cString, String\u003e\u003e mapElement : helpDetails.entrySet()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                HashMap\u003cString,String\u003e value \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                String helpInfo \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    helpInfo +\u003d infoFields[i] + \": \" + value.get(infoFields[i]) + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                core.ui.print(helpInfo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e mapElement : getSwitchVals().entrySet()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                String key \u003d mapElement.getKey();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (helpDetails.containsKey(key)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    HashMap\u003cString,String\u003e value \u003d helpDetails.get(key);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    String helpInfo \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    for (String field : infoFields) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        if (value.containsKey(field)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                            helpInfo +\u003d field + \": \" + value.get(field) + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    core.ui.print(helpInfo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 2,
      "JeremyKwok": 48
    }
  },
  {
    "path": "src/main/java/duke/command/HomeHelpSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHelpSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final HomeHelpSpec spec \u003d new HomeHelpSpec();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static HomeHelpSpec getSpec() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HomeHelpSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the help function!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"critical\", String.class, true, ArgLevel.NONE, \"c\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"discharge\", String.class, true, ArgLevel.NONE, \"d\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"archive\", String.class, true, ArgLevel.NONE, \"a\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"open\", String.class, true, ArgLevel.NONE, \"o\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"new\", String.class, true, ArgLevel.NONE, \"n\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.NONE, \"h\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"undo\", String.class, true, ArgLevel.NONE, \"u\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"redo\", String.class, true, ArgLevel.NONE, \"r\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 25
    }
  },
  {
    "path": "src/main/java/duke/command/HomeHistoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHistoryCommand extends ArgCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return HomeHistorySpec.getSpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (core.patientMap.patientExist(getArg())) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String patientDetails \u003d getArg() + \", \" + core.patientMap.getPatient(getArg()).getName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String message \u003d getSwitchVal(\"message\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String rewrite \u003d getSwitchVal(\"rewrite\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            String newHistory \u003d message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (rewrite !\u003d null \u0026\u0026 (rewrite.toLowerCase().equals(\"y\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    || rewrite.toLowerCase().equals(\"yes\") || rewrite.toLowerCase().equals(\"ye\"))) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                core.patientMap.getPatient(getArg()).setHistory(message);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                newHistory \u003d core.patientMap.getPatient(getArg()).appendHistory(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            core.ui.print(\"History of \" + patientDetails + \" updated with:\\n\" + newHistory + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No such Patient!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 33
    }
  },
  {
    "path": "src/main/java/duke/command/HomeHistorySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class HomeHistorySpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final HomeHistorySpec spec \u003d new HomeHistorySpec();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static HomeHistorySpec getSpec() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HomeHistorySpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the patient!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"message\", String.class, false, ArgLevel.REQUIRED, \"m\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"rewrite\", String.class, true, ArgLevel.REQUIRED, \"r\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 18
    }
  },
  {
    "path": "src/main/java/duke/command/HomeNewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeNewCommand extends ArgCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return HomeNewSpec.getSpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        //ideally, we would pass an array of objects"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer height \u003d CommandHelpers.switchToInt(\"height\", this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer weight \u003d CommandHelpers.switchToInt(\"weight\", this);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer age \u003d CommandHelpers.switchToInt(\"age\", this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        Integer number \u003d CommandHelpers.switchToInt(\"number\", this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String bed \u003d getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String address \u003d getSwitchVal(\"address\") !\u003d null ? getSwitchVal(\"address\") : \"-\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String history \u003d getSwitchVal(\"history\") !\u003d null ? getSwitchVal(\"history\") : \"-\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: format checks for bed number?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        for (String existingBed : core.patientMap.getPatientObservableMap().keySet()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (existingBed.equals(bed)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                throw new DukeException(\"There is already a patient at that bed!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientMap.addPatient(new Patient(getSwitchVal(\"name\"), bed,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                getSwitchVal(\"allergies\"), height, weight, age, number,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                address, history));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 33,
      "JeremyKwok": 3
    }
  },
  {
    "path": "src/main/java/duke/command/HomeNewSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class HomeNewSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final HomeNewSpec spec \u003d new HomeNewSpec();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static HomeNewSpec getSpec() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private HomeNewSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the patient!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"name\", String.class, false, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"bed\", String.class, false, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"allergies\", String.class, false, ArgLevel.REQUIRED, \"a\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                        \"allergy\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"go\", String.class, true, ArgLevel.NONE, \"g\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"height\", Integer.class, true, ArgLevel.REQUIRED, \"h\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"weight\", Integer.class, true, ArgLevel.REQUIRED, \"w\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"age\", Integer.class, true, ArgLevel.REQUIRED, \"ag\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"number\", Integer.class, true, ArgLevel.REQUIRED, \"num\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"address\", String.class, true, ArgLevel.REQUIRED, \"ad\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.REQUIRED, \"hi\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 28
    }
  },
  {
    "path": "src/main/java/duke/command/HomeOpenCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.Context;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HomeOpenCommand extends ArgCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return HomeOpenSpec.getSpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String bed \u003d getSwitchVal(\"bed\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Patient patient \u003d core.patientMap.getPatient(bed);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.uiContext.setContext(Context.PATIENT, patient);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 22
    }
  },
  {
    "path": "src/main/java/duke/command/HomeOpenSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class HomeOpenSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final HomeOpenSpec spec \u003d new HomeOpenSpec();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static HomeOpenSpec getSpec() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private HomeOpenSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the patient!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"bed\", String.class, false, ArgLevel.REQUIRED, \"b\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.UiContext;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import static java.lang.Math.min;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Class for parsing user input from the UI in order to construct Commands of the appropriate type and parameters,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * and execute them. The static initializer generates a static map from Cmd enum values to allow fast lookup of"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * command types."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final Commands commands;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final UiContext uiContext;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private final ArgParser argParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs a new Parser, generating a HashMap from an array of enum values to allow fast lookup of command types."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Parser(UiContext uiContext, Commands commands) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.uiContext \u003d uiContext;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.argParser \u003d new ArgParser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs a new Parser, using the Cmd enum to supply the command names."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Parser(UiContext uiContext) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this(uiContext, new Commands());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Command of the type requested by the user, and extracts the necessary data for the command from"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * the arguments. Literal line separators in the text will be converted to \\n for consistency."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param inputStr The input to the command line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A new instance of the Command object requested"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If there is no matching command or the arguments do not meet the command\u0027s requirements."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parse(String inputStr) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        inputStr \u003d inputStr.replace(\"\\t\", \"    \"); //sanitise input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int spaceIdx \u003d inputStr.indexOf(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        int sepIdx \u003d inputStr.indexOf(System.lineSeparator());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String cmdStr \u003d inputStr;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (!(spaceIdx \u003d\u003d -1 \u0026\u0026 sepIdx \u003d\u003d -1)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (spaceIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, sepIdx);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else if (sepIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, spaceIdx);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStr \u003d inputStr.substring(0, min(sepIdx, spaceIdx));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Command command \u003d commands.getCommand(cmdStr, uiContext.getContext());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t recognise this command: \" + cmdStr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // TODO: autocorrect system"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // trim command and first space after it from input if needed, and standardise newlines"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command instanceof ArgCommand) { // stripping not required otherwise"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            //standardise line separators for internal manipulation"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputStr \u003d inputStr.replaceAll(\"(\\\\r\\\\n|\\\\n|\\\\r)\", \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            argParser.parseArgument((ArgCommand) command, inputStr.substring(cmdStr.length()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 6,
      "aquohn": 37,
      "-": 26,
      "JeremyKwok": 1
    }
  },
  {
    "path": "src/main/java/duke/command/PatientEditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientEditCommand extends ArgCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return PatientEditSpec.getSpec();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        //Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: edit patient"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 20
    }
  },
  {
    "path": "src/main/java/duke/command/PatientEditSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientEditSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientEditSpec spec \u003d new PatientEditSpec();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientEditSpec getSpec() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientEditSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me what to edit!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"name\", String.class, true, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"bed\", String.class, true, ArgLevel.REQUIRED, \"b\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"allergies\", String.class, true, ArgLevel.REQUIRED, \"a\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \"allergy\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"height\", Integer.class, true, ArgLevel.REQUIRED, \"h\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"weight\", Integer.class, true, ArgLevel.REQUIRED, \"w\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"age\", Integer.class, true, ArgLevel.REQUIRED, \"ag\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"number\", Integer.class, true, ArgLevel.REQUIRED, \"num\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"address\", String.class, true, ArgLevel.REQUIRED, \"ad\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"history\", String.class, true, ArgLevel.REQUIRED, \"hi\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Switch(\"append\", String.class, true, ArgLevel.REQUIRED, \"app\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 27
    }
  },
  {
    "path": "src/main/java/duke/command/PatientFindCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientFindCommand extends ArgCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return PatientFindSpec.getSpec();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String searchTerm \u003d getArg();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String findStr \u003d \"Here are the objects that contain \u0027\" + getArg() + \"\u0027:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cImpression\u003e impressionResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (getSwitchVals().isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult \u003d patient.find(searchTerm);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            impressionResult \u003d patient.findImpression(searchTerm);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            for (Impression imp : impressionResult) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (getSwitchVals().containsKey(\"impression\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    searchResult.add(imp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (getSwitchVals().containsKey(\"evidence\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    searchResult.addAll(imp.findEvidence(searchTerm));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (getSwitchVals().containsKey(\"treatment\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    searchResult.addAll(imp.findEvidence(searchTerm));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String information \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (int i \u003d 0; i \u003c searchResult.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            information +\u003d (i + 1) + \". \" + searchResult.get(i).getName() + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        core.ui.print(findStr + information);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 16,
      "JeremyKwok": 34
    }
  },
  {
    "path": "src/main/java/duke/command/PatientFindSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class PatientFindSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final PatientFindSpec spec \u003d new PatientFindSpec();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static PatientFindSpec getSpec() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private PatientFindSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the search!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"impression\", String.class, true, ArgLevel.NONE, \"i\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"evidence\", String.class, true, ArgLevel.NONE, \"e\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"treatment\", String.class, true, ArgLevel.NONE, \"t\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 15,
      "JeremyKwok": 5
    }
  },
  {
    "path": "src/main/java/duke/command/PatientHistoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientHistoryCommand extends ArgCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return PatientHistorySpec.getSpec();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patient.appendHistory(getArg());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.ui.print(\"Note appended!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 22
    }
  },
  {
    "path": "src/main/java/duke/command/PatientHistorySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientHistorySpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientHistorySpec spec \u003d new PatientHistorySpec();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientHistorySpec getSpec() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientHistorySpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything on what to add!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 16
    }
  },
  {
    "path": "src/main/java/duke/command/PatientNewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class PatientNewCommand extends ArgCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return PatientNewSpec.getSpec();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Impression imp \u003d new Impression(getSwitchVal(\"name\"), getSwitchVal(\"description\"), patient);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patient.addNewImpression(imp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        core.ui.print(\"Impression added:\\n\" + patient.getImpression(imp.getName()).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 24
    }
  },
  {
    "path": "src/main/java/duke/command/PatientNewSpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class PatientNewSpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private static final PatientNewSpec spec \u003d new PatientNewSpec();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static PatientNewSpec getSpec() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private PatientNewSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me anything about the patient!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.NONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"name\", String.class, false, ArgLevel.REQUIRED, \"n\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                new Switch(\"description\", String.class, false, ArgLevel.REQUIRED, \"d\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 19
    }
  },
  {
    "path": "src/main/java/duke/command/PatientPrimaryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientPrimaryCommand extends ArgCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return PatientPrimarySpec.getSpec();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(DukeCore core) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super.execute(core);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Patient patient \u003d (Patient) core.uiContext.getObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patient.setPriDiagnosis(getArg());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 20,
      "JeremyKwok": 1
    }
  },
  {
    "path": "src/main/java/duke/command/PatientPrimarySpec.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class PatientPrimarySpec extends ArgSpec {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PatientPrimarySpec spec \u003d new PatientPrimarySpec();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static PatientPrimarySpec getSpec() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientPrimarySpec() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me which impression to set!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initSwitches();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Switch.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * A switch for a command, with various specified properties."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class Switch {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final Class type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final boolean isOptional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final ArgLevel argLevel;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final String root;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public final List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Construct a new Switch object, describing the properties of the switch."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param name       The full name of the switch."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param type       The expected type of the switch. If there is more than one possible type, specify \"String\" and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *                   parse and differentiate within the command itself."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param isOptional Whether or not the switch is optional."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param argLevel   The requirement for an argument for this switch."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param root       The shortest prefix of this switch by which it can be unambiguously recognised."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param aliases    Any other names for this switch that do not constitute a prefix for it."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Switch(String name, Class type, boolean isOptional, ArgLevel argLevel, String root, String... aliases) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.isOptional \u003d isOptional;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.argLevel \u003d argLevel;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.root \u003d root;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.aliases \u003d List.of(aliases);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 36
    }
  },
  {
    "path": "src/main/java/duke/data/DukeData.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class DukeData extends DukeObject {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String impression;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer priority;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the evidence or treatment data of a patient."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A DukeData object corresponds to the evidence or treatment a doctor has,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that data as well as an integer"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the evidence or treatment needed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the data is tagged to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the investigation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeData(String name, Impression impression, Integer priority) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(impression.getName() + \"-\" + name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impression \u003d impression.getName();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the evidence or treatment data of a patient."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A DukeData object corresponds to the evidence or treatment a doctor has,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that data as well as an integer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the evidence or treatment needed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the name of the impression object the data is tagged to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the investigation"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected DukeData(String name, String impression, Integer priority) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(impression + \"\\t\" + name);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impression \u003d impression;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This updatePriority function updates priority of treatment"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param int the integer value of the priority between 1 to 4"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the integer of the updated priority"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public abstract Integer updatePriority(Integer priorityVal) throws DukeException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getImpression() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return impression;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function sets the impression and updates the name of the DukeData object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the new impression used"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setImpression(Impression impression) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.impression \u003d impression.getName();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] bits \u003d this.getName().split(\"\\t\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String actualName \u003d bits[bits.length - 1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        setName(actualName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super.setName(this.impression + \"\\t\" + name);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getPriority() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setPriority(Integer priority) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Impression: \" + this.impression + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Priority: \" + Integer.toString(this.priority) + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 82
    }
  },
  {
    "path": "src/main/java/duke/data/DukeObject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Highest level of abstraction for all DukeObjects storing Patient related Data"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * A Duke object has a relevant name specifying what it is."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Attributes:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - name: what the object is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class DukeObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeObject(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * The toString function returns a String representing the information stored in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the `DukeObject`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the String representation of the object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString \u003d \"Name: \" + this.name + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * The toDisplayString function returns a String formatted"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * for pretty printing to the GUI / Display."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the String in pretty print format for display"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public abstract String toDisplayString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * The toReportString function returns a String formatted"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * to be used in a Report about the relevant DukeObject."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the String in Report format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public abstract String toReportString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected void setName(String name) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 51
    }
  },
  {
    "path": "src/main/java/duke/data/Evidence.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Abstraction of evidence constituting a medical diagnosis."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * An Evidence object corresponds to the notes of the doctor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * on a piece of medical evidence as well as"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * an integer between 1-4 representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * Attributes:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - name: information on the evidence"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - impression: the impression object the evidence is tagged to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * - priority: the priority level of the evidence"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class Evidence extends DukeData {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String summary;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence(String name, Impression impression, Integer priority, String summary) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected Evidence(String name, String impression, Integer priority, String summary) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer updatePriority(Integer priorityVal) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (priorityVal \u003e\u003d 0 \u0026\u0026 priorityVal \u003c 5) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            super.setPriority(priorityVal);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return super.getPriority();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The priority must be within 0 to 4!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setSummary(String summary) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Summary: \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString \u003d \"Summary: \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 53,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/data/GsonStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles storage of patients."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class GsonStorage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * the file that the patients will be stored in."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final File jsonFile;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * the filepath to the file that the patients will be stored in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for GsonStorage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if a Json file exists at the specified filepath and creates one if it does not exist."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public GsonStorage(String path) throws DukeFatalException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        File dataDir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        File reportDir \u003d new File(\"data/reports\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!reportDir.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            reportDir.mkdir();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        filePath \u003d path;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        jsonFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!jsonFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (!jsonFile.createNewFile()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeFatalException(\"Unable to setup data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads all the patients in the JSON file to a hash map."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the hash map containing the patients"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public HashMap\u003cString, Patient\u003e loadPatientHashMap() throws DukeFatalException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cString, Patient\u003e patientMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String json \u003d Files.readString(Paths.get(filePath), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Patient[] patientList \u003d new Gson().fromJson(json, Patient[].class);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (patientList \u003d\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                return patientMap;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            for (Patient patient : patientList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                patientMap.put(patient.getBedNo(), patient);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeFatalException(\"Unable to load data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return patientMap;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a list with the patients in the hash map and writes the lists json representation"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * to the json file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param patientMap the hash map containng all the patients"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeFatalException If the file writer cannot be setup."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void writeJsonFile(HashMap\u003cString, Patient\u003e patientMap) throws DukeFatalException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ArrayList\u003cPatient\u003e patientArrList \u003d new ArrayList\u003cPatient\u003e(patientMap.values());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(jsonFile);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fileWriter.write(new Gson().toJson(patientArrList));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeFatalException(\"Unable to write data! Some data may have been lost,\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the filepath to the json file containing the Json representation of all the patients."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the filepath"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clears the json file and the paitent hash map. Used to reset the storage data."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an empty PatientMap object"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public PatientMap resetAllData() throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(jsonFile);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return new PatientMap();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Loads all the details in the JSON file to a hash map."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param helpFile the path of the helpFile"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the hash map containing the helpfile"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeFatalException If data file cannot be setup."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public HashMap\u003cString, HashMap\u003cString, String\u003e\u003e loadHelpHashMap(String helpFile) throws DukeFatalException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        final File jsonFile \u003d new File(helpFile);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (!jsonFile.exists()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                if (!jsonFile.createNewFile()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeFatalException(\"Unable to setup data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        HashMap\u003cString, HashMap\u003cString, String\u003e\u003e helpMap \u003d new HashMap\u003cString, HashMap\u003cString, String\u003e\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            JsonReader reader \u003d new JsonReader(new FileReader(helpFile));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            helpMap \u003d new Gson().fromJson(reader, new TypeToken\u003cHashMap\u003cString, HashMap\u003cString,String\u003e\u003e\u003e(){}.getType());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeFatalException(\"Unable to load data file, try checking your permissions?\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return helpMap;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 79,
      "aquohn": 7,
      "JeremyKwok": 31,
      "-": 34
    }
  },
  {
    "path": "src/main/java/duke/data/Impression.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Impression extends DukeObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HashMap\u003cString, Evidence\u003e evidences;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private HashMap\u003cString, Treatment\u003e treatments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String patientbedNo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the impression a doctor has about a Patient."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * An Impression object corresponds to the impression a Doctor has of a patient’s Condition,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression, the description of an impression and a list of Evidences"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * that led to the impression as well as a Treatment list with the treatments determined by a Doctor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * It also has a handler to the Patient it is observed about."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - evidence the list of evidences contributing to the impression"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - treatments: the list of treatments determined by a doctor to deal with the impression"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - patient: the Patient it is tagged to     * @param name the name of the impression"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param description the description of the impression"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression(String name, String description, Patient patient) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(patient.getBedNo() + \"-\" + name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.patientbedNo \u003d patient.getBedNo();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.evidences \u003d new HashMap\u003cString, Evidence\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.treatments \u003d new HashMap\u003cString, Treatment\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This functions search for treatment relevant to the searchTerm."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return ArrayList of the Treatments"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cTreatment\u003e findTreatment(String searchTerm) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cTreatment\u003e searchResult \u003d new ArrayList\u003cTreatment\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry\u003cString, Treatment\u003e mapElement : this.treatments.entrySet()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Treatment valueT \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (valueT.toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                searchResult.add(valueT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This functions search for Evidence relevant to the searchTerm."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term to be searched for"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return ArrayList of the Evidence"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cEvidence\u003e findEvidence(String searchTerm) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cEvidence\u003e searchResult \u003d new ArrayList\u003cEvidence\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry\u003cString, Evidence\u003e mapElement : this.evidences.entrySet()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Evidence valueE \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (valueE.toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                searchResult.add(valueE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This find function returns a list of all DukeData related to the impression containing the search term."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to be used to filter the DukeData"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the list of DukeData"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeData\u003e find(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeData\u003e searchResult \u003d new ArrayList\u003cDukeData\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchResult.addAll(findEvidence(searchTerm));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        searchResult.addAll(findTreatment(searchTerm));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This addNewEvidence function adds a new evidence to the evidence list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newEvidence the evidence to be added"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Evidence added"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence addNewEvidence(Evidence newEvidence) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.evidences.put(newEvidence.getName(), newEvidence);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newEvidence;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteEvidence function deletes an evidence at the specified index from the evidence list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the evidence"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the deleted Evidence"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence deleteEvidence(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.evidences.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Evidence evidence \u003d this.evidences.get(keyIdentifier);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.evidences.remove(keyIdentifier);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return evidence;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getEvidence function returns the evidence from the evidence list at the specified index."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the evidence"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the evidence specified by the index"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Evidence getEvidence(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.evidences.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Evidence evidence \u003d this.evidences.get(keyIdentifier);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return evidence;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Adds a new treatment to the treatment list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newTreatment the treatment to be added"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the treatment added"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment addNewTreatment(Treatment newTreatment) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.treatments.put(newTreatment.getName(), newTreatment);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newTreatment;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteTreatment function deletes a treatment at the specified index from the treatment list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the treatment"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the deleted treatment"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment deleteTreatment(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.treatments.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Treatment treatment \u003d this.treatments.get(keyIdentifier);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            this.treatments.remove(keyIdentifier);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return treatment;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getTreatment function returns the treatment from the treatment list at the specified index."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyIdentifier index of the treatment"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the treatment specified by the index"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment getTreatment(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.treatments.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Treatment treatment \u003d this.treatments.get(keyIdentifier);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return treatment;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Description: \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Patient Bed: \" + this.patientbedNo + \"\\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry mapElement : this.evidences.entrySet()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Evidence valueE \u003d (Evidence) mapElement.getValue();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            informationString +\u003d valueE.toString();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry mapElement : this.treatments.entrySet()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Treatment valueT \u003d (Treatment) mapElement.getValue();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            informationString +\u003d valueT.toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // Todo"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString \u003d \"\\n\\tDescription of impression: \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry mapElement : this.evidences.entrySet()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            Evidence valueE \u003d (Evidence) mapElement.getValue();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"/t\" + valueE.toReportString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry mapElement : this.treatments.entrySet()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            Treatment valueT \u003d (Treatment) mapElement.getValue();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\t\" + valueT.toReportString();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getPatient() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return patientbedNo;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public HashMap\u003cString, Evidence\u003e getEvidences() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return evidences;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public HashMap\u003cString, Treatment\u003e getTreatments() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return treatments;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 2,
      "JeremyKwok": 199,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/data/Investigation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Investigation extends Treatment {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String summary;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the investigation needed to investigate an impression the Doctor has about a patient."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Investigation object corresponds to the investigation a doctor needs to better understand the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * signs and symptoms of a Patient, the impression that led to that particular investigation being necessary,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the status of the treatment, a description of the status, a summary of why the investigation is needed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the investigation needed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the investigation is tagged to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the investigation"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the investigation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param statusArr description of the status tagged to this investigation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary description of the investigation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Investigation(String name, Impression impression, int priority,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                         int status, String[] statusArr, String summary) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, status, statusArr);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This toResult function returns the result or conclusion from the investigation done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultName name of result"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultPriority importance of the result between 1 to 4"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param resultSummary description of the result"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the result object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Result toResult(String resultName, int resultPriority, String resultSummary) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //String resultName \u003d \"Result of \" + this.getName();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //String resultSummary \u003d this.summary;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        //int resultPriority \u003d this.getPriority"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Result newResult \u003d new Result(resultName, this.getImpression(), resultPriority, resultSummary);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newResult;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Summary \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setSummary(String summary) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 65
    }
  },
  {
    "path": "src/main/java/duke/data/Medicine.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Medicine extends Treatment {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String dose;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the medicine needed to treat a symptom or impression of a patient."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Medicine object corresponds to the medicine prescribed by a doctor to treat the signs"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * and symptoms of a Patient, the impression that led to that particular medicine being necessary,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the status of the treatment, a description of the status, the dosage, start date, duration of the treatment"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the investigation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the medicine needed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the medicine is tagged to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the medicine"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the medicine"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param statusArr description of the status tagged to this medicine"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param dose the dosage of the medicine needed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param startDate the starting date when the patient should be on the medicine"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param duration the duration the patient needs to take the medicine"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Medicine(String name, Impression impression, int priority, int status, String[] statusArr,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    String dose, String startDate, String duration) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, status, statusArr);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.dose \u003d dose;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Dose: \" + this.dose + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Start Date: \" + this.startDate + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Duration: \" + this.duration + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDose() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return dose;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDose(String dose) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.dose \u003d dose;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getStartDate() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 72
    }
  },
  {
    "path": "src/main/java/duke/data/Observation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Observation extends Evidence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private boolean isObjective;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents observations of a doctor about a patient."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * An Observation object corresponds to the observations of the doctor about the symptoms of a Patient,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the information that led to that particular observation, as well as an integer between 1-4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name information on the observation / symptom"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the evidence is tagged to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary a summary of what led to the observation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param isObjective whether the observation has physical evidence or is a symptom reported by the patient"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the evidence"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Observation(String name, Impression impression, int priority, String summary, boolean isObjective) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, summary);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.isObjective \u003d isObjective;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Objective: \" + Boolean.toString(this.isObjective) + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isObjective() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return isObjective;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setObjective(boolean objective) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        isObjective \u003d objective;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 50
    }
  },
  {
    "path": "src/main/java/duke/data/Patient.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.MapChangeListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.ObservableMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeSupport;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Patient extends DukeObject {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String bedNo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String allergies;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Impression priDiagnosis;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private HashMap\u003cString, Impression\u003e impressions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer height;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer weight;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer age;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer number;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String address;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String history;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private transient ObservableMap\u003cString, Impression\u003e observableImpressions;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private transient PropertyChangeSupport pcs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the patient."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Patient object corresponds to the biometric information of a patient,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * patient details, medical history, the impressions the doctor has about a patient."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - priDiagnosis the chief complaint or most serious impression of a patient"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - impression the list of all impressions of a patient"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name      the name of the patient"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param bedNo     the bed number of the patient"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param height    the height of the patient"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param weight    the weight of the patient"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param age       the age of the patient"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param number    the contact details of a patient\u0027s NOK"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param address   the residential address of a patient"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param history   the medical history of a patient"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param allergies the Food and Drug allergies a patient has"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient(String name, String bedNo, String allergies, Integer height, Integer weight,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                   Integer age, Integer number, String address, String history) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.bedNo \u003d bedNo;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.impressions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.priDiagnosis \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initObservableImpressions();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.pcs \u003d new PropertyChangeSupport(this);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the patient."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Patient object corresponds to the biometric information of a patient,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * patient details, medical history, the impressions the doctor has about a patient."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name      the name of the patient"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param bedNo     the bed number of the patient"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param allergies the Food and Drug allergies a patient has"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient(String name, String bedNo, String allergies) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.bedNo \u003d bedNo;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.impressions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.height \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.weight \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.age \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.number \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.address \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.history \u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.priDiagnosis \u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        initObservableImpressions();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.pcs \u003d new PropertyChangeSupport(this);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attaches a listener to the impressions map."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This listener updates the {@code impressionHashMap} whenever the patient map is updated."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void attachImpressionsListener() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        observableImpressions.addListener((MapChangeListener\u003cString, Impression\u003e) change -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (change.wasAdded()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressions.put(change.getKey(), change.getValueAdded());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (change.wasRemoved()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressions.remove(change.getKey(), change.getValueRemoved());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This discharge function runs the procedure to discharges a patient from the hospital."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Todo write the function"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void discharge() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // Todo"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This addNewImpression function adds a new impression to the impressions list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newImpression the impression to be added"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Impression newly added"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression addNewImpression(Impression newImpression) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.observableImpressions.put(newImpression.getName(), newImpression);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newImpression;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This deleteImpression function deletes an impression at the specified index"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * from the impressions list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier name of the impression"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the Impression of the deleted Impression"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression deleteImpression(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (this.observableImpressions.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Impression imp \u003d this.observableImpressions.get(keyIdentifier);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            this.observableImpressions.remove(keyIdentifier);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return imp;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This getImpression function returns the impression from the impressions list at the specified index."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyIdentifier index of the impression"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return Impression the impression specified by the index"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression getImpression(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (this.observableImpressions.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return this.observableImpressions.get(keyIdentifier);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Sets the Primary Diagnosis of the patient specified by the index chosen."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyIdentifier index of the impression"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setPriDiagnosis(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (this.observableImpressions.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Impression oldPriDiagnosis \u003d priDiagnosis;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            priDiagnosis \u003d this.observableImpressions.get(keyIdentifier);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            pcs.firePropertyChange(\"Primary Diagnosis\", oldPriDiagnosis, priDiagnosis);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"I don\u0027t have that entry in the list!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function finds relavent Impressions to the searchTerm."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the serach term"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the list of impressions"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cImpression\u003e findImpression(String searchTerm) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cImpression\u003e searchResult \u003d new ArrayList\u003cImpression\u003e();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Map.Entry\u003cString, Impression\u003e mapElement : this.observableImpressions.entrySet()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Impression value \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (value.toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                searchResult.add(value);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function find returns a list of all DukeObjs"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * with names related to the patient containing the search term."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to be used to filter the DukeObj"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the hashMap of DukeObjs"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeObject\u003e find(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cImpression\u003e filteredList \u003d findImpression(searchTerm);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003cDukeObject\u003e();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Impression imp : filteredList) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.add(imp);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.addAll(imp.find(searchTerm));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function appends an addition to the history of a Patient."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param addition the string to be added"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the new history"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String appendHistory(String addition) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String newHistory;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (this.history !\u003d null \u0026\u0026 !this.history.equals(\"\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            newHistory \u003d this.history + System.lineSeparator() + addition;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            newHistory \u003d addition;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        setHistory(newHistory);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newHistory;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Adds a listener to listen for changes in {@code Patient} attributes."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param pcl PropertyChangeListener object."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void addListener(PropertyChangeListener pcl) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.addPropertyChangeListener(pcl);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * This function find returns if a patient is allergic to an allergy."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param allergy String the possible allergy striped of spaces"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isAllergic(String allergy) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return this.allergies.contains(allergy);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a string representation of a patient displaying all the values of the patient\u0027s attributes"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     * in a reader-friendly format.      *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return string representation of patient"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Personal details\\n\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Height: \" + Integer.toString(this.height) + \"\\n\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Weight: \" + Integer.toString(this.weight) + \"\\n\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Age: \" + Integer.toString(this.age) + \"\\n\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Number: \" + Integer.toString(this.number) + \"\\n\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Address: \" + this.address + \"\\n\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"History: \" + this.history + \"\\n\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Registration details\\n\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Bed Number: \" + this.bedNo + \"\\n\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Allergies: \" + this.allergies + \"\\n\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d (priDiagnosis !\u003d null) ? \"Primary Diagnosis: \" + this.priDiagnosis.toString() + \"\\n\" : \"\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry mapElement : this.impressions.entrySet()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Impression imp \u003d (Impression) mapElement.getValue();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            informationString +\u003d imp.toString();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.toString() + informationString + \"\\n\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // Todo"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString \u003d \"\\tName of patient: \" + getName() + \"\\n\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString +\u003d \"\\tBed Number: \" + this.bedNo + \"\\n\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.height !\u003d null) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tHeight: \" + Integer.toString(this.height) + \"\\n\";"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.weight !\u003d null) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tWeight: \" + Integer.toString(this.weight) + \"\\n\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.allergies !\u003d null) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tAllergies: \" + this.allergies + \"\\n\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.age !\u003d null) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tAge: \" + Integer.toString(this.age) + \"\\n\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.number !\u003d null) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tNumber: \" + Integer.toString(this.number) + \"\\n\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.address !\u003d null) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tAddress: \" + this.address + \"\\n\";"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.history !\u003d null) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tHistory: \" + this.history + \"\\n\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.priDiagnosis !\u003d null) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tRegistration details:\\n\";"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tAllergies: \" + this.allergies + \"\\n\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\tPrimary Diagnosis: \" + this.priDiagnosis.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            informationString +\u003d \"\\nData about doctors impression of the patient and associated\""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \" treatments and evidences;\";"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Map.Entry mapElement : this.impressions.entrySet()) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                Impression imp \u003d (Impression) mapElement.getValue();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                informationString +\u003d imp.toReportString();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString + \"\\n\\n\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getBedNo() {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return bedNo;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ObservableMap\u003cString, Impression\u003e getImpressionsObservableMap() {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return observableImpressions;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void initObservables() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initObservableImpressions();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.pcs \u003d new PropertyChangeSupport(this);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void initObservableImpressions() {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.observableImpressions \u003d FXCollections.observableMap(impressions);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        attachImpressionsListener();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getAllergies() {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return allergies;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAllergies(String allergies) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Impression getPriDiagnosis() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return priDiagnosis;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getHeight() {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setHeight(int height) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getWeight() {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setWeight(int weight) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getAge() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAge(int age) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getNumber() {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setNumber(int number) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getAddress() {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setAddress(String address) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getHistory() {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return history;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set medical history of {@code Patient}."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param history New medical history."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setHistory(String history) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String oldHistory \u003d this.history;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.firePropertyChange(\"History\", oldHistory, history);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 62,
      "aquohn": 1,
      "JeremyKwok": 280,
      "-": 55
    }
  },
  {
    "path": "src/main/java/duke/data/PatientMap.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeResetException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.collections.ObservableMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class PatientMap {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ObservableMap\u003cString, Patient\u003e patientObservableMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Creates a new PatientMap, loading data from the Storage object provided."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param storage The Storage object pointing to the TSV file containing the data to load."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeResetException If file is corrupted or the data has been edited to be unreadable."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeFatalException If unable to write data file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public PatientMap(GsonStorage storage) throws DukeResetException, DukeFatalException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cString, Patient\u003e patientHashMap \u003d storage.loadPatientHashMap();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientObservableMap \u003d FXCollections.observableMap(patientHashMap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Map.Entry\u003cString, Patient\u003e pair : patientHashMap.entrySet()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            pair.getValue().initObservables();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Creates a new, empty TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public PatientMap() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientObservableMap \u003d FXCollections.observableMap(new HashMap\u003cString, Patient\u003e());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Adds a new Patient to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param newPatient The task to be added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient addPatient(Patient newPatient) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        patientObservableMap.put(newPatient.getBedNo(), newPatient);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return newPatient;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Deletes a patient from the map."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier The argument given by the user to identify the patient to be deleted."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object deleted"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeException If bedNo cannot be resolved to a valid bedNo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient deletePatient(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (patientObservableMap.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Patient deletedP \u003d patientObservableMap.get(keyIdentifier);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            patientObservableMap.remove(keyIdentifier);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return deletedP;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The patient cannot be identified\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Gets a patient from the map."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param keyIdentifier The argument given by the user to identify the patient."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return the patient object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeException If bedNo cannot be resolved to a valid bedNo."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Patient getPatient(String keyIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (patientObservableMap.containsKey(keyIdentifier)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Patient thePatient \u003d patientObservableMap.get(keyIdentifier);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return thePatient;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The patient cannot be identified\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * PatientList of all patients whose names contain the searchTerm."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to search through the patients for."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return PatientList of matching patients."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cPatient\u003e findPatient(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cPatient\u003e filteredList \u003d new ArrayList\u003cPatient\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry\u003cString, Patient\u003e mapElement : patientObservableMap.entrySet()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Patient value \u003d mapElement.getValue();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (value.toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                filteredList.add(value);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (filteredList.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No relevant Patients\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * PatientMap of all patients whose allergies contain the searchTerm."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm String to search if any patients are allergic."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return PatientMap of matching patients."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public PatientMap findAllergies(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        PatientMap filteredList \u003d new PatientMap();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Map.Entry mapElement : patientObservableMap.entrySet()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            Patient value \u003d (Patient) mapElement.getValue();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (value.isAllergic(searchTerm)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                filteredList.addPatient(value);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                ++i;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No Patients are allergic!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return filteredList;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Search entire database for search term."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param searchTerm the term used for search"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @return array list of objects relevant to the search"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @throws DukeException if the database does not contain the information"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ArrayList\u003cDukeObject\u003e find(String searchTerm) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cDukeObject\u003e searchResult \u003d new ArrayList\u003cDukeObject\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ArrayList\u003cPatient\u003e filteredList \u003d findPatient(searchTerm);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (Patient patient : filteredList) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.add(patient);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            searchResult.addAll(patient.find(searchTerm));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (searchResult.isEmpty()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"No relevant search terms.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Reports the number of patients currently in the list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return A String reporting the current number of patients."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getPatientCountStr() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int patientCount \u003d patientObservableMap.size();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String patientCountStr \u003d patientCount + ((patientCount \u003d\u003d 1) ? \" patient\" : \" patients\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"Now you have \" + patientCountStr + \" in the map.\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public HashMap\u003cString, Patient\u003e getPatientHashMap() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        HashMap\u003cString, Patient\u003e patientHashMap \u003d new HashMap\u003cString, Patient\u003e(patientObservableMap);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return patientHashMap;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean patientExist(String keyIdentifier) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return patientObservableMap.containsKey(keyIdentifier);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ObservableMap\u003cString, Patient\u003e getPatientObservableMap() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return patientObservableMap;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 6,
      "aquohn": 5,
      "JeremyKwok": 154,
      "-": 5
    }
  },
  {
    "path": "src/main/java/duke/data/Plan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Plan extends Treatment {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String summary;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents the Plan devised by the doctor to treat a symptom or impression of a patient."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Plan object corresponds to the plan devised by a doctor to treat the signs and symptoms of a Patient,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the impression that led to that particular plan being necessary, the status of the treatment,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * a description of the status, the summary of the plan as well as an integer between 1-4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * representing the priority or significance of the plan."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the generic plan name"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the plan is tagged to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the plan"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param status the current status of the plan"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param statusArr description of the status tagged to this plan"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary the summary of what the plan entails"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Plan(String name, Impression impression, int priority, int status, String[] statusArr, String summary) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, status, statusArr);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Summary: \" + this.summary + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setSummary(String summary) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 49
    }
  },
  {
    "path": "src/main/java/duke/data/Result.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Result extends Evidence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents results of an investigation based on the treatment prescribed for a patient."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Result object corresponds to the result of an investigation into the symptoms of a Patient,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the particular impression, as well as an integer between 1-4 representing the priority"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * or significance of the result."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the result"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the impression object the result is tagged to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary a summary of the result"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the evidence"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Result(String name, Impression impression, int priority, String summary) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, summary);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Represents results of an investigation based on the treatment prescribed for a patient."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Result object corresponds to the result of an investigation into the symptoms of a Patient,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the particular impression, as well as an integer between 1-4 representing the priority"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * or significance of the result."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param name the result"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param impression the name of the impression object the result is tagged to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param summary a summary of the result"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param priority the priority level of the evidence"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected Result(String name, String impression, int priority, String summary) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority, summary);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        // todo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 52
    }
  },
  {
    "path": "src/main/java/duke/data/Treatment.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public abstract class Treatment extends DukeData {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Integer status;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String[] statusArr;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Abstraction of the actions taken to treat an impression the Doctor has about a patient."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * A Treatment object corresponds to what actions the doctor is taking to treat the symptoms of a Patient,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * the information that led to that particular treatment, the status of the treatment,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * as well as an integer between 1-4 representing the priority or significance of the evidence."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Attributes:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - name: the treatment given"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - impression: the impression object the treatment is tagged to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - status: the current status of the treatment"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - statusArr: description of the status tagged to this treatment"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * - priority: the priority level of the treatment"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Treatment(String name, Impression impression, int priority, int status, String[] statusArr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(name, impression, priority);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.statusArr \u003d statusArr;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer updatePriority(Integer priorityVal) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (priorityVal \u003e\u003d 0 \u0026\u0026 priorityVal \u003c 5) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            super.setPriority(priorityVal);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return super.getPriority();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The priority must be within 0 to 4!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Updates status of the observation, i.e. the stage of completion"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * @param int the integer value of the status"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void updateStatus(int statusIdx, String[] statusArr) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        setStatus(statusIdx);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        setStatusArr(statusArr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString \u003d \"Status: \" + Integer.toString(this.status) + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String joinedStatus \u003d String.join(\" \", this.statusArr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        informationString +\u003d \"Status Description: \" + joinedStatus + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return super.toString() + informationString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toReportString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String informationString;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString \u003d \"Status of treatment: \" + Integer.toString(this.status) + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String joinedStatus \u003d String.join(\" \", this.statusArr);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        informationString +\u003d \"Status Description: \" + joinedStatus + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return informationString;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setStatus(Integer status) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Integer getStatus() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String[] getStatusArr() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return statusArr;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void setStatusArr(String[] statusArr) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.statusArr \u003d statusArr;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 1,
      "JeremyKwok": 70,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeHelpException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DukeHelpException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public DukeHelpException(String msg, Command command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(msg + System.lineSeparator() + System.lineSeparator() + command.getHelp());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 10
    }
  },
  {
    "path": "src/main/java/duke/ui/AutoCompleteTextField.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.geometry.Side;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ContextMenu;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.CustomMenuItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.SortedSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * TextField with an autocomplete feature."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class AutoCompleteTextField extends TextField {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final SortedSet\u003cString\u003e entries;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ContextMenu menu;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a new textfield with autocomplete."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * TODO: Populate entries in constructor for the full menu."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public AutoCompleteTextField() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        entries \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        menu \u003d new ContextMenu();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // Listen to changes in textfield"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (getText().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                menu.hide();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                List\u003cString\u003e menuEntries \u003d new ArrayList\u003c\u003e(entries.subSet(getText(), getText() + Character.MAX_VALUE));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (entries.size() \u003e 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    updateMenu(menuEntries);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    // temporary workaround for focus"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.hide();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.show(AutoCompleteTextField.this, Side.BOTTOM, 0, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    menu.hide();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // Listen to changes in focus"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        focusedProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            menu.hide();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Update the entries of the context menu."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param menuEntries Entries for the context menu."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void updateMenu(List\u003cString\u003e menuEntries) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        int maxMenuSize \u003d Math.min(menuEntries.size(), 15);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        menu.getItems().clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (int i \u003d 0; i \u003c maxMenuSize; ++i) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            final String entry \u003d menuEntries.get(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            CustomMenuItem item \u003d new CustomMenuItem(new Label(entry), true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            item.setOnAction(actionEvent -\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                setText(entry);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                positionCaret(AutoCompleteTextField.this.getText().length());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                menu.hide();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            menu.getItems().add(item);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 76
    }
  },
  {
    "path": "src/main/java/duke/ui/CommandWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Executor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI element designed for the user to interact with the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * It has 3 main tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 1. Displays and reads user\u0027s input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 2. Parses VALID user\u0027s input into a defined command and displays the corresponding result."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * 3. Displays the appropriate error message for INVALID user\u0027s input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "class CommandWindow extends InputHistoryWindow {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"CommandWindow.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_GREET \u003d \"Hello! I\u0027m Dr. Duke.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_QUESTION \u003d \"What can I do for you today?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox messageContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Executor executor;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the command window of the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param executor Executor object responsible for executing user commands."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    CommandWindow(Executor executor, Parser parser) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.executor \u003d executor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        scrollPane.vvalueProperty().bind(messageContainer.heightProperty());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        printWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Handles the event where the user clicks on {@code sendButton} or the user presses \u0027Enter\" after he/she"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * has finished typing the command in {@code inputTextField}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void handleAction() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String input \u003d inputTextField.getText().trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        input \u003d input.replaceAll(\"\\t\", \"    \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            storeInput(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                writeHistory();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            } catch (DukeException excp) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                printError(excp);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            messageContainer.getChildren().add(MessageBox.getUserMessage(input).getRoot());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                executor.execute(parseCommand(input));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                printError(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            inputTextField.clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Uses the Parser to retrieve the requested command, which will be loaded with parameters"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * extracted from the user\u0027s input arguments."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param input Input string to be parsed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return The command specified by the user, with arguments parsed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the parser fails to find a matching command or the arguments do not meet the command\u0027s"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       requirements."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Command parseCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return parser.parse(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void print(String message) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageContainer.getChildren().add(MessageBox.getDukeMessage(message).getRoot());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void printWelcome() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        String welcome \u003d MESSAGE_WELCOME_GREET + System.lineSeparator() + MESSAGE_WELCOME_QUESTION;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        print(welcome);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints error message from an exception."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void printError(DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        print(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 107,
      "aquohn": 10
    }
  },
  {
    "path": "src/main/java/duke/ui/Context.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Enum defining the types of contexts that Dr. Duke can take on."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public enum Context {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    HOME,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    PATIENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    TREATMENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    EVIDENCE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    INVESTIGATION"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/HomeWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXMasonryPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.PatientMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.MapChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI window for the Home context."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class HomeWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"HomeWindow.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXMasonryPane patientListPanel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientMap patientMap;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private CommandWindow commandWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the Home UI window."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param patientMap    PatientMap object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param commandWindow CommandWindow object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    HomeWindow(PatientMap patientMap, CommandWindow commandWindow) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.patientMap \u003d patientMap;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.commandWindow \u003d commandWindow;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initialisePatientList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        attachPatientListListener();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        JFXScrollPane.smoothScrolling(scrollPane);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Initialises {@code patientListPanel}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void initialisePatientList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Map.Entry\u003cString, Patient\u003e pair : patientMap.getPatientObservableMap().entrySet()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            patientListPanel.getChildren().add(new PatientCard(pair.getValue()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Attaches a listener to the patient map."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * This listener updates the {@code patientListPanel} whenever the patient map is updated."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void attachPatientListListener() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patientMap.getPatientObservableMap().addListener((MapChangeListener\u003cString, Patient\u003e) change -\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (change.wasAdded()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                commandWindow.print(\"Patient added.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                patientListPanel.getChildren().add(new PatientCard(change.getValueAdded()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else if (change.wasRemoved()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                commandWindow.print(\"Patient discharged. A discharge report have been created.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                patientListPanel.getChildren().remove(new PatientCard(change.getValueRemoved()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 70
    }
  },
  {
    "path": "src/main/java/duke/ui/ImpressionCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ImpressionCard extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"ImpressionCard.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label criticalLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label followupLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label descriptionLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Impression impression;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs an ImpressionCard object with the specified impression\u0027s details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param impression Impression object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param isPrimary If the Impression object is a primary diagnosis."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    ImpressionCard(Impression impression, boolean isPrimary) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeCore.class.getResource(\"/view/\" + FXML));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.impression \u003d impression;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(impression.getName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        criticalLabel.setText(impression.getTreatments().size() + \" critical(s)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: followupLabel"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        followupLabel.setText(\"0 follow-up(s)\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        descriptionLabel.setText(impression.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (isPrimary) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            setStyle(\"-fx-border-color:red; -fx-border-width: 3; -fx-border-style: solid;\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!(obj instanceof ImpressionCard)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ImpressionCard card \u003d (ImpressionCard) obj;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return impression.equals(card.getImpression());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Impression getImpression() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return impression;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 75
    }
  },
  {
    "path": "src/main/java/duke/ui/InputHistoryWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "abstract class InputHistoryWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected AutoCompleteTextField inputTextField;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO: A separate (inner) class for input history"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private List\u003cString\u003e inputHistory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private int historyPointer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private String currentInput \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private File historyFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Constructs the command window of the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    InputHistoryWindow(String fxmlFileName, Region root) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        super(fxmlFileName, root);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        // listen for updates to text field, and save partial input to currentInput if not viewing history"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        inputTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            if (historyPointer \u003d\u003d inputHistory.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                currentInput \u003d newValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        historyFile \u003d new File(\"data/history.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Scanner commandScanner \u003d new Scanner(historyFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            while (commandScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                inputHistory.add(commandScanner.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            historyPointer \u003d inputHistory.size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (FileNotFoundException excp) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            historyPointer \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Updates the text field with the previous input in {@code inputHistory},"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * if there exists a previous input in {@code inputHistory}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void navigateToPreviousInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (historyPointer \u003e 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            --historyPointer;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            setText(inputHistory.get(historyPointer));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Updates the text field with the next input in {@code inputHistory},"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * if there exists a next input in {@code inputHistory}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void navigateToNextInput() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (historyPointer \u003c inputHistory.size() - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ++historyPointer;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            setText(inputHistory.get(historyPointer));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } else if (historyPointer \u003d\u003d inputHistory.size() - 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            ++historyPointer;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            setText(currentInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } //ignore if already viewing current input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Sets {@code inputTextField} with {@code text} and"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * positions the caret to the end of the {@code text}."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * @param text Text to be set in the input text field of the command window."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void setText(String text) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        inputTextField.setText(text);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        inputTextField.positionCaret(inputTextField.getText().length());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Handles key press event, {@code keyEvent}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private void handleKeyPress(KeyEvent keyEvent) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        switch (keyEvent.getCode()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case PAGE_UP:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            navigateToPreviousInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        case PAGE_DOWN:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            keyEvent.consume();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            navigateToNextInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void storeInput(String input) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (historyPointer !\u003d inputHistory.size() - 1 || (historyPointer \u003d\u003d inputHistory.size() - 1"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                \u0026\u0026 !input.equals(inputHistory.get(historyPointer)))) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            inputHistory.add(input);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        historyPointer \u003d inputHistory.size();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        currentInput \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected void writeHistory() throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            FileWriter cmdFileWr \u003d new FileWriter(historyFile);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            StringBuilder cmdStrBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            for (String input : inputHistory) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                cmdStrBuilder.append(input).append(System.lineSeparator());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            cmdFileWr.write(cmdStrBuilder.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            cmdFileWr.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (IOException excp) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            throw new DukeException(\"Unable to write command history! Some data may have been lost,\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 133
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.command.Executor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.PatientMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Tab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Main UI window of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Acts as a container for child UI elements."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class MainWindow extends UiElement\u003cStage\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private AnchorPane commandWindowHolder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TabPane contextWindowHolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private AnchorPane homeWindowHolder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private UiContext uiContext;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PatientMap patientMap;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Executor executor;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private CommandWindow commandWindow;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Tab patientTab;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the main UI window to house child UI elements."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage of the application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core         Core of Dr. Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    MainWindow(Stage primaryStage, DukeCore core) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.uiContext \u003d core.uiContext;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.patientMap \u003d core.patientMap;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.executor \u003d new Executor(core);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.parser \u003d new Parser(core.uiContext);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        placeChildUiElements();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Places child UI elements in the main UI window."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void placeChildUiElements() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        commandWindow \u003d new CommandWindow(executor, parser);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandWindowHolder.getChildren().add(commandWindow.getRoot());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        HomeWindow homeWindow \u003d new HomeWindow(patientMap, commandWindow);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Tab homeTab \u003d new Tab(\"Home\", homeWindow.getRoot());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        contextWindowHolder.getTabs().add(homeTab);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patientTab \u003d new Tab(\"Patient\", new PatientWindow(null).getRoot());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        contextWindowHolder.getTabs().add(patientTab);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Add contexts here."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        uiContext.addListener(evt -\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            switch ((Context) evt.getNewValue()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case HOME:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                contextWindowHolder.getSelectionModel().select(homeTab);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case PATIENT:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                contextWindowHolder.getTabs().remove(patientTab);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                Patient patient \u003d (Patient) uiContext.getObject();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                patientTab \u003d new Tab(\"Patient\", new PatientWindow(patient).getRoot());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                contextWindowHolder.getTabs().add(1, patientTab);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                contextWindowHolder.getSelectionModel().select(patientTab);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                print(\"Accessing details of Bed \" + patient.getBedNo());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Shows the main UI window."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void print(String message) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        commandWindow.print(message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 102,
      "aquohn": 3,
      "JeremyKwok": 1
    }
  },
  {
    "path": "src/main/java/duke/ui/MessageBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class MessageBox extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"MessageBox.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image userAvatar \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image dukeAvatar \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private HBox container;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Circle avatar;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private VBox messageHolder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Text message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a new MessageBox object to be displayed in the command window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private MessageBox(String text, Image image) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        message.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        message.wrappingWidthProperty().bind(messageHolder.prefWidthProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        avatar.setFill(new ImagePattern(image));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates a message box for the user\u0027s input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static MessageBox getUserMessage(String text) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        MessageBox messageBox \u003d new MessageBox(text, userAvatar);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Fix UI so that user\u0027s input is not \"flipped\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageBox.flip();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return messageBox;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates a new message box for Duke\u0027s response."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static MessageBox getDukeMessage(String text) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        MessageBox messageBox \u003d new MessageBox(text, dukeAvatar);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        messageBox.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return messageBox;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Flips the message box such that the {@code avatar} is on the left and the {@code message} is on the right."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(container.getChildren());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        container.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        container.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 72
    }
  },
  {
    "path": "src/main/java/duke/ui/PatientCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * An UI element that displays certain information of a {@code Patient}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * TODO: Extend from UiElement."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class PatientCard extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"PatientCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label bedLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label diagnosisLabel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label issueLabel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final Patient patient;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a PatientCard object with the specified patient\u0027s details."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param patient Patient object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    PatientCard(Patient patient) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeCore.class.getResource(\"/view/\" + FXML));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.patient \u003d patient;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        initialisePatientCard();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Fills up the Patient Card with the {@code patient} details."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void initialisePatientCard() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        nameLabel.setText(patient.getName());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        bedLabel.setText(\"Bed \" + patient.getBedNo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (patient.getPriDiagnosis() !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            diagnosisLabel.setText(patient.getPriDiagnosis().getName());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            diagnosisLabel.setText(\"No primary diagnosis\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Fetch patient\u0027s issues"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        issueLabel.setText(\"No issues\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (!(obj instanceof PatientCard)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        PatientCard card \u003d (PatientCard) obj;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return patient.equals(card.getPatient());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Patient getPatient() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return patient;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 86,
      "aquohn": 1
    }
  },
  {
    "path": "src/main/java/duke/ui/PatientWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import com.jfoenix.controls.JFXListView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.collections.MapChangeListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI window for the Patient context."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class PatientWindow extends UiElement\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML \u003d \"PatientWindow.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label age;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label height;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label weight;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label bed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label phone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Label history;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cLabel\u003e allergiesListView;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private JFXListView\u003cImpressionCard\u003e impressionsListPanel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the patient UI window."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    PatientWindow(Patient patient) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(FXML, null);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        setPatient(patient);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void setPatient(Patient patient) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (patient \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: Set default values if NULL."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        name.setText(String.valueOf(patient.getName()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        bed.setText(String.valueOf(patient.getBedNo()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        age.setText(String.valueOf(patient.getAge()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        height.setText(String.valueOf(patient.getHeight()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        weight.setText(String.valueOf(patient.getWeight()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        phone.setText(String.valueOf(patient.getNumber()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        address.setText(String.valueOf(patient.getAddress()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        history.setText(String.valueOf(patient.getHistory()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (String allergy : patient.getAllergies().split(\",\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Label label \u003d new Label(allergy);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            allergiesListView.getItems().add(label);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Map.Entry\u003cString, Impression\u003e pair : patient.getImpressionsObservableMap().entrySet()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            Impression primaryImpression \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (pair.getValue().equals(patient.getPriDiagnosis())) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                primaryImpression \u003d pair.getValue();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionsListPanel.getItems().add(new ImpressionCard(pair.getValue(), false));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (primaryImpression !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionsListPanel.getItems().add(0, new ImpressionCard(primaryImpression, true));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patient.getImpressionsObservableMap().addListener((MapChangeListener\u003cString, Impression\u003e) change -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (change.wasAdded()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (change.getValueAdded().equals(patient.getPriDiagnosis())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    impressionsListPanel.getItems().add(0, new ImpressionCard(change.getValueAdded(), true));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    impressionsListPanel.getItems().add(new ImpressionCard(change.getValueAdded(), false));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else if (change.wasRemoved()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionsListPanel.getItems().remove(new ImpressionCard(change.getValueRemoved(), false));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        patient.addListener(evt -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String property \u003d evt.getPropertyName();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (\"Primary Diagnosis\".equals(property)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (evt.getOldValue() !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    impressionsListPanel.getItems().remove(new ImpressionCard((Impression) evt.getOldValue(), false));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    impressionsListPanel.getItems().add(0, new ImpressionCard((Impression) evt.getOldValue(), false));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionsListPanel.getItems().remove(new ImpressionCard((Impression) evt.getNewValue(), true));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                impressionsListPanel.getItems().add(0, new ImpressionCard((Impression) evt.getNewValue(), true));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else if (\"History\".equals(property)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                history.setText((String) evt.getNewValue());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 110
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Application Programming Interface (API) of the UI component of the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Starts the UI (and the JavaFX application)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Stage created by the JavaFX system when the application first starts up."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Prints message on the command window."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param message Output message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void print(String message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/UiContext.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.data.DukeObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.beans.PropertyChangeSupport;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * UI context of the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class UiContext {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeObject object;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Context context;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private PropertyChangeSupport pcs;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the UI context with HOME as the default value."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiContext() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.context \u003d Context.HOME;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.object \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.pcs \u003d new PropertyChangeSupport(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Adds a listener to listen for changes in {@code context}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param pcl PropertyChangeListener object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void addListener(PropertyChangeListener pcl) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.addPropertyChangeListener(pcl);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set context for the application. An associated DukeObject should be provided as well."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * For example, from Home -\u003e Patient, a Patient object should be passed in."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param newContext New context"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param object     DukeObject associated with the new object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void setContext(Context newContext, DukeObject object) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Context oldContext \u003d this.context;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.context \u003d newContext;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.object \u003d object;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        pcs.firePropertyChange(\"context\", oldContext, this.context);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public Context getContext() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return context;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeObject getObject() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return object;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 52,
      "aquohn": 3
    }
  },
  {
    "path": "src/main/java/duke/ui/UiElement.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a distinct UI element in the application, e.g. windows, panels, dialogs, etc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * @param \u003cT\u003e Root node\u0027s type."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "abstract class UiElement\u003cT\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs a UiElement with the specified FXML file name and root object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * The FXML file MUST not specify the {@code fx:controller} attribute as it will be specified"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * in {@link #loadFxmlFile(URL, T)}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    UiElement(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        loadFxmlFile(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param fxmlFileName Name of FXML file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return FXML file URL for the FXML file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        URL fxmlFileUrl \u003d DukeCore.class.getResource(FXML_FILE_FOLDER + fxmlFileName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Loads the object hierarchy from a FXML file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param url  Location of the FXML file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param root Root of the object hierarchy."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void loadFxmlFile(URL url, T root) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setLocation(url);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Returns the root element of this UiElement."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    T getRoot() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 69
    }
  },
  {
    "path": "src/main/java/duke/ui/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Manager of the UI component of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final Image ICON_APPLICATION \u003d new Image(DukeCore.class.getResourceAsStream(\"/images/icon.png\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private DukeCore core;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Constructs the UIManager."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param core Core of Dr. Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public UiManager(DukeCore core) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // TODO: We do not need the entire Duke\u0027s core in the Ui component."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.core \u003d core;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        setApplicationIcon(primaryStage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            showMainWindow(primaryStage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            showErrorDialogAndShutdown(\"Fatal error encountered on application startup\", e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String displayMessage \u003d message.replace(\"\\t\", \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        mainWindow.print(displayMessage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Set application\u0027s icon."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage for the application."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void setApplicationIcon(Stage primaryStage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        primaryStage.getIcons().add(ICON_APPLICATION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Show main UI window of the application."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param primaryStage Main stage for the application."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void showMainWindow(Stage primaryStage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        mainWindow \u003d new MainWindow(primaryStage, core);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        mainWindow.show();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param title Title of error dialog."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param error Error."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void showErrorDialogAndShutdown(String title, Throwable error) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        final Alert errorAlert \u003d new Alert(Alert.AlertType.ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.initOwner(mainWindow.getPrimaryStage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setTitle(title);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setHeaderText(error.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.setContentText(error.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        errorAlert.showAndWait();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 86,
      "JeremyKwok": 2
    }
  },
  {
    "path": "src/main/resources/view/CommandWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import duke.ui.AutoCompleteTextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cAutoCompleteTextField fx:id\u003d\"inputTextField\" layoutY\u003d\"558.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           onKeyPressed\u003d\"#handleKeyPress\" onAction\u003d\"#handleAction\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAction\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.4\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cVBox fx:id\u003d\"messageContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 18
    }
  },
  {
    "path": "src/main/resources/view/HomeWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXMasonryPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cJFXMasonryPane fx:id\u003d\"patientListPanel\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 16
    }
  },
  {
    "path": "src/main/resources/view/ImpressionCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"cardView\" maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         prefWidth\u003d\"168.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"11.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_name.png\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"46.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_critical.png\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"84.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/impression_follow-up.png\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"121.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/details.png\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"criticalLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"52.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"94.0\" text\u003d\"Critical\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"followupLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"91.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"94.0\" text\u003d\"Follow-up\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"descriptionLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"126.0\" prefWidth\u003d\"94.0\" text\u003d\"Description\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"16.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"94.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 65
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"600\" minWidth\u003d\"1000\" title\u003d\"Dr. Duke\" type\u003d\"javafx.stage.Stage\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         resizable\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImage url\u003d\"@/images/icon.png\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cBorderPane prefHeight\u003d\"600.0\" prefWidth\u003d\"1073.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cright\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cAnchorPane fx:id\u003d\"commandWindowHolder\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                BorderPane.alignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/right\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003ccenter\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cTabPane fx:id\u003d\"contextWindowHolder\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                             tabClosingPolicy\u003d\"UNAVAILABLE\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/center\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 26,
      "-": 4
    }
  },
  {
    "path": "src/main/resources/view/MessageBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cHBox fx:id\u003d\"container\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cVBox fx:id\u003d\"messageHolder\" alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"44.0\" prefWidth\u003d\"314.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"3.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cText fx:id\u003d\"message\" text\u003d\"Hello World!\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cCircle fx:id\u003d\"avatar\" fill\u003d\"WHITE\" radius\u003d\"22.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Circle\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 6,
      "-": 19
    }
  },
  {
    "path": "src/main/resources/view/PatientCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"cardView\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         prefHeight\u003d\"150.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"2.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/patient.png\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"10.0\" layoutY\u003d\"37.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/ward.png\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"75.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/aid.png\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"9.0\" layoutY\u003d\"112.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImage url\u003d\"@../images/issues.png\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"nameLabel\" layoutX\u003d\"52.0\" layoutY\u003d\"3.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"137.0\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont name\u003d\"System Bold\" size\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"bedLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"43.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"138.0\" text\u003d\"Bed\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"diagnosisLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"82.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"138.0\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "               text\u003d\"Primary Diagnosis\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cLabel fx:id\u003d\"issueLabel\" layoutX\u003d\"53.0\" layoutY\u003d\"118.0\" prefHeight\u003d\"20.0\" prefWidth\u003d\"138.0\" text\u003d\"Issues\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 62
    }
  },
  {
    "path": "src/main/resources/view/PatientWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"600.0\" prefWidth\u003d\"673.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"impressionsListPanel\" layoutX\u003d\"10.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/impressions.png\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"6.0\" text\u003d\"IMPRESSIONS\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView layoutX\u003d\"231.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"231.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"17.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/issues.png\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"61.0\" layoutY\u003d\"6.0\" text\u003d\"ISSUES\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView layoutX\u003d\"452.0\" layoutY\u003d\"297.0\" prefHeight\u003d\"260.0\" prefWidth\u003d\"210.0\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"452.0\" layoutY\u003d\"261.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"14.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/follow-ups.png\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"58.0\" layoutY\u003d\"5.0\" text\u003d\"FOLLOW-UPS\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"4.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" layoutX\u003d\"14.0\" layoutY\u003d\"1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/details.png\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"PARTICULARS\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"459.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"210.0\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/heart.png\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"MEDICAL HISTORY\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"9.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"235.0\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"291.0\" prefWidth\u003d\"217.0\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"4.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/patient.png\"/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"name\" layoutX\u003d\"49.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"88.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/height.png\"/\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"131.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/weight.png\"/\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"44.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/age.png\"/\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"age\" layoutX\u003d\"48.0\" layoutY\u003d\"48.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\" text\u003d\"Age\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"weight\" layoutX\u003d\"48.0\" layoutY\u003d\"135.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Weight\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"height\" layoutX\u003d\"48.0\" layoutY\u003d\"92.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Height\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"171.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/ward.png\"/\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"bed\" layoutX\u003d\"49.0\" layoutY\u003d\"175.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Bed\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"213.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/phone.png\"/\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"phone\" layoutX\u003d\"49.0\" layoutY\u003d\"217.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Phone\"\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"7.0\" layoutY\u003d\"258.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                   preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cImage url\u003d\"@../images/address.png\"/\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"address\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"49.0\" layoutY\u003d\"261.0\" prefWidth\u003d\"165.0\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Address\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cAnchorPane layoutX\u003d\"253.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"6.0\" layoutY\u003d\"-1.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                           preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cimage\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cImage url\u003d\"@../images/allergies.png\"/\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/image\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cLabel layoutX\u003d\"46.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"134.0\" text\u003d\"ALLERGIES\"\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cScrollPane layoutX\u003d\"461.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"170.0\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"170.0\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        \u003cLabel fx:id\u003d\"history\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\" maxWidth\u003d\"170.0\" prefWidth\u003d\"170.0\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               text\u003d\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ut turpis sit amet justo dapibus blandit vel a augue. Suspendisse placerat dapibus porta. Donec finibus augue euismod vestibulum iaculis. Maecenas vitae suscipit nisi. Fusce quis ante quis leo pellentesque mattis at id ante. Ut aliquam, sem ac aliquam pharetra, mi leo eleifend magna, nec gravida nunc magna quis urna. Nunc vel massa porta, consequat mauris ac, lacinia mauris. Nulla eget laoreet erat, in pellentesque lectus. Nunc purus magna, bibendum ut semper in, sollicitudin ut lectus. Ut sed est sem. Nullam dictum sagittis varius. Vivamus sed justo vitae lectus finibus ultrices vitae id erat. Nunc ornare faucibus leo, rhoncus viverra nisl malesuada a. Nunc vitae nisl quam.\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                               wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        \u003cJFXListView fx:id\u003d\"allergiesListView\" layoutX\u003d\"253.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"218.0\" prefWidth\u003d\"200.0\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                     style\u003d\"-fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;\"/\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 217
    }
  },
  {
    "path": "src/test/java/CommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.PatientMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Abstract test for testing command execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class CommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected static DukeCore core;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected static ByteArrayOutputStream testOut \u003d new ByteArrayOutputStream(); //stores printed output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected static PrintStream testPrint \u003d new PrintStream(testOut); //System.out replacement, prints to testOut"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected static final String testFilePath \u003d \"data\" + File.separator + \"test.json\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "     * Create data directory if necessary and use a test task file to create test DukeCore, with output directed to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * testOut."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static void setupCore() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            core \u003d new DukeCore();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.patientMap \u003d new PatientMap();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.storage \u003d new GsonStorage(testFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            core.storage.writeJsonFile(core.patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeFatalException excp) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            fail(\"Could not setup storage for testing!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reset taskList and testOut, and flush the testPrint stream after each test is done with them."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void clearPatientMap() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.patientMap \u003d new PatientMap();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        testPrint.flush();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        testOut.reset();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes testing data after test is completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void clearTestData() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        File testData \u003d new File(testFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!testData.delete()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            fail(\"Unable to delete test data file!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 3,
      "aquohn": 16,
      "-": 41
    }
  },
  {
    "path": "src/test/java/GsonStorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.GsonStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Impression;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.data.PatientMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeFatalException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * JUnit class testing the class GsonStorage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class GsonStorageTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * A PatientMap object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public PatientMap patientMap;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * A GsonStorage object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public GsonStorage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * a dummy patient used for testing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Patient dummy1 \u003d new Patient(\"dummy1\", \"A100\", \"nuts\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * a dummy patient used for testing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Patient dummy2 \u003d new Patient(\"dummy2\", \"A200\", null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * a dummy patient used for testing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Patient dummy3 \u003d new Patient(\"dummy3\", \"A300\", \"cats\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * a String containing the correct JSON representation of dummy1, dummy2 and dummy 3."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String expected \u003d \"[\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"A300\\\",\\\"allergies\\\":\\\"cats\\\",\\\"impressions\\\":{},\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            //+ \"\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\\\"number\\\":0,\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"\\\"name\\\":\\\"dummy3\\\"},\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"A100\\\",\\\"allergies\\\":\\\"nuts\\\",\\\"impressions\\\":{},\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            //+ \"\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\\\"number\\\":0,\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"\\\"name\\\":\\\"dummy1\\\"},\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"{\\\"bedNo\\\":\\\"A200\\\",\\\"impressions\\\":{},\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            //+ \"\\\"height\\\":0,\\\"weight\\\":0,\\\"age\\\":0,\\\"number\\\":0,\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            + \"\\\"name\\\":\\\"dummy2\\\"}]\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * The constructor ig GsonStorateTest. Used to initialise the storage attribute."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also resets all storage data."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    GsonStorageTest() throws DukeFatalException, IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new GsonStorage(\"data/patients.json\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates a patient object and assign values to all of its attributes - used to test if the nesting works."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created patient object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Patient createComplexPatient() throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Patient complexPatient \u003d new Patient(\"Complexia\", \"C100\", \"cookies\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Impression imp \u003d complexPatient.addNewImpression(new Impression(\"Afraid\", \"bit me\", complexPatient));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        complexPatient.setPriDiagnosis(imp.getName());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setAllergies(\"dogs\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setHeight(124);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setWeight(250);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setAge(84);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setNumber(6582447);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setAddress(\"Broadway 12a\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        complexPatient.setHistory(\"Operated the left arm in 2014 and have been feeling weak ever since\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return complexPatient;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Compares all the attributes of two patients and returns true if they all are the same, otherwise it returns"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * false."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A boolean stating if the storage function is working properly or not."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private boolean identical(Patient patient1, Patient patient2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (!(patient1.getBedNo().equals(patient2.getBedNo()))) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAllergies(), patient2.getAllergies()))) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getHeight(), patient2.getHeight()))) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getWeight(), patient2.getWeight()))) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAge(), patient2.getAge()))) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getNumber(), patient2.getNumber()))) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else if (!(java.util.Objects.equals(patient1.getAddress(), patient2.getAddress()))) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return java.util.Objects.equals(patient1.getHistory(), patient2.getHistory());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Tests if patients are transformed from the json file to the hash map properly."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public void loadPatientHashMapTest() throws DukeException, IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(storage.getFilePath());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fileWriter.write(expected);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d new PatientMap(storage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(identical(patientMap.getPatient(\"A100\"), dummy1));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(identical(patientMap.getPatient(\"A200\"), dummy2));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(identical(patientMap.getPatient(\"A300\"), dummy3));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the Json representation of a dummy patient."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Then recreates the patient objects based on what is in the json file."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * When the recreation is done it checks if the first patients are identical to the new ones."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void identicalDummyPatient() throws IOException, DukeException, DukeFatalException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap.addPatient(dummy1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        storage.writeJsonFile(patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d new PatientMap(storage);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Patient dummyPatientRecreated \u003d patientMap.getPatient(dummy1.getBedNo());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        boolean equals \u003d identical(dummy1, dummyPatientRecreated);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(equals);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Creates the Json representation of a complex patient"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Then recreates the patient objects based on what is in the json file."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * When the recreation is done it checks if the first patients are identical to the new ones."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void identicalComplexPatient() throws IOException, DukeException, DukeFatalException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Patient complexPatient \u003d createComplexPatient();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap.addPatient(complexPatient);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        storage.writeJsonFile(patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        storage.loadPatientHashMap();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        Patient complexPatientRecreated \u003d patientMap.getPatient(\"C100\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        boolean equals \u003d identical(complexPatient, complexPatientRecreated);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(equals);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Tests if patients are transformed from the hash map to the json file properly."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void writeJsonFileTest() throws DukeFatalException, IOException, DukeFatalException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap \u003d storage.resetAllData();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap.addPatient(dummy1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap.addPatient(dummy2);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        patientMap.addPatient(dummy3);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        storage.writeJsonFile(patientMap.getPatientHashMap());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        String json \u003d Files.readString(Paths.get(storage.getFilePath()), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(expected);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(json);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(expected, json);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 90,
      "aquohn": 3,
      "-": 64,
      "JeremyKwok": 24
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.HomeNewCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import duke.ui.UiContext;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import mocks.DoctorCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import mocks.TestCommands;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO move checks for individual commands to CommandTest"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // TODO check if exceptions are thrown for incorrect input formats"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Parser uut \u003d new Parser(new UiContext(), new TestCommands());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommands_validHomeCommands_correctCommandsReturned() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Parser actualParser \u003d new Parser(new UiContext());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(ByeCommand.class, actualParser.parse(\"bye\").getClass());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(actualParser.parse(\"new -n Hello -b 100 -a world\").getClass(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                    HomeNewCommand.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting valid commands!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommands_fullSwitchNames_argumentsExtracted() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Command testCmd \u003d uut.parse(\"doctor Hello -switch World -optswitch Optional\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            DoctorCommand docCmd \u003d (DoctorCommand) testCmd;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Hello\", docCmd.getArg());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"World\", docCmd.getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Optional\", docCmd.getSwitchVal(\"optswitch\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting valid test command!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommands_differentOrder_argumentsExtracted() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Command testCmd \u003d uut.parse(\"doctor -switch World -optswitch Optional Hello\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            DoctorCommand docCmd \u003d (DoctorCommand) testCmd;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Hello\", docCmd.getArg());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"World\", docCmd.getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Optional\", docCmd.getSwitchVal(\"optswitch\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown while extracting arguments in different order!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommands_optionalOmitted_argumentsExtracted() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Command testCmd \u003d uut.parse(\"doctor -switch World Hello\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            DoctorCommand docCmd \u003d (DoctorCommand) testCmd;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Hello\", docCmd.getArg());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"World\", docCmd.getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when missing optional argument!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void parseCommands_stringsAndEscapes_argumentsExtracted() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            Command testCmd \u003d uut.parse(\"doctor \\\"Hello\\\\\\\\World\\\" -switch \\\"double \\\\\\\" quote\\\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            DoctorCommand docCmd \u003d (DoctorCommand) testCmd;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"Hello\\\\World\", docCmd.getArg());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            assertEquals(\"double \\\" quote\", docCmd.getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException excp) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            fail(\"Exception thrown when parsing strings and escapes!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 61,
      "-": 18,
      "JeremyKwok": 3
    }
  },
  {
    "path": "src/test/java/mocks/DoctorCommand.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.DukeCore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": " * Stub Command for testing new Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DoctorCommand extends ArgCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public void execute(DukeCore core) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        core.ui.print(\"Argument: \" + getArg() + System.lineSeparator() + \"Switch: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "                + getSwitchVal(\"switch\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    protected ArgSpec getSpec() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return DoctorSpec.getSpec();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    // expose methods for testing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getArg() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return super.getArg();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public String getSwitchVal(String switchName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return super.getSwitchVal(switchName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 37
    }
  },
  {
    "path": "src/test/java/mocks/DoctorSpec.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgLevel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.ArgSpec;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Switch;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class DoctorSpec extends ArgSpec {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private static final DoctorSpec spec \u003d new DoctorSpec();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    public static DoctorSpec getSpec() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return spec;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    private DoctorSpec() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        emptyArgMsg \u003d \"You didn\u0027t tell me what to do!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        cmdArgLevel \u003d ArgLevel.REQUIRED;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        initSwitches("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aquohn"
        },
        "content": "               new Switch(\"switch\", String.class, false, ArgLevel.REQUIRED, \"s\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aquohn"
        },
        "content": "               new Switch(\"optswitch\", String.class, true, ArgLevel.REQUIRED, \"o\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aquohn": 23
    }
  },
  {
    "path": "src/test/java/mocks/TestCommands.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aquohn"
        },
        "content": "package mocks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aquohn"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import duke.ui.Context;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aquohn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aquohn"
        },
        "content": "public class TestCommands extends Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Command getCommand(String cmdStr, Context context) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        if (\"doctor\".equals(cmdStr)) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aquohn"
        },
        "content": "            return new DoctorCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aquohn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aquohn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aquohn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 2,
      "aquohn": 13
    }
  }
]
