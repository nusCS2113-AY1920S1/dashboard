[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    archiveVersion \u003d \"0.1.2\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "version \u00270.1.2\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sinteary"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sinteary"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 22,
      "Lucria": 3,
      "-": 39,
      "Dkenobi": 5
    }
  },
  {
    "path": "src/main/java/UILauncher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import views.ui.Main;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class UILauncher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 11
    }
  },
  {
    "path": "src/main/java/controllers/AssignmentControllerUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.data.IProject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import views.CLIView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public class AssignmentControllerUtil {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Parses the input by the user to allow members to be assigned or removed. Checks if task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * exists, and if member index numbers are correct."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param projectToManage Project which user is managing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param details Array of strings containing details of task assignment or unassignment."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param consoleView The main user interface."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public static void manageAssignment(IProject projectToManage, String[] details,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        CLIView consoleView) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(details[0].substring(2).trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        if (taskIndex \u003e projectToManage.getNumOfTasks() || taskIndex \u003c\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            consoleView.consolePrint(\"The task you wish to assign does not exist!\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                \"Please check the index number of the task and try again.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            task \u003d projectToManage.getTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            HashSet\u003cInteger\u003e assignedIndexes \u003d task.getAssignedIndexes(); //existing assignments"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            ArrayList\u003cInteger\u003e assign \u003d new ArrayList\u003c\u003e(); //List of members to be assigned task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            ArrayList\u003cInteger\u003e unassign \u003d new ArrayList\u003c\u003e();//List of members to be unassigned task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            boolean add \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            boolean remove \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            for (String s : details) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                if (\"to/\".equals(s)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    add \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    remove \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                } else if (\"rm/\".equals(s)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    add \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    remove \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                } else if (!s.contains(\"i/\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    int indexNumber \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    if (projectToManage.memberIndexExists(indexNumber)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        if (add) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            if (assignedIndexes.contains(indexNumber)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                consoleView.consolePrint(\"Member with index \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                    + indexNumber"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                    + \" has already been assigned this task!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                assign.add(indexNumber);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        if (remove) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            if (!assignedIndexes.contains(indexNumber)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                consoleView.consolePrint(\"Cannot unassign member with index \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                    + indexNumber"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                    + \" because they are not assigned the task yet!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                unassign.add(indexNumber);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        consoleView.consolePrint(\"Member with index number \" + indexNumber + \" does not exist!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            consoleView.assignOrUnassignTask(assign, unassign, task, projectToManage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static void viewTaskAssigned(IProject projectToManage, CLIView consoleView) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        consoleView.viewAssignedTask(projectToManage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 64,
      "iamabhishek98": 3,
      "Dkenobi": 7
    }
  },
  {
    "path": "src/main/java/controllers/ConsoleInputController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import repositories.ProjectRepository;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import views.CLIView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ConsoleInputController implements IController {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private CLIView consoleView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ProjectRepository projectRepository;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ProjectInputController projectInputController;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String filePath \u003d System.getProperty(\"user.dir\") + \"/savedProjects.json\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param view : takes in a View model, in this case a command line view."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public ConsoleInputController(CLIView view) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.consoleView \u003d view;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        loadProjectsData();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.projectInputController \u003d new ProjectInputController(this.consoleView, this.projectRepository);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method that is called upon receiving commands from CLI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input : Input typed by user into CLI"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void onCommandReceived(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Scanner inputReader \u003d new Scanner(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String command \u003d inputReader.next();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleView.end();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            ArrayList\u003cProject\u003e allProjects \u003d projectRepository.getAll();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.viewAllProjects(allProjects);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        case \"create\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            // Creation of a new project with a given name and a number of numbers"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            boolean isProjectCreated \u003d projectRepository.addToRepo(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            if (!isProjectCreated) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                consoleView.consolePrint(\"Creation of Project failed. Please check parameters given!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                consoleView.consolePrint(\"Project created!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                saveProjectsData();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        case \"manage\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            if (inputReader.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                this.projectInputController.onCommandReceived(inputReader.next());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                consoleView.consolePrint(\"Please enter a project number!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            // TODO help page displaying all commands available"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            // Not implemented"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            consoleView.consolePrint(\"Invalid inputs. Please refer to User Guide or type help!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private void saveProjectsData() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Gson gson \u003d new GsonBuilder()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                .setPrettyPrinting()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                .create();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            gson.toJson(this.projectRepository, fileWriter);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (java.io.IOException err) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.consolePrint(\"savedProjects file does not exist or is not created!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private void loadProjectsData() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        try (FileReader fileReader \u003d new FileReader(filePath)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            this.projectRepository \u003d gson.fromJson(fileReader, ProjectRepository.class);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (this.projectRepository \u003d\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                this.projectRepository \u003d new ProjectRepository();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            this.projectRepository \u003d new ProjectRepository();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 36,
      "-": 38,
      "Dkenobi": 26
    }
  },
  {
    "path": "src/main/java/controllers/IController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IController {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void onCommandReceived(String input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 5
    }
  },
  {
    "path": "src/main/java/controllers/ProjectInputController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.data.IProject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import repositories.ProjectRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import util.factories.MemberFactoryUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import util.factories.TaskFactory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import views.CLIView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ProjectInputController implements IController {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private Scanner manageProjectInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private ProjectRepository projectRepository;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private CLIView consoleView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Constructor for ProjectInputController takes in a View model and a ProjectRepository."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * ProjectInputController is responsible for handling user input when user chooses to manage a project."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param consoleView The main UI of ArchDuke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param projectRepository The object holding all projects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public ProjectInputController(CLIView consoleView, ProjectRepository projectRepository) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.manageProjectInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.projectRepository \u003d projectRepository;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.consoleView \u003d consoleView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Allows the user to manage the project by branching into the project of their choice."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param input User input containing project index number (to add to project class)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void onCommandReceived(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        int projectNumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Project projectToManage \u003d projectRepository.getItem(projectNumber);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.consoleView.consolePrint(\"Now managing: \" + projectToManage.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        boolean isManagingAProject \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        while (isManagingAProject) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            if (manageProjectInput.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                String projectCommand \u003d manageProjectInput.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (projectCommand.length() \u003d\u003d 4 \u0026\u0026 (\"exit\").equals(projectCommand.substring(0, 4))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    isManagingAProject \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    consoleView.exitProject(projectToManage.getDescription());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 11 \u0026\u0026 (\"add member \").equals(projectCommand.substring(0, 11))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    String memberDetails \u003d projectCommand.substring(11);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    MemberFactoryUtil memberFactory \u003d new MemberFactoryUtil();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    if (memberFactory.memberIsCreated(memberDetails, projectToManage.getNumOfMembers())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        consoleView.addMember(projectToManage, memberFactory.getNewMember());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        consoleView.consolePrint(\"Failed to add member. Please ensure you have entered \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                                + \"at least the name of the new member.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 12 \u0026\u0026 (\"edit member \").equals(projectCommand.substring(0, 12))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    int memberIndexNumber \u003d Integer.parseInt(projectCommand.substring(12).split(\" \")[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    if (projectToManage.getNumOfMembers() \u003e\u003d memberIndexNumber) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        String updatedMemberDetails \u003d projectCommand.substring(projectCommand.indexOf(\"n/\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.editMember(projectToManage, memberIndexNumber, updatedMemberDetails);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.consolePrint(\"The member index entered is invalid.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 14 \u0026\u0026 (\"delete member \").equals(projectCommand.substring(0,14))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    int memberIndexNumber \u003d Integer.parseInt(projectCommand.substring(14).split(\" \")[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    if (projectToManage.getNumOfMembers() \u003e\u003d memberIndexNumber) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.removeMember(projectToManage, memberIndexNumber);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.consolePrint(\"The member index entered is invalid.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003d\u003d 12 \u0026\u0026 (\"view members\").equals(projectCommand)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    consoleView.viewAllMembers(projectToManage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                } else if (projectCommand.length() \u003d\u003d 12 \u0026\u0026 (\"view credits\").equals(projectCommand)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    // TODO view all credits."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    consoleView.consolePrint(\"Not implemented yet\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 9 \u0026\u0026 (\"add task \").equals(projectCommand.substring(0, 9))) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        TaskFactory taskFactory \u003d new TaskFactory();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        consoleView.addTask(projectToManage, taskFactory.createTask(projectCommand.substring(9)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    } catch (NumberFormatException | ParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        consoleView.consolePrint(\"Please enter your task format correctly\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003d\u003d 10 \u0026\u0026 (\"view tasks\").equals(projectCommand)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    consoleView.viewAllTasks(projectToManage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                } else if (projectCommand.length() \u003d\u003d 19 \u0026\u0026 (\"view assigned tasks\").equals(projectCommand)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    AssignmentControllerUtil.viewTaskAssigned(projectToManage, consoleView);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                } else if (projectCommand.length() \u003e 25"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        \u0026\u0026 (\"view task requirements i/\").equals(projectCommand.substring(0, 25))) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(projectCommand.substring(25));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    if (projectToManage.getNumOfTasks() \u003e\u003d taskIndex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        if (projectToManage.getTask(taskIndex).getTaskRequirements() \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                            consoleView.consolePrint(\"This task has no specific requirements.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                            consoleView.viewTaskRequirements(projectToManage, taskIndex);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        consoleView.consolePrint(\"The task index entered is invalid.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003d\u003d 10 \u0026\u0026 (\"edit task \").equals(projectCommand)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    System.out.println(temp2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    /*"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        Empty method"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 12 \u0026\u0026 (\"delete task \").equals(projectCommand.substring(0,12))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    int taskIndexNumber \u003d Integer.parseInt(projectCommand.substring(12).split(\" \")[0]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    if (projectToManage.getNumOfTasks() \u003e\u003d taskIndexNumber) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.removeTask(projectToManage, taskIndexNumber);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                        consoleView.consolePrint(\"The task index entered is invalid.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                } else if (projectCommand.length() \u003e\u003d 12 \u0026\u0026 (\"assign task \").equals(projectCommand.substring(0,12))) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    AssignmentControllerUtil.manageAssignment(projectToManage,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                        projectCommand.substring(12).split(\" \"), consoleView);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    consoleView.consolePrint(\"Invalid command. Try again!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                consoleView.consolePrint(\"Please enter a command.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 46,
      "iamabhishek98": 38,
      "seanlimhx": 15,
      "Lucria": 15,
      "Dkenobi": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidInputException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public InvalidInputException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        super(\"Sorry! I don\u0027t understand what you mean by: \" + error);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 8
    }
  },
  {
    "path": "src/main/java/models/data/IProject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.member.ListOfMembersInProject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IProject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    // TODO Add attributes such as Members, Tasks, Name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    ListOfMembersInProject getMembers();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    TaskList getTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    int getNumOfMembers();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    int getNumOfTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    void addMember(Member newMember);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    void editMember(int memberIndexNumber, String updatedMemberDetails);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    void removeMember(int memberIndexNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    void addTask(Task newTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    void removeTask(int taskIndexNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    boolean memberIndexExists(int indexNumber);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    Task getTask(int taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 9,
      "iamabhishek98": 6,
      "Lucria": 11,
      "Dkenobi": 7
    }
  },
  {
    "path": "src/main/java/models/data/NullProject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.member.ListOfMembersInProject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class NullProject implements IProject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ListOfMembersInProject getMembers() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public int getNumOfMembers() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(Member newMember) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        Empty method"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sinteary"
        },
        "content": "         */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void editMember(int memberIndexNumber, String updatedMemberDetails) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Empty method"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "         */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeMember(int memberIndexNumber) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Empty method"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "         */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Empty method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "         */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeTask(int taskIndexNumber) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Empty method"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "         */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public boolean memberIndexExists(int indexNumber) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 24,
      "iamabhishek98": 21,
      "Lucria": 19,
      "Dkenobi": 14
    }
  },
  {
    "path": "src/main/java/models/data/Project.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.member.ListOfMembersInProject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class Project implements IProject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ListOfMembersInProject listOfMembersInProject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Class representing a task in a project."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description The description of the project."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public Project(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMembersInProject \u003d new ListOfMembersInProject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ListOfMembersInProject getMembers() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfMembersInProject;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public int getNumOfMembers() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfMembersInProject.getNumOfMembers();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(Member newMember) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMembersInProject.addMember(newMember);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void editMember(int memberIndexNumber, String updatedMemberDetails) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMembersInProject.editMember(memberIndexNumber, updatedMemberDetails);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeMember(int memberIndexNumber) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMembersInProject.removeMember(memberIndexNumber);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskList.addTask(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeTask(int taskIndexNumber) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.taskList.removeTask(taskIndexNumber);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public boolean memberIndexExists(int indexNumber) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return (indexNumber \u003e 0 \u0026\u0026 indexNumber \u003c\u003d this.getNumOfMembers());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 23,
      "iamabhishek98": 13,
      "Lucria": 30,
      "Dkenobi": 17
    }
  },
  {
    "path": "src/main/java/models/member/IMember.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public interface IMember {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    String getDetails();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    void updateDetails(String name, String phone, String email);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    void setIndexNumber(int indexNumber);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    int getIndexNumber();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    String getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 8,
      "iamabhishek98": 5
    }
  },
  {
    "path": "src/main/java/models/member/IMemberList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public interface IMemberList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(Member newMember);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void removeMember(int memberIndex);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public ArrayList\u003cString\u003e getAllMemberDetails();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Member getMember(int i);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 13
    }
  },
  {
    "path": "src/main/java/models/member/ListOfMembersInProject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import util.ParserUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ListOfMembersInProject implements IMemberList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private ArrayList\u003cMember\u003e memberList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Class representing a list with all members and their details."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ListOfMembersInProject() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.memberList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Adds a new member to the member list of this project."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param newMember A new member to be added to the project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(Member newMember) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        newMember.setIndexNumber(this.memberList.size() + 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberList.add(newMember);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Updates the member details of an existing member using the index number of the member."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param memberIndexNumber The index number of the member whose details are to be updated."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param updatedMemberDetails The updated member details."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void editMember(int memberIndexNumber, String updatedMemberDetails) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String [] memberDetails \u003d ParserUtil.memberCreation(updatedMemberDetails);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String name \u003d memberDetails[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String phone \u003d memberDetails[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String email \u003d memberDetails[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (Member currentMember : memberList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (currentMember.getIndexNumber() \u003d\u003d memberIndexNumber) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                currentMember.updateDetails(name, phone, email);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Removes a member from the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Shifts the index numbers of all members up if required."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param memberIndex THe index number of the member to be removed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void removeMember(int memberIndex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            Implement methods to ensure that task assignments are updated,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            credits are redistributed, etc."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            1) Scroll through all tasks of this member. Remove them from the ListOfMemebersAssignedToTask."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            2) Recalculate the credits for other members in the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            3) Change task state if necessary (if only 1 member was DOING, now it is OPEN)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            4) Update index number of other members if necessary."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sinteary"
        },
        "content": "         */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberList.remove(memberIndex - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        if (memberIndex \u003c memberList.size()) { //if need to reassign index numbers after removal"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d memberList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                memberList.get(i - 1).setIndexNumber(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Returns an ArrayList with String descriptions of members details."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @return An ArrayList with String descriptions of members details."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public ArrayList\u003cString\u003e getAllMemberDetails() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        ArrayList\u003cString\u003e memberDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        for (Member member : this.memberList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            memberDetails.add(member.getDetails());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return memberDetails;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Member getMember(int i) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.memberList.get(i - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Returns the size of the current member list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @return The size of the current member list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public int getNumOfMembers() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return memberList.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 64,
      "iamabhishek98": 25,
      "Lucria": 5
    }
  },
  {
    "path": "src/main/java/models/member/ListOfMemebersAssignedToTask.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ListOfMemebersAssignedToTask implements IMemberList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private ArrayList\u003cMember\u003e memberList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ListOfMemebersAssignedToTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(Member newMember) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberList.add(newMember);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void removeMember(int memberIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberList.remove(this.memberList.get(memberIndex));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public ArrayList\u003cString\u003e getAllMemberDetails() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        ArrayList\u003cString\u003e memberDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        for (Member member : this.memberList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            memberDetails.add(member.getDetails());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return memberDetails;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Member getMember(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.memberList.get(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Returns a set of integers representing the index numbers of members who were assigned"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @return a set of index numbers of members who were assigned the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public HashSet\u003cInteger\u003e getAssignedMembersIndexNumbers() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        HashSet\u003cInteger\u003e assignedMemberIndexes \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        for (Member member : this.memberList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            assignedMemberIndexes.add(member.getIndexNumber());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return assignedMemberIndexes;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 47,
      "Lucria": 2
    }
  },
  {
    "path": "src/main/java/models/member/ListOfTasksAssignedToMember.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ListOfTasksAssignedToMember {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Represents a list of tasks which are assigned to a member in a team."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private TaskList memberTaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addAssignedTask(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.memberTaskList.addTask(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 15,
      "Lucria": 1
    }
  },
  {
    "path": "src/main/java/models/member/Member.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sinteary"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public class Member implements IMember {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private String phone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private String email;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private int indexNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ListOfTasksAssignedToMember listOfTasksAssignedToMember;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Class representing a member in a project team."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param name The name of the member."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param phone The phone number of the member."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param email The email address of the member."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param indexNumber The index number assigned to the member, unique to the project."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Member(String name, String phone, String email, int indexNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.indexNumber \u003d indexNumber;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.indexNumber + \". \" + this.name + \" (Phone: \" + this.phone + \" | Email: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            + this.email + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void setIndexNumber(int indexNumber) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        this.indexNumber \u003d indexNumber;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public int getIndexNumber() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return this.indexNumber;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void updateDetails(String name, String phone, String email) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void assignTask(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfTasksAssignedToMember.addAssignedTask(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 44,
      "iamabhishek98": 11,
      "Lucria": 2
    }
  },
  {
    "path": "src/main/java/models/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.member.ListOfMemebersAssignedToTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private int taskPriority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private Date dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private int taskCredit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private TaskState taskState;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ListOfMemebersAssignedToTask listOfMemebersAssignedToTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private ArrayList\u003cString\u003e taskRequirements;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Class representing a task in a project."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskName The name of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskPriority The priority value of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @param dueDate The date that the task is due."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @param taskCredit The amount of credit a person would receive for completing the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     *                   A more difficult task would receive more credit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @param taskState taskState refers to whether the task is in OPEN, TO-DO, DOING, DONE."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    public Task(String taskName, int taskPriority, Date dueDate, int taskCredit, TaskState taskState,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                ArrayList\u003cString\u003e taskRequirements) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskPriority \u003d taskPriority;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        this.taskCredit \u003d taskCredit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        this.taskState \u003d taskState;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMemebersAssignedToTask \u003d new ListOfMemebersAssignedToTask();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        this.taskRequirements \u003d taskRequirements;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public int getTaskPriority() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return taskPriority;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String getDueDateString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        return formatter.format(this.dueDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * Gets the details of the task in a String format in the correct layout."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @return String containing all the details of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        if (this.dueDate !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return this.taskName + \" | Priority: \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    + this.taskPriority + \" | Due: \" + this.getDueDateString() + \" | Credit: \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    + this.taskCredit + \" | State: \" + this.taskState;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return this.taskName + \" | Priority: \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    + this.taskPriority + \" | Due: -- | Credit: \" + this.taskCredit + \" | State: \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                    + this.taskState;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public TaskState getTaskState() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskState;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public int getTaskCredit() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskCredit;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void assignMember(Member member) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMemebersAssignedToTask.addMember(member);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ListOfMemebersAssignedToTask getAssignedTasks() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return listOfMemebersAssignedToTask;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public HashSet\u003cInteger\u003e getAssignedIndexes() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfMemebersAssignedToTask.getAssignedMembersIndexNumbers();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void removeMember(Integer memberIndex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfMemebersAssignedToTask.removeMember(memberIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    public ArrayList\u003cString\u003e getTaskRequirements() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        return this.taskRequirements;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 19,
      "seanlimhx": 39,
      "Lucria": 10,
      "Dkenobi": 28
    }
  },
  {
    "path": "src/main/java/models/task/TaskList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Class representing a list with all task sort in the project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Adds a new task to the list of this project."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param task A new task to be added to the project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Deletes the task from the list using the index number."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param taskIndexNumber The index number of the task to be deleted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeTask(int taskIndexNumber) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.taskList.remove(taskIndexNumber - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Returns an ArrayList with String descriptions of task details."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return An ArrayList with String descriptions of task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ArrayList\u003cString\u003e getAllTaskDetails() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e taskDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        // This method compares the two tasks and sort list in descending order."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.sort((task1, task2) -\u003e task2.getTaskPriority() - task1.getTaskPriority());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            taskDetails.add(taskIndex + \". \" + task.getDetails());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            taskIndex++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return taskDetails;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Returns the list of all tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @return An ArrayList with all tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 12,
      "sinteary": 11,
      "Lucria": 1,
      "Dkenobi": 39
    }
  },
  {
    "path": "src/main/java/models/task/TaskState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "public enum TaskState {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    OPEN, TODO, DOING, DONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanlimhx": 5
    }
  },
  {
    "path": "src/main/java/repositories/IRepository.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package repositories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IRepository\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    ArrayList\u003cT\u003e getAll();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    boolean addToRepo(String input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void deleteItem();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    T getItem(int projectNumber);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 5,
      "-": 8
    }
  },
  {
    "path": "src/main/java/repositories/ProjectRepository.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package repositories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import util.factories.ProjectFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.data.IProject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ProjectRepository implements IRepository\u003cProject\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ArrayList\u003cProject\u003e allProjects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ProjectFactory projectFactory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ProjectRepository() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.allProjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.projectFactory \u003d new ProjectFactory();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ArrayList\u003cProject\u003e getAll() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return allProjects;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public boolean addToRepo(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        IProject newProject \u003d projectFactory.create(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        if (newProject.getDescription() \u003d\u003d null || newProject.getMembers() \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Project newlyCreatedProject \u003d (Project) newProject;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        allProjects.add(newlyCreatedProject);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public Project getItem(int projectNumber) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.allProjects.get(projectNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void deleteItem() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        // TODO yet to be implemented"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 4,
      "Lucria": 37
    }
  },
  {
    "path": "src/main/java/util/ParserUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     *  Parses the string input to extract the name, phone number and email."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param input Contains the name, phone number and email."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @return An array consisting on name in index 0, phone number in index 1 and email in index 2."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public static String[] memberCreation(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String[] memberDetails \u003d new String[3];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        memberDetails[0] \u003d \"No name\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        memberDetails[1] \u003d \"No phone number\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        memberDetails[2] \u003d \"No email address\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String[] tempInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        for (int i \u003d 0; i \u003c tempInput.length; i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String s \u003d tempInput[i];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (s.length() \u003e\u003d 2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                switch (s.substring(0, 2)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                case \"n/\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    memberDetails[0] \u003d s.substring(2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                case \"i/\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    memberDetails[1] \u003d s.substring(2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                case \"e/\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    memberDetails[2] \u003d s.substring(2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return memberDetails;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 35
    }
  },
  {
    "path": "src/main/java/util/constant/ConstantHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ConstantHelper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 4
    }
  },
  {
    "path": "src/main/java/util/date/DateTimeHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 4
    }
  },
  {
    "path": "src/main/java/util/factories/IArchDukeFactory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package util.factories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IArchDukeFactory\u003cT\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    T create(String input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 5
    }
  },
  {
    "path": "src/main/java/util/factories/MemberFactoryUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package util.factories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import util.ParserUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "public class MemberFactoryUtil {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    private Member newMember;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Method to create a new member."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param input Input containing details of member to be added (name, phone, email)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param memberListSize Integer containing the current size of the member list of the project."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @return Member with the relevant details. Index number is set later when adding to list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean memberIsCreated(String input, int memberListSize) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String[] memberDetails \u003d ParserUtil.memberCreation(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        boolean nameCreatedFlag \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String name \u003d memberDetails[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (!(\"No name\").equals(name)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            nameCreatedFlag \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String phone \u003d memberDetails[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String email \u003d memberDetails[2];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        int indexNumber \u003d memberListSize + 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        if (nameCreatedFlag) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.newMember \u003d new Member(name, phone, email, indexNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public Member getNewMember() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        return this.newMember;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sinteary"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 25,
      "iamabhishek98": 10,
      "Lucria": 1
    }
  },
  {
    "path": "src/main/java/util/factories/ProjectFactory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package util.factories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.IProject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.NullProject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ProjectFactory implements IArchDukeFactory\u003cIProject\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Data Validation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Do not throw exceptions at places where errors are expected"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * TODO refactoring this portion to a NullProject such that Repository can detect"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * TODO and return false. Leave to controller to handle false or true and throw it to View"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public IProject create(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String[] allStrings \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\"IDK how you even got here\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new NullProject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (allStrings.length \u003e 3) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\"Too many arguments!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new NullProject();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (allStrings.length \u003c 3) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\"Too little arguments!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new NullProject();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (allStrings[1].contains(\"n/\") \u0026\u0026 allStrings[2].contains(\"n/\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\"Please specify a name for your Project using n/PROJECT_NAME\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new NullProject();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (allStrings[1].contains(\"i/\") \u0026\u0026 allStrings[2].contains(\"i/\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\"Please specify the number of members in this project using i/NUMBER\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new NullProject();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        int nameFlag \u003d input.indexOf(\"n/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        int numberFlag \u003d input.indexOf(\"i/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        if (nameFlag \u003c numberFlag) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            description \u003d input.substring(nameFlag + 2, numberFlag - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            description \u003d input.substring(nameFlag + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return new Project(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 1,
      "Lucria": 42
    }
  },
  {
    "path": "src/main/java/util/factories/TaskFactory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package util.factories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import models.task.TaskState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class TaskFactory {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Method to create a new task and put it into a list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param input Input containing the information about the task and priority."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return Task as an object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    public Task createTask(String input) throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        String [] taskDetails \u003d input.split(\"[tpdcsr]\\\\/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String newTaskName \u003d taskDetails[1].trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        int newTaskPriority \u003d Integer.parseInt(taskDetails[2].trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        boolean hasDueDateFlag \u003d input.contains(\" d/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        boolean hasStateFlag \u003d input.contains(\" s/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        if (!hasDueDateFlag \u0026\u0026 !hasStateFlag) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            if (taskDetails.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        null, Integer.parseInt(taskDetails[3].trim()), TaskState.OPEN,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                ArrayList\u003cString\u003e taskRequirements \u003d parseTaskRequirements(taskDetails, 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        null, Integer.parseInt(taskDetails[3].trim()), TaskState.OPEN,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        taskRequirements);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (hasDueDateFlag \u0026\u0026 !hasStateFlag) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            if (taskDetails.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                Date dueDate \u003d getDateObject(taskDetails[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        dueDate, Integer.parseInt(taskDetails[4].trim()), TaskState.OPEN, null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                Date dueDate \u003d getDateObject(taskDetails[3]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                ArrayList\u003cString\u003e taskRequirements \u003d parseTaskRequirements(taskDetails, 5);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        dueDate, Integer.parseInt(taskDetails[4].trim()), TaskState.OPEN, taskRequirements);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (!hasDueDateFlag \u0026\u0026 hasStateFlag) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            TaskState newTaskState \u003d convertStringToTaskState(taskDetails[4]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (taskDetails.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        null, Integer.parseInt(taskDetails[3].trim()), newTaskState, null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                ArrayList\u003cString\u003e taskRequirements \u003d parseTaskRequirements(taskDetails, 5);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        null, Integer.parseInt(taskDetails[3].trim()), newTaskState, taskRequirements);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (hasDueDateFlag \u0026\u0026 hasStateFlag) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            Date dueDate \u003d getDateObject(taskDetails[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            TaskState newTaskState \u003d convertStringToTaskState(taskDetails[5].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (taskDetails.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        dueDate, Integer.parseInt(taskDetails[4].trim()), newTaskState, null);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                ArrayList\u003cString\u003e taskRequirements \u003d parseTaskRequirements(taskDetails, 6);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                newTask \u003d new Task(newTaskName, newTaskPriority,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "                        dueDate, Integer.parseInt(taskDetails[4].trim()), newTaskState, taskRequirements);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private ArrayList\u003cString\u003e parseTaskRequirements(String[] taskDetails, int startIndexOfTaskRequirements) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        for (int i \u003d startIndexOfTaskRequirements; i \u003c taskDetails.length; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            taskRequirements.add(taskDetails[i].trim());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        return taskRequirements;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    private Date getDateObject(String dateString) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        return formatter.parse(dateString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * Converts string input for state into enum TaskState object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @param inputState String input of state."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     * @return enum TaskState object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private TaskState convertStringToTaskState(String inputState) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        switch (inputState) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return TaskState.DONE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return TaskState.TODO;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"doing\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return TaskState.DOING;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            return TaskState.OPEN;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanlimhx": 66,
      "Lucria": 26,
      "Dkenobi": 12
    }
  },
  {
    "path": "src/main/java/util/json/JsonHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class JsonHelper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 4
    }
  },
  {
    "path": "src/main/java/util/log/DukeLogger.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeLogger {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 4
    }
  },
  {
    "path": "src/main/java/views/CLIView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import controllers.ConsoleInputController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.data.IProject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import models.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class CLIView {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private static final String horiLine \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private static final String indentation \u003d \"\\t\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private ConsoleInputController consoleInputController;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public CLIView() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.consoleInputController \u003d new ConsoleInputController(this);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Prints an indented and formatted message with a top and bottom border."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param lines The lines to be printed in between the border."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void consolePrint(String... lines) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        for (String message : lines) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            System.out.println(indentation + message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sinteary"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method to call when View model is started."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        //noinspection InfiniteLoopStatement"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleInputController.onCommandReceived(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method to be called when user says bye to exit the program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method called when users wishes to view all Projects that are currently created or stored."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param allProjects List of Projects returned to View model by the Controller from the Repository"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void viewAllProjects(ArrayList\u003cProject\u003e allProjects) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        ArrayList\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        toPrint.add(\"Here are all the Projects you are managing:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (int i \u003d 0; i \u003c allProjects.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            toPrint.add(\"\" + (i + 1) + \". \" + allProjects.get(i).getDescription() + \" \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + allProjects.get(i).getMembers().getAllMemberDetails());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(toPrint.toArray(new String[0]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Method called to inform the user that the project has exited."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param projectName The name of the project exited."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void exitProject(String projectName) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(\"Exited project: \" + projectName);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Adds a member to the project."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param newMember A new member with details specified by the user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void addMember(IProject projectToManage, Member newMember) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        projectToManage.addMember(newMember);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(\"Added new member to: \" + projectToManage.getDescription(), \"\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            + \"Member details: \" + newMember.getDetails());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Edits the details of a member belonging to the project."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param memberIndexNumber The member whose details are to be updated."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param memberDetails The updated details of the member."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void editMember(IProject projectToManage, int memberIndexNumber, String memberDetails) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        projectToManage.editMember(memberIndexNumber, memberDetails);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        consolePrint(\"Updated member details with the index number \" + memberIndexNumber);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Deletes a member from the project."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param memberIndexNumber The member to be removed from the project."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeMember(IProject projectToManage, int memberIndexNumber) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        projectToManage.removeMember(memberIndexNumber);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        consolePrint(\"Removed member with the index number \" + memberIndexNumber);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Adds a member to the project."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param newTask A new task with details specified by the user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void addTask(IProject projectToManage, Task newTask) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        projectToManage.addTask(newTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        consolePrint(\"Added new task to the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * Deletes a task from the project."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "     * @param taskIndexNumber The index of the task to be deleted."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void removeTask(IProject projectToManage, int taskIndexNumber) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        consolePrint(\"Removed \" + projectToManage.getTask(taskIndexNumber).getTaskName());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        projectToManage.removeTask(taskIndexNumber);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Shows the details of all the members in the project."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Can be updated later on to include more information (tasks etc)."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void viewAllMembers(Project projectToManage) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        ArrayList\u003cString\u003e allMemberDetails \u003d projectToManage.getMembers().getAllMemberDetails();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        consolePrint(allMemberDetails.toArray(new String[0]));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Shows the details of all the task in the project."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void viewAllTasks(IProject projectToManage) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e allTaskDetails \u003d projectToManage.getTasks().getAllTaskDetails();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        consolePrint(allTaskDetails.toArray(new String[0]));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Shows all the task that is assigned in the project."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param projectToManage The project specified by the user."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void viewAssignedTask(IProject projectToManage) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for (Task task: projectToManage.getTasks().getTaskList()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            ArrayList\u003cString\u003e allAssignedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            allAssignedTasks.add(task.getTaskName() + \" is assigned to: \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            allAssignedTasks.addAll(task.getAssignedTasks().getAllMemberDetails());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            consolePrint(allAssignedTasks.toArray(new String[0]));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * Assigns or unassigns a particular task to members in a project."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param assign ArrayList containing index number of members to be assigned task."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param unassign ArrayList containing index number of members to be unassigned task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param task Task to assign or unassign to members."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sinteary"
        },
        "content": "     * @param projectToManage The project in which the aforementioned task belongs to."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    public void assignOrUnassignTask(ArrayList\u003cInteger\u003e assign, ArrayList\u003cInteger\u003e unassign,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        Task task, IProject projectToManage) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        if (assign.size() \u003e 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            for (Integer i : assign) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                Member toAssign \u003d projectToManage.getMembers().getMember(i);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                task.assignMember(toAssign);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                //For now only tasks will have list of members assigned."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                //Will refactor and implement a way such that when a task is assigned,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                //both the tasklist (for the member) and the memberlist (for the task)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                // will be updated."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                consolePrint(\"Assigned task to: \" + toAssign.getName());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        if (unassign.size() \u003e 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            for (Integer i : unassign) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                task.removeMember(i);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                consolePrint(\"Unassigned task to: \""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                    + projectToManage.getMembers().getMember(i).getName());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sinteary"
        },
        "content": "                //recalculate credits for other members assigned to task if necessary"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sinteary"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sinteary"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sinteary"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "    public void viewTaskRequirements(IProject projectToManage, int taskIndex) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d projectToManage.getTask(taskIndex).getTaskRequirements();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "        consolePrint(taskRequirements.toArray(new String[0]));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 66,
      "iamabhishek98": 19,
      "seanlimhx": 4,
      "Lucria": 12,
      "-": 74,
      "Dkenobi": 22
    }
  },
  {
    "path": "src/main/java/views/ui/DialogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package views.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sinteary"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the dialog box containing the output and image of duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sinteary": 2,
      "Dkenobi": 61
    }
  },
  {
    "path": "src/main/java/views/ui/DukeUI.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package views.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeUI  {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 7
    }
  },
  {
    "path": "src/main/java/views/ui/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package views.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * A GUI for DukeTest using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private DukeUI duke \u003d new DukeUI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 30
    }
  },
  {
    "path": "src/main/java/views/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package views.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * Controller for views.ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private DukeUI duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lucria.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lucria.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setDuke(DukeUI d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        dukeGreeting();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private void dukeGreeting() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String greetingText \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"What can i do for you\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                DialogBox.getDukeDialog(greetingText, dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing DukeTest\u0027s"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        if (input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            duke.getResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            timeDelay(1000);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private void timeDelay(long t) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Thread.sleep(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 76
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"views.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 19
    }
  },
  {
    "path": "src/test/java/models/member/ListOfMembersInProjectTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ListOfMembersInProjectTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void alwaysTrue() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void testAddMember() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        ListOfMembersInProject listOfMembersInProject \u003d new ListOfMembersInProject();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.addMember(member);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(\"1. Tom (Phone: 91198766 | Email: tom@gmail.com)\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                listOfMembersInProject.getMember(1).getDetails());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void testEditMember() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        ListOfMembersInProject listOfMembersInProject \u003d new ListOfMembersInProject();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.addMember(member);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.editMember(1,\"n/John i/91177777 e/john@gmail.com\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(\"1. John (Phone: 91177777 | Email: john@gmail.com)\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                listOfMembersInProject.getMember(1).getDetails());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.editMember(1,\"n/John e/john@gmail.com\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(\"1. John (Phone: No phone number | Email: john@gmail.com)\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                listOfMembersInProject.getMember(1).getDetails());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void testGetNumOfMembers() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        ListOfMembersInProject listOfMembersInProject \u003d new ListOfMembersInProject();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.addMember(member);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(1, listOfMembersInProject.getNumOfMembers());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void testRemoveMember() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        ListOfMembersInProject listOfMembersInProject \u003d new ListOfMembersInProject();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.addMember(member);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfMembersInProject.removeMember(1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(0, listOfMembersInProject.getNumOfMembers());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 51
    }
  },
  {
    "path": "src/test/java/models/member/MemberTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "package models.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class MemberTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void alwaysTrue() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testGetDetails() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(\"1. Tom (Phone: 91198766 | Email: tom@gmail.com)\",member.getDetails());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testSetIndexNumber() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        member.setIndexNumber(2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(\"2. Tom (Phone: 91198766 | Email: tom@gmail.com)\",member.getDetails());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testUpdateDetails() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Member member \u003d new Member(\"Tom\",\"91198766\", \"tom@gmail.com\",1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        member.updateDetails(\"John\", \"911\", \"john@hotmail.com\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(\"1. John (Phone: 911 | Email: john@hotmail.com)\", member.getDetails());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 32
    }
  },
  {
    "path": "src/test/java/models/task/TaskListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void alwaysTrue() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task task \u003d new Task(\"task\", 5, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(\"task | Priority: 5 | Due: -- | Credit: 100 | State: OPEN\",taskList.getTask(1).getDetails());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testRemoveTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task task \u003d new Task(\"task\", 5, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        taskList.removeTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(0,taskList.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testGetTaskList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Task task1 \u003d new Task(\"task1\", 1, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Task task2 \u003d new Task(\"task2\", 2, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Task task3 \u003d new Task(\"task3\", 3, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Task task4 \u003d new Task(\"task4\", 4, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.addTask(task1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.addTask(task2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.addTask(task3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.addTask(task4);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertNotNull(taskList.getTaskList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String testTaskListString \u003d \"[1. task4 | Priority: 4 | Due: -- | Credit: 100 | State: OPEN, \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"2. task3 | Priority: 3 | Due: -- | Credit: 100 | State: OPEN, \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"3. task2 | Priority: 2 | Due: -- | Credit: 100 | State: OPEN, \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"4. task1 | Priority: 1 | Due: -- | Credit: 100 | State: OPEN]\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(taskList.getAllTaskDetails().toString(), testTaskListString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String testRemoveTaskListString \u003d \"[1. task4 | Priority: 4 | Due: -- | Credit: 100 | State: OPEN, \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"2. task2 | Priority: 2 | Due: -- | Credit: 100 | State: OPEN, \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"3. task1 | Priority: 1 | Due: -- | Credit: 100 | State: OPEN]\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.removeTask(2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(taskList.getAllTaskDetails().toString(), testRemoveTaskListString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 39,
      "Dkenobi": 24
    }
  },
  {
    "path": "src/test/java/models/task/TaskTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import util.factories.TaskFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private TaskFactory consoleInputFactory \u003d new TaskFactory();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void alwaysTrue() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testGetDetails() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task task1 \u003d new Task(\"task1\", 5, null,100, TaskState.OPEN,taskRequirements);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        assertEquals(\"task1 | Priority: 5 | Due: -- | Credit: 100 | State: OPEN\",task1.getDetails());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/mm/yyyy\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Date date \u003d simpleDateFormat.parse(\"20/1/2019\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Task task2 \u003d new Task(\"task2\", 5, date, 100, TaskState.OPEN, taskRequirements);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            assertEquals(\"task2 | Priority: 5 | Due: 20 Jan 2019 | Credit: 100 | State: OPEN\", task2.getDetails());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            System.out.println(\"Parsing error\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void testGetTaskRequirements() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Date dueDate \u003d formatter.parse(\"19/10/2019\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            taskRequirements.add(\"requirement1\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            Task dummyTask \u003d new Task(\"task1\",1,dueDate,10, TaskState.TODO, taskRequirements);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            Task task \u003d consoleInputFactory.createTask(\"t/task1 p/1 d/19/10/2019 c/10 s/todo r/requirement1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            assertEquals(dummyTask.getDetails(),task.getDetails());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": "            assertEquals(dummyTask.getTaskRequirements(), task.getTaskRequirements());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanlimhx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            ArrayList\u003cString\u003e taskRequirements2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            taskRequirements2.add(\"requirement1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            taskRequirements2.add(\"requirement2\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Task dummyTask2 \u003d new Task(\"task2\",2,null,10, TaskState.OPEN, taskRequirements2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Task task2 \u003d consoleInputFactory.createTask(\"t/task2 p/2 c/10 r/requirement1 r/requirement2\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            assertEquals(dummyTask2.getDetails(),task2.getDetails());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            assertEquals(dummyTask2.getTaskRequirements(), task2.getTaskRequirements());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            System.out.println(\"Parsing error\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 48,
      "seanlimhx": 6,
      "Dkenobi": 5
    }
  },
  {
    "path": "src/test/java/models/task/ViewAssignedTasksTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "package models.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.data.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import models.member.Member;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ViewAssignedTasksTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    Project project \u003d new Project(\"Infinity_Gauntlet\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void alwaysTrue() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void testViewAssignedTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String testAssignedTasks \u003d \"1. Dillen (Phone: 9999 | Email: dillen@gmail.com)\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"2. Jerry (Phone: 9999 | Email: jerryn@gmail.com)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String testAssignedTasks2 \u003d \"1. Dillen (Phone: 9999 | Email: dillen@gmail.com)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Date dueDate \u003d formatter.parse(\"19/10/2019\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            ArrayList\u003cString\u003e taskRequirements \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            taskRequirements.add(\"requirement1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.addTask(new Task(\"task2\",5, dueDate,10, TaskState.TODO, taskRequirements));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.addTask(new Task(\"task1\",10, dueDate,10, TaskState.TODO, taskRequirements));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.addMember(new Member(\"Dillen\", \"9999\", \"dillen@gmail.com\",1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.addMember(new Member(\"Jerry\", \"9999\", \"jerryn@gmail.com\",2));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.getTask(1).assignMember(project.getMembers().getMember(1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.getTask(1).assignMember(project.getMembers().getMember(2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            project.getTask(2).assignMember(project.getMembers().getMember(1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            assertEquals(project.getTask(1).getAssignedTasks().getAllMemberDetails().get(0) + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    + project.getTask(1).getAssignedTasks().getAllMemberDetails().get(1),testAssignedTasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            assertEquals(project.getTask(2).getAssignedTasks().getAllMemberDetails().get(0),testAssignedTasks2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 1,
      "Dkenobi": 49
    }
  }
]
