[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "group \u0027seedu.oof\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    mainClassName \u003d \"oof.Oof\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"mid\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"v1.1\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntime(\u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 2,
      "-": 46
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "rootProject.name \u003d \u0027oof\u0027"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 1
    }
  },
  {
    "path": "src/main/java/oof/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.CompleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.ScheduleCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.command.SnoozeCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a parser to process the commands inputted by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Parses the input given by user and calls specific Commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after checking the validity of the input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Command based on the user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public static Command parse(String line) throws OofException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] arr \u003d line.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        switch (arr[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                throw new OofException(\"OOPS!!! Please enter a number!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            int completeIndex \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new CompleteCommand(completeIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"todo \", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new AddToDoCommand(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new AddDeadlineCommand(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new AddEventCommand(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                throw new OofException(\"OOPS!!! Please enter a number!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new FindCommand(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"snooze\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                throw new OofException(\"OOPS!!! Please enter a number!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            int snoozeIndex \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new SnoozeCommand(snoozeIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        case \"schedule\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            line \u003d line.replaceFirst(\"schedule \", \"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            return new ScheduleCommand(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new OofException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 32,
      "jasperosy": 37,
      "Debbie Tan": 2
    }
  },
  {
    "path": "src/main/java/oof/Oof.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a Personal Assistant bot. An Oof object corresponds to three other classes,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * namely called Storage, Ui and TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Oof {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskList arr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Reminder reminder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for Oof for instantiation of other classes Ui, Storage and TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Oof() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        reminder \u003d new Reminder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            arr \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            arr \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the Personal Assistant."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.hello();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        reminder.checkDeadline(arr, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                String line \u003d ui.scanLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Command command \u003d CommandParser.parse(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                command.execute(arr, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            } catch (OofException exception) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                ui.printOofException(exception);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is the main method which makes use of run method."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        new Oof().run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 7,
      "jasperosy": 10,
      "-": 43
    }
  },
  {
    "path": "src/main/java/oof/Reminder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Reminder class to remind user on upcoming deadlines."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks Task objects dates to determine if it is due soon."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param taskList TaskList that contains Task objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui       Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void checkDeadline(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printReminder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String[] lineSplit \u003d task.toString().split(\"by:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String result \u003d lineSplit[1].substring(0, lineSplit[1].length() - 1); // remove closing bracket"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                result \u003d result.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    Date dueDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\").parse(result);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    Date now \u003d new Date(); // current date time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (isUpcoming(dueDate, now)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        ui.printUpcomingDeadline(count, taskList.getTask(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                } catch (ParseException | DateTimeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    System.out.println(\"Timestamp given is invalid! Please try again.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if deadline is within the next 24 hours."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param dueDate Due date of current deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param now     Current time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if due date of current deadline is within 24 hours of current time."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isUpcoming(Date dueDate, Date now) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        long diff \u003d dueDate.getTime() - now.getTime(); // difference in time in milliseconds"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        long diffHours \u003d diff / (60 * 60 * 1000);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return diffHours \u003c\u003d 24;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 27,
      "KahLokKee": 30,
      "jasperosy": 2
    }
  },
  {
    "path": "src/main/java/oof/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Storage class to store and read Task objects to/from hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Writes Task objects to hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param taskList TaskList that contains Task objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            ArrayList\u003cTask\u003e arr \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String filename \u003d \"output.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            BufferedWriter out \u003d new BufferedWriter(new FileWriter(filename));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            for (Task task : arr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                out.write(task + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(e + \", thus please try inputting other things.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Reads Task objects that were previously saved to hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return TaskList containing Task objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @throws IOException if file does not exist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String filename \u003d \"output.txt\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (isTodo(line)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String description \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                arr.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (checkDone(line)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } else if (isDeadline(line)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String details \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String[] lineSplit \u003d details.split(\"\\\\(by:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String start \u003d lineSplit[0].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String end \u003d lineSplit[1].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                end \u003d end.substring(0, end.length() - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                Task task \u003d new Deadline(start, end);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                arr.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (checkDone(line)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } else if (isEvent(line)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String details \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String[] lineSplit \u003d details.split(\" \\\\(from: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String description \u003d lineSplit[0].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String[] dateSplit \u003d lineSplit[1].split(\" to: \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                dateSplit[1] \u003d dateSplit[1].substring(0, dateSplit[1].length() - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Task task \u003d new Event(description, dateSplit[0], dateSplit[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                arr.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (checkDone(line)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if entry in save file is an Event."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param line Entry in save file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if entry starts with [E]."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isEvent(String line) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return line.startsWith(\"[E]\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if entry in save file is a Deadline."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param line Entry in save file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if entry starts with [D]."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isDeadline(String line) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return line.startsWith(\"[D]\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if entry in save file is a Todo."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param line Entry in save file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if entry starts with [T]."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isTodo(String line) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return line.startsWith(\"[T]\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if the Task has already been marked as done."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param line Task object in string format."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if the Task object has already been marked as done, false otherwise."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean checkDone(String line) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return line.charAt(4) \u003d\u003d \u0027Y\u0027; //u2713 is a tick emoticon"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 72,
      "jasperosy": 56
    }
  },
  {
    "path": "src/main/java/oof/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a list of Task objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param taskList TaskList that contains Task objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Retrieves all the Task objects in TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return TaskList containing all its Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Retrieves the number of Task objects in the TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Number of Task objects in the TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Retrieves the Task object at a particular index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Index of Task object, specified by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Task object at a particular index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Adds a Task object to the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task Task object to be added to TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Adds a Task object to a specific index in the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param index Index to be inserted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void addTaskToIndex(int index, Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        taskList.add(index, task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Deletes a Task object from the TaskList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Index of Task object, specified by the user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if index is within bounds of TaskList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Index of TaskList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return True if index is within bounds of TaskList, false otherwise."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public boolean isIndexValid(int index) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return index \u003c this.getSize() \u0026\u0026 index \u003e\u003d 0;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 44,
      "jasperosy": 51
    }
  },
  {
    "path": "src/main/java/oof/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import oof.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Ui class that is responsible for Input/Output operations."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Scans for a line of user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Scanner to scan for next line of user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String scanLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints 3D ascii logo OOF."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printOofLogo() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String logo \u003d \"\\t ________  ________  ________ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t|\\\\   __  \\\\|\\\\   __  \\\\|\\\\  _____\\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\__/ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __\\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\_|\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t   \\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\__\\\\ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                + \"\\t    \\\\|_______|\\\\|_______|\\\\|__|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints welcome message for OOF."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void hello() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printOofLogo();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m OOF\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Shows termination message before OOF exits."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Prints lines."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints the Task object that was added and its relevant messages."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task Task object that was added."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param size Number of Task objects in the TaskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void addTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (size \u003e 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Shows the Task object that has been marked as done and its relevant messages."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task Task object that was marked as done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void completeMessage(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Shows the Task object that has been deleted and its relevant messages."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task Task object that was deleted."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param size Number of Task objects in the TaskList."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void deleteMessage(Task task, int size) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (size \u003e 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows the error message."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param exception Exception encountered."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printOofException(OofException exception) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\" + exception.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Displays the Task to be snoozed."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printSnoozeMessage(Task task) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tI have changed the date of this task!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Retrieves a new Timestamp from the user for the Task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to be snoozed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Timestamp input by user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String getTimeStamp() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"\\tPlease enter the new date: \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return scanLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints a continue prompt and waits for user input."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return User input if it is equals to \"Y\" or \"N\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String printContinuePrompt() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Continue anyway? (Y/N)\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            input \u003d scanLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (input.equals(\"Y\") || input.equals(\"N\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                return input;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints a warning regarding event clashes."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printClashWarning(ArrayList\u003cEvent\u003e eventClashes) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Warning! Event being added clashes with the following events:\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        for (Event e : eventClashes) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints a reminder regarding upcoming deadlines."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printReminder() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"\\tReminder these tasks have upcoming deadlines:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints the details of an upcoming deadline."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param count Position of upcoming deadline in reminder list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param task  Task object of upcoming deadline."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printUpcomingDeadline(int count, Task task) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"\\t\" + count + \".\" + task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints all tasks scheduled on the provided date."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param scheduledTasks List of all Tasks scheduled on the date provided."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param date           Date parameter provided by user."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printScheduledTasks(TaskList scheduledTasks, String date) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"\\t Here are your tasks for\" + date + \": \");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        for (int i \u003d 0; i \u003c scheduledTasks.getSize(); i++) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + scheduledTasks.getTask(i));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints list of matching tasks."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param matchedTasks ArrayList containing matching tasks."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printMatchingTasks(ArrayList\u003cTask\u003e matchedTasks) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (matchedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"\\tThere are no matching tasks in your list!\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + matchedTasks.get(i));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Prints all tasks in TaskList."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr TaskList containing saved tasks."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void printTaskList(TaskList arr) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.getSize(); i++) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + arr.getTask(i));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 145,
      "jasperosy": 92
    }
  },
  {
    "path": "src/main/java/oof/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command that appends a new Deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * object to the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for AddDeadlineCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user for processing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public AddDeadlineCommand(String line) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Processes the Command inputted by user into description and date."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks for the validity of the format of date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Adds a Deadline object to the TaskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * and prints the object added before calling methods in Storage to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * store the object added in the hard disk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] lineSplit \u003d line.split(\"/by\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!hasDescription(lineSplit)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The deadline needs a description.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (!hasDueDate(lineSplit)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The deadline needs a due date.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String description \u003d lineSplit[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String date \u003d lineSplit[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        date \u003d parseTimeStamp(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (isDateValid(date)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr.addTask(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            storage.writeToFile(arr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The due date is invalid.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if description is more than length 0 and is not whitespace"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasDescription(String[] lineSplit) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return lineSplit[0].trim().length() \u003e 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a due date."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if there is a due date and due date is not whitespace."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasDueDate(String[] lineSplit) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return lineSplit.length !\u003d 1 \u0026\u0026 lineSplit[1].trim().length() \u003e 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for OofException to terminate."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 43,
      "jasperosy": 47
    }
  },
  {
    "path": "src/main/java/oof/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to add Event objects"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * to the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for AddEventCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public AddEventCommand(String line) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Processes the Command inputted by user into description and date."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks for the validity of the format of date."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Adds an Event object to the TaskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * and prints the object added before calling methods in Storage to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * store the object added in the hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] lineSplit \u003d line.split(\" /from \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!hasDescription(lineSplit)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The event needs a description.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (!hasStartDate(lineSplit)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The event needs a start date.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (!hasEndDate(lineSplit)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The event needs an end date.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String description \u003d lineSplit[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] dateSplit \u003d lineSplit[1].split(\" /to \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String startDate \u003d parseTimeStamp(dateSplit[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String endDate \u003d parseTimeStamp(dateSplit[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (isDateValid(startDate) \u0026\u0026 isDateValid(endDate)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            ArrayList\u003cEvent\u003e eventClashes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            SimpleDateFormat format \u003d new java.text.SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Date newEventStartTime \u003d format.parse(dateSplit[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Date newEventEndTime \u003d format.parse(dateSplit[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (!isStartDateBeforeEndDate(newEventStartTime, newEventEndTime)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    throw new OofException(\"OOPS!!! The start date of an event cannot be after the end date.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                for (Task t : arr.getTasks()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (t instanceof Event) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        Event event \u003d (Event) t;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        Date currEventStartTime \u003d format.parse(event.getStartTiming());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        Date currEventEndTime \u003d format.parse(event.getEndTiming());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        if (isClash(newEventStartTime, newEventEndTime, currEventStartTime, currEventEndTime)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                            eventClashes.add(event);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                boolean hasClashes \u003d !eventClashes.isEmpty();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (hasClashes) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    ui.printClashWarning(eventClashes);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (!isContinue(ui)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                throw new OofException(\"Timestamp given is invalid! Please try again.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            Task task \u003d new Event(description, dateSplit[0], dateSplit[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr.addTask(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            storage.writeToFile(arr);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (isDateValid(startDate)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The end date is invalid.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (isDateValid(endDate)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The start date is invalid.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The start and end dates are invalid.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a description."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if description is more than length 0 and is not whitespace."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasDescription(String[] lineSplit) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return lineSplit[0].trim().length() \u003e 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a start date (argument given before \"/to\")."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if there is a start date and start date is not whitespace."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasStartDate(String[] lineSplit) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return lineSplit.length \u003e 1 \u0026\u0026 lineSplit[1].split(\" /to \")[0].trim().length() \u003e 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has an end date (argument given after \"/to\")."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if there is an end date and end date is not whitespace."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasEndDate(String[] lineSplit) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] dateSplit \u003d lineSplit[1].split(\" /to \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return dateSplit.length \u003e 1 \u0026\u0026 dateSplit[1].trim().length() \u003e 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if start and end date are chronologically accurate."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param newEventStartTime Start time of event being added."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param newEventEndTime   End time of event being added."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if start date occurs before end date, false otherwise."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isStartDateBeforeEndDate(Date newEventStartTime, Date newEventEndTime) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return newEventStartTime.compareTo(newEventEndTime) \u003c\u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if there is an overlap of event timing."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param newEventStartTime  Start time of event being added."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param newEventEndTime    End time of event being added."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param currEventStartTime Start time of event being compared."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param currEventEndTime   End time of event being added."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if there is an overlap of event timing."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isClash(Date newEventStartTime, Date newEventEndTime, Date currEventStartTime,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                            Date currEventEndTime) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return (newEventStartTime.compareTo(currEventStartTime) \u003e\u003d 0"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                \u0026\u0026 newEventStartTime.compareTo(currEventEndTime) \u003c 0)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                || (newEventEndTime.compareTo(currEventStartTime) \u003e 0"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                \u0026\u0026 newEventEndTime.compareTo(currEventEndTime) \u003c\u003d 0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if user wants to continue adding an event when there is a clash in events."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if response equals \"Y\", false otherwise."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isContinue(Ui ui) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String response \u003d ui.printContinuePrompt();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return response.equals(\"Y\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 132,
      "jasperosy": 46
    }
  },
  {
    "path": "src/main/java/oof/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to add Todo objects to TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for AddTodoCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public AddToDoCommand(String line) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Processes the Command inputted by user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Adds the Todo object to TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Stores the object in hard disk by calling Storage before printing the object added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!hasDescription()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The todo needs a description.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        Task task \u003d new Todo(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        arr.addTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        storage.writeToFile(arr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if description is more than length 0 and is not whitespace."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return this.line.trim().length() \u003e 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 23,
      "jasperosy": 44
    }
  },
  {
    "path": "src/main/java/oof/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.sql.Timestamp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command object that corresponds to specific commands"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * defined by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Abstract parent of all other Command subclasses."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Invokes other Command subclasses based on the input given by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param tasks   Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws OofException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Parses the Timestamp given by the user and returns the parsed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * date as a string if the date is valid."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param date Timestamp supplied by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Parsed Timestamp if the Timestamp is valid, else returns \"failed\"."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String parseTimeStamp(String date) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            SimpleDateFormat format \u003d new java.text.SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            format.parse(date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String pattern \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.from(formatter.parse(date));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Timestamp timestamp \u003d Timestamp.valueOf(localDateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return formatter2.format(timestamp.toLocalDateTime());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } catch (ParseException | DateTimeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return \"failed\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if date is valid."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param date String processed by ParseTimeStamp method."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if date is not equals to \"failed\", false otherwise."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    protected boolean isDateValid(String date) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return !date.equals(\"failed\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if ExitCommand is called, false otherwise."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 27,
      "jasperosy": 44
    }
  },
  {
    "path": "src/main/java/oof/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to mark Task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for CompleteCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Represents the index of the Task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public CompleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Marks the specific Task defined by the user as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after confirming the validity of the Command inputted by the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param taskList Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui       Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage  Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                 objects to hard disk."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (!taskList.isIndexValid(this.index)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                throw new OofException(\"OOPS!!! The index is invalid.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } else if (taskList.getTask(this.index).getStatus()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                throw new OofException(\"OOPS!!! The task is already marked as done.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                task.setStatus();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                ui.completeMessage(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                storage.checkDone(task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (OofException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            ui.printOofException(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 23,
      "jasperosy": 38
    }
  },
  {
    "path": "src/main/java/oof/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to delete a specific Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Represents the index of the Task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Deletes the specific Task defined by the user after confirming the validity of the Command inputted by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param taskList Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui       Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage  Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                 objects to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!taskList.isIndexValid(this.index)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new OofException(\"OOPS!!! Invalid number!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        taskList.deleteTask(this.index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.deleteMessage(task, taskList.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if ExitCommand is called for OOF to terminate."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 20,
      "jasperosy": 33
    }
  },
  {
    "path": "src/main/java/oof/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a Command to terminate Oof."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Exits the Oof program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 8,
      "jasperosy": 32
    }
  },
  {
    "path": "src/main/java/oof/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command that finds and displays specific tasks in the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public FindCommand(String line) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Finds the Tasks that contain the keyword(s) specified"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * by the user after processing the Command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Displays the Tasks found after collating them."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws OofException Catches invalid commands given by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] lineSplit \u003d line.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!hasDescription(lineSplit)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new OofException(\"OOPS!!! The find command needs a description.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String item \u003d lineSplit[1].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.getSize(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            if (arr.getTask(i).getLine().contains(item)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                matchedTasks.add(arr.getTask(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printMatchingTasks(matchedTasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input has a description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param lineSplit processed user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if description is more than length 0 and is not whitespace."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean hasDescription(String[] lineSplit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return lineSplit.length !\u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 28,
      "jasperosy": 43
    }
  },
  {
    "path": "src/main/java/oof/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to list all Tasks in the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for ListCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Lists all the Tasks present in the TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printTaskList(arr);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if ExitCommand is called for Oof to terminate."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 10,
      "jasperosy": 29
    }
  },
  {
    "path": "src/main/java/oof/command/ScheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "import oof.Oof;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "import oof.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     * Constructor for ScheduleCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param date String containing date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ScheduleCommand(String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if input date and date of Task are equal."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param input date from user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param date  date from existing Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return true if they are equal, false otherwise."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    private boolean compareDate(String input, String date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        return input.equals(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     * Checks TaskList for Tasks associated to indicated date."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr ArrayList of Task objects."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     * @return ArrayList of Task objects associated to given date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    private TaskList scheduleByDate(TaskList arr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        TaskList scheduledTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.getSize(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            if (arr.getTask(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "                Deadline d \u003d (Deadline) arr.getTask(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "                String date \u003d d.getBy().substring(0, 10);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (compareDate(this.date, date)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "                    scheduledTasks.addTask(d);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return scheduledTasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Executes Schedule Command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     ArrayList of Task objects."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @throws OofException Catches invalid commands given by user and dates with no scheduled tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws OofException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        if (this.date.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            throw new OofException(\"OOPS! Please enter a date!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        TaskList scheduledTasks \u003d scheduleByDate(arr);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        if (scheduledTasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "            throw new OofException(\"There are no Tasks scheduled on\" + this.date + \".\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.printScheduledTasks(scheduledTasks, this.date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 25,
      "jasperosy": 5,
      "Debbie Tan": 49
    }
  },
  {
    "path": "src/main/java/oof/command/SnoozeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Command to snooze a Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class SnoozeCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for SnoozeCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Index of Task to be snoozed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public SnoozeCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Replaces the timestamp of an Event or Deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after checking the validity of the task selected as well as the new"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Timestamp before performing the replacement."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr     Instance of TaskList that stores Task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param ui      Instance of Ui that is responsible for visual feedback."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param storage Instance of Storage that enables the reading and writing of Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *                objects to hard disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (!isIndexValid(arr, this.index)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                throw new OofException(\"\\u2639 OOPS!!! Invalid number!\"); //u2639 is a sad face emoticon"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            Task task \u003d arr.getTask(this.index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                String description \u003d task.getLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                String date \u003d ui.getTimeStamp();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                date \u003d parseTimeStamp(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (isDateValid(date)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Task newTask \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    arr.deleteTask(this.index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    arr.addTaskToIndex(this.index, newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    ui.printSnoozeMessage(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    storage.writeToFile(arr);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    throw new OofException(\"Timestamp given is invalid! Please try again.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String description \u003d task.getLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String startDate \u003d ui.getTimeStamp();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String endDate \u003d ui.getTimeStamp();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                startDate \u003d parseTimeStamp(startDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                endDate \u003d parseTimeStamp(endDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (isDateValid(startDate) \u0026\u0026 isDateValid(endDate)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Task newTask \u003d new Event(description, startDate, endDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    arr.deleteTask(this.index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    arr.addTaskToIndex(this.index, newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    ui.printSnoozeMessage(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    storage.writeToFile(arr);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    throw new OofException(\"Timestamp given is invalid! Please try again.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                throw new OofException(\"OOPS!!! Task does not have a timestamp!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (OofException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            ui.printOofException(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Checks if index is within bounds of TaskList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param arr   TaskList containing tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param index Index of TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return True if index is within bounds of TaskList, false otherwise."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isIndexValid(TaskList arr, int index) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return index \u003c arr.getSize() \u0026\u0026 index \u003e\u003d 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 53,
      "jasperosy": 42
    }
  },
  {
    "path": "src/main/java/oof/exception/OofException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a newly specified Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class OofException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for OofException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param error Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public OofException(String error) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 16
    }
  },
  {
    "path": "src/main/java/oof/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Represents a Task object. A Deadline object is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param description Details of the Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param by          Due date and time of the Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 5,
      "jasperosy": 20,
      "Debbie Tan": 4
    }
  },
  {
    "path": "src/main/java/oof/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * An Event object is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private String startTiming;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private String endTiming;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param description Details of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param startTiming Starting date and time of the Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param endTiming   Ending date and time of the Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, String startTiming, String endTiming) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startTiming \u003d startTiming;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.endTiming \u003d endTiming;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStartTiming() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return startTiming;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEndTiming() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return endTiming;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + startTiming + \" to: \" + endTiming + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 6,
      "jasperosy": 1,
      "-": 29
    }
  },
  {
    "path": "src/main/java/oof/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * Abstract parent class of all subclasses of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Task(String line) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void setStatus() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Retrieves the status icon of the Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Status icon of the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return (status ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Customises the toString() method to print the Task object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @return Customised String for Task object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + line;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 15,
      "jasperosy": 36
    }
  },
  {
    "path": "src/main/java/oof/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": " * A Todo object is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "     * @param description Description of the Todo object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 4,
      "jasperosy": 17
    }
  },
  {
    "path": "src/test/java/oof/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package oof;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.CompleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.AddToDoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.command.ScheduleCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import oof.exception.OofException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testBye() throws OofException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testList() throws OofException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testDone() throws OofException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"done 2\") instanceof CompleteCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testTodo() throws OofException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"todo borrow book\") instanceof AddToDoCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testDeadline() throws OofException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"deadline homework /by 11-11-2019 11:11\") instanceof AddDeadlineCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testEvent() throws OofException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"event testing /at 11-11-2019 11:11\") instanceof AddEventCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testSchedule() throws OofException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        assertTrue(CommandParser.parse(\"schedule 11-11-2019\") instanceof ScheduleCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Debbie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testInvalid() throws OofException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            CommandParser.parse(\"abcd\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } catch (OofException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 9,
      "jasperosy": 51,
      "Debbie Tan": 3
    }
  }
]
