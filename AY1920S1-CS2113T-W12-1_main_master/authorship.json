[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveBaseName \u003d \"rim\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveVersion \u003d \"1.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    mainClassName \u003d \"rims/core/Rim\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 3,
      "-": 44
    }
  },
  {
    "path": "src/main/java/rims/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Room;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String resourceType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public AddCommand(String roomName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceName \u003d roomName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceType \u003d \"room\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public AddCommand(String itemName, int qty) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceName \u003d itemName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceType \u003d \"item\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (resourceType.equals(\"room\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            int resourceId \u003d resources.generateResourceId();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Room newRoom \u003d new Room(resourceId, resourceName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            resources.add(newRoom);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"The following room has been successfully added:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(newRoom.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (resourceType.equals(\"item\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c qty; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int resourceId \u003d resources.generateResourceId();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Item newItem \u003d new Item(resourceId, resourceName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.add(newItem);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (i \u003d\u003d qty - 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"The following item(s) have been successfully added:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(newItem.toString() + \" (qty: \" + qty + \")\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    ui.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 16,
      "isbobby": 3,
      "rabhijit": 33
    }
  },
  {
    "path": "src/main/java/rims/command/CalendarCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "public abstract class CalendarCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    protected static int cellLength \u003d 15;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    protected static int cellHeight \u003d 6;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    protected static int CalHeight \u003d 5;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    protected static int CalWidth \u003d 7;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public CalendarCommand(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        printCal();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "  // @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    //public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String Vert \u003d \"║\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    //public static String Horz;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String TopLeft \u003d \"╔\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String TopRight \u003d \"╗\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    //public static String BotRight;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String BotLeft \u003d \"╚\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String Centre \u003d \"╬\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String TopCentre \u003d \"╦\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String BotCentre \u003d \"╩\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String MidRight \u003d \"╣\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String MidLeft \u003d \"╠\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printCal() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        int days \u003d 29;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        // todo: check and align days of the week / offset from first box (mon)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        // todo: add in items and reservation status"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        printTopCells(days);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int row \u003d 2; row \u003c CalHeight; row++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "           printMidCells(row);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        printBotCells(CalHeight, days);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printTopCells(int days) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        int cellRow \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d (cellLength * CalWidth); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(TopLeft);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(TopRight);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else if ((i % cellLength) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(TopCentre);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                //System.out.print(Horz)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "       // for (int row \u003d 2; row \u003c cellHeight; row++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            //for (int i \u003d 0; i \u003c\u003d cellLength * CalWidth; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                printCellRow(cellRow, days);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                /*int day \u003d ((i+1) / cellLength) + 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                if ((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if ((row \u003d\u003d 2) \u0026\u0026 ((i+2) % cellLength \u003d\u003d 0)){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(day) ;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            System.out.print(\"\\n\");*/"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            //}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printMidCells(int row){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d (cellLength * CalWidth); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(MidLeft);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if (i \u003d\u003d (cellLength * CalWidth)){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(MidRight);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(Centre);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                //System.out.print(Horz)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int r \u003d 2; r \u003c cellHeight; r++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d cellLength * CalWidth; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                int day \u003d ((i+1) / cellLength) + 1 + ((row-1) * 7);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                if ((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if ((r \u003d\u003d 2) \u0026\u0026 ((i+2) % cellLength \u003d\u003d 0)){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(day);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if ((r \u003d\u003d 2) \u0026\u0026 ((i+3) % cellLength \u003d\u003d 0) \u0026\u0026 (day \u003e 9) ){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(\"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printBotCells(int row, int DaysInMonth ){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d (cellLength * CalWidth); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(MidLeft);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if (i \u003d\u003d (cellLength * CalWidth)){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(MidRight);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(Centre);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                //System.out.print(Horz)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int r \u003d 2; r \u003c cellHeight; r++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d cellLength * CalWidth; i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                int day \u003d ((i+1) / cellLength) + 1 + ((row-1) * 7);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                if ((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(Vert);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if ((r \u003d\u003d 2) \u0026\u0026 ((i+2) % cellLength \u003d\u003d 0) \u0026\u0026 (day\u003c\u003d DaysInMonth)){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(day);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else if ((r \u003d\u003d 2) \u0026\u0026 ((i+3) % cellLength \u003d\u003d 0) \u0026\u0026 (day \u003e 9) \u0026\u0026 (day \u003c\u003d DaysInMonth) ){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(\"\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    System.out.print(\" \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d (cellLength * CalWidth); i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(BotLeft);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if (i \u003d\u003d (cellLength * CalWidth)){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                //System.out.print(BotRight)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(BotCentre);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                //System.out.print(Horz)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static int getLength (String phrase){"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        return phrase.length();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printCellRow(int cellRow, int DaysInMonth) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        String phrase \u003d \"testing12345678\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int row \u003d 2; row \u003c cellHeight; row++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if (row \u003d\u003d 2) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                printDateRow(cellRow, DaysInMonth);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else if (getLength(phrase) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d (cellLength * CalWidth); i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    int day \u003d ((i + 1) / cellLength) + 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    if ((i % cellLength) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(Vert);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    } else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(Vert);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    } else if ((row \u003d\u003d 2) \u0026\u0026 ((i + 2) % cellLength \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(day);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else { // assert there is an entry"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                int length \u003d getLength(phrase);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                String phraseToPrint \u003d shortenPhrase(phrase);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d cellLength * CalWidth; i++) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    int day \u003d ((i + 1) / cellLength) + 1 + ((row - 1) * 7);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    if ((i % cellLength) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(Vert);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    } else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(Vert);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(\" \");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(phraseToPrint);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        System.out.print(\" \" + Vert);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                        i +\u003d cellLength;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static String shortenPhrase(String Phrase){"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        String padding \u003d\"\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        int length \u003d getLength(Phrase);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        if (length \u003c\u003d cellLength - 2){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            result +\u003d Phrase;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            for (int i \u003d 0; i \u003c cellLength - length - 3; i ++){"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                padding +\u003d \" \";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            result +\u003d padding;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        else{ //assert need to truncate phrase"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            result \u003d Phrase.substring(0, (cellLength-6) );"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            result +\u003d \"...\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public static void printDateRow(int cellRow, int DaysInMonth){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d CalWidth * cellLength; i++) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            int day \u003d ((i+1) / cellLength) + 1 + ((cellRow-1) * 7);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            if ((i % cellLength) \u003d\u003d 0){"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(Vert);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if (i \u003d\u003d (cellLength * CalWidth)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(Vert);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else if (((i + 2) % cellLength \u003d\u003d 0) \u0026\u0026 (day \u003c\u003d DaysInMonth)) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(day);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            } else if (((i + 3) % cellLength \u003d\u003d 0) \u0026\u0026 (day \u003e 9) \u0026\u0026 (day \u003c\u003d DaysInMonth)) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(\"\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                System.out.print(\" \");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "danielcyc": 254,
      "rabhijit": 12
    }
  },
  {
    "path": "src/main/java/rims/command/CloseCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class CloseCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        storage.saveToFile(resources.getResources());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        setExitCode();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 4,
      "rabhijit": 9
    }
  },
  {
    "path": "src/main/java/rims/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * The parent of all possible commands understood by Duke. Sets the exit code"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * to false by default and lists methods common to all the commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Boolean exitCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Boolean getExitCode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return exitCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void setExitCode() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    abstract public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 4,
      "rabhijit": 24
    }
  },
  {
    "path": "src/main/java/rims/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Room;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String resourceType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public DeleteCommand(String resourceName, String resourceType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceName \u003d resourceName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceType \u003d resourceType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws RimsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (resourceType.equals(\"room\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d resources.getResourceByName(resourceName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            resources.deleteResourceByName(resourceName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"The following room has been successfully deleted:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(thisResource.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (resourceType.equals(\"item\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e allOfItem \u003d resources.getAllOfResource(resourceName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c allOfItem.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d allOfItem.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printDash();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printDash();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String idInput \u003d ui.getInput(\"Type in the resource ID(s) (separated by a space for multiple IDs) that you wish to delete:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String[] splitIdInput \u003d idInput.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cInteger\u003e intIdInput \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c splitIdInput.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                intIdInput.add(Integer.parseInt(splitIdInput[i]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e deletedResources \u003d new ArrayList\u003cResource\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int j \u003d 0; j \u003c intIdInput.size(); j++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d resources.getResourceById(intIdInput.get(j));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                deletedResources.add(thisResource);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.deleteResourceById(intIdInput.get(j));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"The following item(s) have been successfully deleted:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int k \u003d 0; k \u003c deletedResources.size(); k++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisDeletedResource \u003d deletedResources.get(k);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisDeletedResource.toString() + \" (ID: \" + thisDeletedResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 8,
      "isbobby": 2,
      "rabhijit": 64
    }
  },
  {
    "path": "src/main/java/rims/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String param \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String listType \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for basic \u0027list\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for list /paramType"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ListCommand(String paramType, String param) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        listType \u003d paramType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.param \u003d param;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws ParseException, RimsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (listType \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cString\u003e coveredResources \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"CURRENTLY AVAILABLE:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printEmptyLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d resources.getResourceByIndex(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int availableNumberOfResource \u003d resources.getAvailableNumberOfResource(thisResource.getName());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!coveredResources.contains(thisResource.getName()) \u0026\u0026 availableNumberOfResource \u003e 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    coveredResources.add(thisResource.getName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(thisResource.toString() + \" (qty: \" + availableNumberOfResource + \")\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printEmptyLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"CURRENTLY BOOKED:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            coveredResources \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d resources.getResourceByIndex(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int bookedNumberOfResource \u003d resources.getBookedNumberOfResource(thisResource.getName());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!coveredResources.contains(thisResource.getName()) \u0026\u0026 bookedNumberOfResource \u003e 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    coveredResources.add(thisResource.getName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(thisResource.toString() + \" (qty: \" + bookedNumberOfResource + \")\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ArrayList\u003cResource\u003e allOfResource \u003d resources.getAllOfResource(thisResource.getName());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c allOfResource.size(); j++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        if (!allOfResource.get(j).isCurrentlyAvailable()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            ui.print(\"\\t\" + allOfResource.get(j).getReservations().getCurrentBooking().toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (listType.equals(\"item\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!resources.isItem(param)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"There is no such item!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e allOfItem \u003d resources.getAllOfResource(param);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c allOfItem.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d allOfItem.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printDash();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printDash();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (listType.equals(\"room\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!resources.isRoom(param)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"There is no such room!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d resources.getResourceByName(param);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (listType.equals(\"date\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 5,
      "rabhijit": 105
    }
  },
  {
    "path": "src/main/java/rims/command/ReserveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReserveCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Date dateFrom;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Date dateTill;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String stringDateFrom \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String stringDateTill;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int userId;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReserveCommand(String roomName, String stringDateTill, int userId) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d roomName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateFrom \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateTill \u003d stringDateTill;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReserveCommand(String itemName, int qty, String stringDateTill, int userId) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d itemName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateFrom \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateTill \u003d stringDateTill;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReserveCommand(String roomName, String stringDateFrom, String stringDateTill, int userId) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d roomName;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateFrom \u003d stringDateFrom;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateTill \u003d stringDateTill;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReserveCommand(String itemName, int qty, String stringDateFrom, String stringDateTill, int userId) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d itemName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateFrom \u003d stringDateFrom;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDateTill \u003d stringDateTill;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws RimsException, ParseException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (!(stringDateFrom \u003d\u003d null)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            dateFrom \u003d resources.stringToDate(stringDateFrom);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        dateTill \u003d resources.stringToDate(stringDateTill);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e allOfResource \u003d resources.getAllOfResource(resourceName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e bookedResources \u003d new ArrayList\u003cResource\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int qtyBooked \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int j \u003d 0; j \u003c allOfResource.size(); j++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d allOfResource.get(j);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.isAvailableFrom(dateFrom, dateTill)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                thisResource.book(resources.generateReservationId(), userId, dateFrom, dateTill);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                bookedResources.add(thisResource);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                qtyBooked++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (qtyBooked \u003d\u003d qty) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (qtyBooked !\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"Done! I\u0027ve marked these resources as loaned:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c bookedResources.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(bookedResources.get(i).toString() + \" (ID: \" + bookedResources.get(i).getResourceId() + \")\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            throw new RimsException(\"This item is not available between the dates you\u0027ve selected!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 15,
      "rabhijit": 75
    }
  },
  {
    "path": "src/main/java/rims/command/ReturnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// c \u003d new ReturnCommand(userId, borrowedResource, reservationId);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ReturnCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int userId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int resourceId;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int reservationId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReturnCommand(int userId, int resourceId, int reservationId) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceId \u003d resourceId;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservationId \u003d reservationId;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws RimsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Resource thisResource \u003d resources.getResourceById(resourceId);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Reservation cancelledReservation \u003d thisResource.getReservations().getReservationById(reservationId);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        thisResource.getReservations().cancelReservationById(reservationId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.print(\"Done! I\u0027ve removed the following reservation:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.print(cancelledReservation.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 4,
      "rabhijit": 31
    }
  },
  {
    "path": "src/main/java/rims/core/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.CloseCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.ReserveCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.ReturnCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.CalendarCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    ResourceList resources;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Parser(Ui ui, ResourceList resources) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command parseInput(String input) throws RimsException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (input.equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new CloseCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (input.equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"cal\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "            CalendarCommand.printCal();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"list\") \u0026\u0026 words.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String paramType \u003d words[1].substring(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (paramType.equals(\"date\") || paramType.equals(\"room\") || paramType.equals(\"item\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String param \u003d ui.getInput(\"Enter the name of the resource you\u0027d like to view a detailed list of:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ListCommand(paramType, param);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"Invalid list parameter!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"add\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String roomOrItem \u003d ui.getInput(\"Would you like to add an item or a room to the inventory?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (roomOrItem.equals(\"room\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String roomName \u003d ui.getInput(\"Enter the name of the room you wish to add:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new AddCommand(roomName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (roomOrItem.equals(\"item\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String itemName \u003d ui.getInput(\"Enter the name of the item you wish to add:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int qty \u003d Integer.parseInt(ui.getInput(\"How many of this item do you wish to add?\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new AddCommand(itemName, qty);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"Please choose a room or item to add to your inventory.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String roomOrItem \u003d ui.getInput(\"Would you like to delete an item or room from the inventory?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (roomOrItem.equals(\"room\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String roomName \u003d ui.getInput(\"Enter the name of the room you wish to delete:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new DeleteCommand(roomName, \"room\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (roomOrItem.equals(\"item\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String itemName \u003d ui.getInput(\"Enter the name of the item you wish to delete:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new DeleteCommand(itemName, \"item\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"Please choose a room or item to delete from your inventory.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"loan\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String roomOrItem \u003d ui.getInput(\"Would you like to loan an item or room from the inventory?\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (roomOrItem.equals(\"room\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String roomName \u003d ui.getInput(\"Enter the name of the room you wish to loan:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                // printing out existing room bookings"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!resources.isRoom(roomName)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new RimsException(\"There is no such room!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d resources.getResourceByName(roomName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateTill \u003d ui.getInput(\"Enter the date you wish to return this room:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int userId \u003d Integer.parseInt(ui.getInput(\"Enter your user ID:\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReserveCommand(roomName, dateTill, userId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (roomOrItem.equals(\"item\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String itemName \u003d ui.getInput(\"Enter the name of the item you wish to loan:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!resources.isItem(itemName)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new RimsException(\"There is no such item!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ArrayList\u003cResource\u003e allOfItem \u003d resources.getAllOfResource(itemName);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                for (int i \u003d 0; i \u003c allOfItem.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Resource thisResource \u003d allOfItem.get(i);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.printDash();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printDash();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int qty \u003d Integer.parseInt(ui.getInput(\"Enter how many of this item you wish to borrow:\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateTill \u003d ui.getInput(\"Enter the date you wish to return this item:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int userId \u003d Integer.parseInt(ui.getInput(\"Enter your user ID:\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReserveCommand(itemName, qty, dateTill, userId);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"Please choose a room or item to loan from your inventory.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"reserve\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String roomOrItem \u003d ui.getInput(\"Would you like to reserve an item or room from the inventory?\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (roomOrItem.equals(\"room\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String roomName \u003d ui.getInput(\"Enter the name of the room you wish to reserve:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                // printing out existing room bookings"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!resources.isRoom(roomName)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new RimsException(\"There is no such room!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d resources.getResourceByName(roomName);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateFrom \u003d ui.getInput(\"Enter the date from which you wish to reserve this room:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateTill \u003d ui.getInput(\"Enter the date you wish to return this room:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int userId \u003d Integer.parseInt(ui.getInput(\"Enter your user ID:\"));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReserveCommand(roomName, dateFrom, dateTill, userId);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (roomOrItem.equals(\"item\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String itemName \u003d ui.getInput(\"Enter the name of the item you wish to reserve:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (!resources.isItem(itemName)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new RimsException(\"There is no such item!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ArrayList\u003cResource\u003e allOfItem \u003d resources.getAllOfResource(itemName);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                for (int i \u003d 0; i \u003c allOfItem.size(); i++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Resource thisResource \u003d allOfItem.get(i);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ReservationList thisResourceReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.printDash();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    ui.print(thisResource.toString() + \" (ID: \" + thisResource.getResourceId() + \")\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!thisResourceReservations.isEmpty()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        for (int j \u003d 0; j \u003c thisResourceReservations.size(); j++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            ui.print(\"\\t\" + thisResourceReservations.getReservationByIndex(j).toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        ui.print(\"No bookings for this resource yet!\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printDash();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int qty \u003d Integer.parseInt(ui.getInput(\"Enter how many of this item you wish to reserve:\"));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateFrom \u003d ui.getInput(\"Enter the date from which you wish to reserve this room:\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String dateTill \u003d ui.getInput(\"Enter the date you wish to return this item:\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int userId \u003d Integer.parseInt(ui.getInput(\"Enter your user ID:\"));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReserveCommand(itemName, qty, dateFrom, dateTill, userId);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                throw new RimsException(\"Please choose a room or item to loan from your inventory.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"return\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            int userId \u003d Integer.parseInt(ui.getInput(\"Enter your user ID:\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ReservationList userReservations \u003d resources.getUserBookings(userId);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c userReservations.size(); i++) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Reservation thisReservation \u003d userReservations.getReservationByIndex(i);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource borrowedResource \u003d resources.getResourceById(thisReservation.getResourceId());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(borrowedResource.toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(\"\\t\" + userReservations.getReservationByIndex(i).toString());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            int reservationId \u003d Integer.parseInt(ui.getInput(\"Enter the ID of the reservation you wish to return:\"));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new ReturnCommand(userId, userReservations.getReservationById(reservationId).getResourceId(), reservationId);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            throw new RimsException(\"Please enter a recognizable command!\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 1,
      "isbobby": 17,
      "danielcyc": 3,
      "rabhijit": 195
    }
  },
  {
    "path": "src/main/java/rims/core/ResourceList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Room;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ResourceList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cResource\u003e resources;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ResourceList(ArrayList\u003cResource\u003e resources) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void add(Resource thisResource) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resources.add(thisResource);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void deleteResourceByName(String resourceName) throws RimsException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        boolean deleted \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getName().equals(resourceName)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.remove(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                deleted \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (!deleted) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            throw new RimsException(\"No such resource found!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void deleteResourceById(int resourceId) throws RimsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        boolean deleted \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getResourceId() \u003d\u003d resourceId) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.remove(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                deleted \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (!deleted) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            throw new RimsException(\"No such resource ID found!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ArrayList\u003cResource\u003e getResources() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resources.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int generateResourceId() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d getResourceById(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            catch (RimsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource getResourceByIndex(int indexNo) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources.get(indexNo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource getResourceByName(String resourceName) throws RimsException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getName().equals(resourceName)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisResource;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new RimsException(\"No such resource!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource getResourceById(int resourceId) throws RimsException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getResourceId() \u003d\u003d resourceId) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisResource;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new RimsException(\"No such resource ID!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isItem(String resourceName) throws RimsException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Resource thisResource \u003d getResourceByName(resourceName);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return (thisResource instanceof Item);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isRoom(String resourceName) throws RimsException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Resource thisResource \u003d getResourceByName(resourceName);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return (thisResource instanceof Room);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ArrayList\u003cResource\u003e getAllOfResource(String resourceName) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e allOfResource \u003d new ArrayList\u003cResource\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getName().equals(resourceName)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                allOfResource.add(thisResource);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return allOfResource;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getNumberOfResource(String resourceName) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d getResourceByIndex(i);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getName().equals(resourceName)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getAvailableNumberOfResource(String resourceName) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e allOfResource \u003d getAllOfResource(resourceName);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c allOfResource.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (allOfResource.get(i).isCurrentlyAvailable()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // overloaded"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getAvailableNumberOfResource(String resourceName, Date dateFrom, Date dateTill) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e allOfResource \u003d getAllOfResource(resourceName);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c allOfResource.size(); i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (allOfResource.get(i).isCurrentlyAvailable()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getBookedNumberOfResource(String resourceName) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e allOfResource \u003d getAllOfResource(resourceName);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c allOfResource.size(); i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!allOfResource.get(i).isCurrentlyAvailable()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReservationList getUserBookings(int userId) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ReservationList userBookings \u003d new ReservationList();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ReservationList thisResourceUserReservations \u003d getResourceByIndex(i).getUserReservations(userId);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int j \u003d 0; j \u003c thisResourceUserReservations.size(); j++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                userBookings.add(thisResourceUserReservations.getReservationByIndex(j));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return userBookings;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int generateReservationId() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int reservationId \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d resources.get(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            reservationId +\u003d thisResource.getReservations().size();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservationId;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String dateToString(Date thisDate) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d format.format(thisDate);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDateToPrint(Date date) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat dayFormat \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int day \u003d Integer.parseInt(dayFormat.format(date)) % 10;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String suffix \u003d day \u003d\u003d 1 ? \"st\" : (day \u003d\u003d 2 ? \"nd\" : (day \u003d\u003d 3 ? \"rd\" : \"th\"));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d (new SimpleDateFormat(\"EEEEE, \")).format(date) + (dayFormat.format(date)) + suffix + \" of \" + (new SimpleDateFormat(\"MMMMM yyyy, hh:mm aaa\")).format(date);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 1,
      "aarushisingh1": 3,
      "isbobby": 26,
      "rabhijit": 177
    }
  },
  {
    "path": "src/main/java/rims/core/Rim.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Rim {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private ResourceList resources;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Rim(String resourceFilePath, String reserveFilePath) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        storage \u003d new Storage(resourceFilePath, reserveFilePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resources \u003d new ResourceList(storage.getResources());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        parser \u003d new Parser(ui, resources);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void run() throws Exception, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Boolean toExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (!toExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Command c \u003d parser.parseInput(ui.getInput());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c.execute(ui, storage, resources);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                toExit \u003d c.getExitCode();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            catch (RimsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                e.displayError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static void main(String[] args) throws Exception, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        new Rim(\"data/resources.txt\", \"data/reserves.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 5,
      "rabhijit": 35
    }
  },
  {
    "path": "src/main/java/rims/core/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.Room;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * Resource.txt [ resource id ] [ type ] [ name ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * Reserve.txt [ reservation id ] [ resource id ] [ user id ] [ date from ] [ date until ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected ArrayList\u003cResource\u003e resources \u003d new ArrayList\u003cResource\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected File resourceFile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected File reservationFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Storage(String resourceFile, String reserveFile) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceFile \u003d new File(resourceFile);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservationFile \u003d new File(reserveFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        readResourceFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Obtains the contents of a ResourceList line by line from a text file in a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * specified file path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Data retrieval:\u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 1. Open the resource file\u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 2. Loop through each single entry to fetch [ resource id ] [ type ] [ name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * ]\u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 3. For each entry, open reservsation file and fetch any reservations under"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * this resource_id \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 4. Create a new resource object using the above data \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 5. Add this object to ResourceList object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws FileNotFoundException when specified file path does not lead to a"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               valid file type."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException        when unable to parse an integer for ID or"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               checking if a resource is booked."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void readResourceFile() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(resourceFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String[] input \u003d fileScanner.nextLine().split(\",\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ReservationList reservations \u003d readReserveFile(input[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (input[1].equals(\"I\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Item newItem \u003d new Item(Integer.parseInt(input[0]), input[2], reservations);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.add(newItem);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (input[1].equals(\"R\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Room newRoom \u003d new Room(Integer.parseInt(input[0]), input[2], reservations);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.add(newRoom);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Obtains the contents of a ResourceList line by line from a text file in a"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * specified file path."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws FileNotFoundException when specified file path does not lead to a"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               valid file type."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException        when unable to parse an integer for ID or"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               checking if a resource is booked."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReservationList readReserveFile(String resourceId) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(reservationFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ReservationList resourceReservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String[] line \u003d fileScanner.nextLine().split(\",\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (line[1].equals(resourceId)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Reservation newReservation \u003d new Reservation(Integer.parseInt(line[0]), Integer.parseInt(line[1]), Integer.parseInt(line[2]), line[3], line[4]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (newReservation.isStillValid()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    resourceReservations.add(newReservation);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resourceReservations;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Put contents of a ResourceList into a text file for future reference."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param resources ResourceList to put contents into text file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws IOException when file given is directory, or file does not exist and"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                     cannot be created."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void saveToFile(ArrayList\u003cResource\u003e resources) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        BufferedWriter resourceFileWriter \u003d new BufferedWriter(new FileWriter(resourceFile, false));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        BufferedWriter reservationFileWriter \u003d new BufferedWriter(new FileWriter(reservationFile, false));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String resourceLine;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String reservationLine;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Resource thisResource \u003d resources.get(i);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            resourceFileWriter.write(thisResource.toDataFormat());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            resourceFileWriter.newLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ReservationList thisReservationList \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int j \u003d 0; j \u003c thisReservationList.size(); j++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                reservationLine \u003d thisReservationList.getReservationByIndex(j).toDataFormat();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                reservationFileWriter.write(reservationLine);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                reservationFileWriter.newLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                // can this be simplified / moved elsewhere?"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceFileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        reservationFileWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cResource\u003e getResources() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 10,
      "isbobby": 51,
      "rabhijit": 62
    }
  },
  {
    "path": "src/main/java/rims/core/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Scanner inputScanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int intInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String line \u003d \"____________________________________________________________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String dash \u003d \"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String hash \u003d \"********************************************************************************************************************************************\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String tab \u003d \"\\t\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected ArrayList\u003cString\u003e welcomeMsg \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"Welcome to RIMS, your Resource \u0026 Inventory Management System.\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                                 \"How can I help you?\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected ArrayList\u003cString\u003e commands \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"add - add a new resource to inventory\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                               \"delete - delete an existing resource from inventory\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                               \"loan - loan out an item from now till your desired future date\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                               \"reserve - reserve an item between two future dates\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                               \"return - return a loan or reservation\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                                                                               \"list - see all resources and current reservations\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        welcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getInput(String question) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrint(question);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getIntegerInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        intInput \u003d inputScanner.nextInt();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return intInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getIntegerInput(String question) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrint(question);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        intInput \u003d inputScanner.nextInt();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return intInput;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printDash() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + dash);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void print(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c inputs.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            System.out.println(\"\\t\" + inputs.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrintArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printArray(inputs);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrint(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        print(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrintArray(welcomeMsg);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrintArray(commands);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        String logo \u003d \"\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"          _____                    _____                    _____                    _____          \\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"         /\\\\    \\\\                  /\\\\    \\\\                  /\\\\    \\\\                  /\\\\    \\\\         \\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"        /::\\\\    \\\\                /::\\\\    \\\\                /::\\\\____\\\\                /::\\\\    \\\\        \\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       /::::\\\\    \\\\               \\\\:::\\\\    \\\\              /::::|   |               /::::\\\\    \\\\       \\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"      /::::::\\\\    \\\\               \\\\:::\\\\    \\\\            /:::::|   |              /::::::\\\\    \\\\      \\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"     /:::/\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\          /::::::|   |             /:::/\\\\:::\\\\    \\\\     \\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"    /:::/__\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\        /:::/|::|   |            /:::/__\\\\:::\\\\    \\\\    \\n\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"   /::::\\\\   \\\\:::\\\\    \\\\              /::::\\\\    \\\\      /:::/ |::|   |            \\\\:::\\\\   \\\\:::\\\\    \\\\   \\n\" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"  /::::::\\\\   \\\\:::\\\\    \\\\    ____    /::::::\\\\    \\\\    /:::/  |::|___|______    ___\\\\:::\\\\   \\\\:::\\\\    \\\\  \\n\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \" /:::/\\\\:::\\\\   \\\\:::\\\\____\\\\  /\\\\   \\\\  /:::/\\\\:::\\\\    \\\\  /:::/   |::::::::\\\\    \\\\  /\\\\   \\\\:::\\\\   \\\\:::\\\\    \\\\ \\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"/:::/  \\\\:::\\\\   \\\\:::|    |/::\\\\   \\\\/:::/  \\\\:::\\\\____\\\\/:::/    |:::::::::\\\\____\\\\/::\\\\   \\\\:::\\\\   \\\\:::\\\\____\\\\\\n\" +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"\\\\::/   |::::\\\\  /:::|____|\\\\:::\\\\  /:::/    \\\\::/    /\\\\::/    / ~~~~~/:::/    /\\\\:::\\\\   \\\\:::\\\\   \\\\::/    /\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \" \\\\/____|:::::\\\\/:::/    /  \\\\:::\\\\/:::/    / \\\\/____/  \\\\/____/      /:::/    /  \\\\:::\\\\   \\\\:::\\\\   \\\\/____/ \\n\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       |:::::::::/    /    \\\\::::::/    /                       /:::/    /    \\\\:::\\\\   \\\\:::\\\\    \\\\     \\n\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       |::|\\\\::::/    /      \\\\::::/____/                       /:::/    /      \\\\:::\\\\   \\\\:::\\\\____\\\\    \\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       |::| \\\\::/____/        \\\\:::\\\\    \\\\                      /:::/    /        \\\\:::\\\\  /:::/    /    \\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       |::|  ~|               \\\\:::\\\\    \\\\                    /:::/    /          \\\\:::\\\\/:::/    /     \\n\" +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       |::|   |                \\\\:::\\\\    \\\\                  /:::/    /            \\\\::::::/    /      \\n\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"       \\\\::|   |                 \\\\:::\\\\____\\\\                /:::/    /              \\\\::::/    /       \\n\" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"        \\\\:|   |                  \\\\::/    /                \\\\::/    /                \\\\::/    /        \\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"         \\\\|___|                   \\\\/____/                  \\\\/____/                  \\\\/____/         \\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                tab + \"                                                                                                    \\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 24,
      "danielcyc": 1,
      "rabhijit": 101
    }
  },
  {
    "path": "src/main/java/rims/exception/RimsException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class RimsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String tab \u003d \"\\t\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String hash \u003d \"********************************************************************************************************************************************\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public RimsException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void displayError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + \"ERROR: \" + error);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 17
    }
  },
  {
    "path": "src/main/java/rims/resource/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Item extends Resource {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Item(int resourceId, String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(resourceId, name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Item(int resourceId, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(resourceId, name, reservations);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 1,
      "rabhijit": 9
    }
  },
  {
    "path": "src/main/java/rims/resource/Reservation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class Reservation {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private int reservationId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private int userId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private int resourceId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Date dateFrom;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Date dateTill;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This builds an reservation from given user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     * @param reservationId"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     * @param resourceId"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     * @param userId"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param until"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for creating brand new Reservation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Reservation(int reservationId, int resourceId, int userId, Date dateFrom, Date dateTill) throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservationId \u003d reservationId;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceId \u003d resourceId;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateFrom \u003d dateFrom;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateTill \u003d dateTill;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for loading from Storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Reservation(int reservationId, int resourceId, int userId, String dateFrom, String dateTill) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservationId \u003d reservationId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceId \u003d resourceId;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateFrom \u003d stringToDate(dateFrom);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.dateTill \u003d stringToDate(dateTill);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getReservationId() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservationId;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getResourceId() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resourceId;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getUserId() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return userId;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return dateFrom;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return dateTill;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isStillValid() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date currentDate \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (currentDate.after(dateFrom) \u0026\u0026 currentDate.after(dateTill)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // to change"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"[\" + reservationId + \"]\" + \" borrowed by user: \" + userId + \" from \" + getDateToPrint(dateFrom) + \" till \" + getDateToPrint(dateTill);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservationId + \",\" + resourceId + \",\" + userId + \",\" + dateToString(dateFrom) + \",\" + dateToString(dateTill);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String dateToString(Date thisDate) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String stringDate \u003d format.format(thisDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDateToPrint(Date date) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat dayFormat \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int day \u003d Integer.parseInt(dayFormat.format(date)) % 10;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String suffix \u003d day \u003d\u003d 1 ? \"st\" : (day \u003d\u003d 2 ? \"nd\" : (day \u003d\u003d 3 ? \"rd\" : \"th\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d (new SimpleDateFormat(\"EEEEE, \")).format(date) + (dayFormat.format(date)) + suffix + \" of \" + (new SimpleDateFormat(\"MMMMM yyyy, hh:mm aaa\")).format(date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 42,
      "rabhijit": 58
    }
  },
  {
    "path": "src/main/java/rims/resource/ReservationList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.RimsException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// need a method to cancel reservation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReservationList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cReservation\u003e reservations;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations \u003d new ArrayList\u003cReservation\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cReservation\u003e getReservationList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.reservations;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reservation getReservationByIndex(int i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return reservations.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Reservation getReservationById(int reservationId) throws RimsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Reservation thisReservation \u003d getReservationByIndex(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisReservation.getReservationId() \u003d\u003d reservationId) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisReservation;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new RimsException(\"No such resource ID!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void add(Reservation newReservation) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        reservations.add(newReservation);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void createReservation(int reservationId, int resourceId, int userId, Date startDate, Date endDate) throws ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Reservation newReservation \u003d new Reservation(reservationId, resourceId, userId, startDate, endDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        add(newReservation);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void cancelReservationById(int reservationId) throws RimsException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        boolean deleted \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (reservations.get(i).getReservationId() \u003d\u003d reservationId) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                reservations.remove(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                deleted \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (!deleted) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            throw new RimsException(\"No such reservation ID!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return reservations.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservations.isEmpty();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isCurrentlyAvailable() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date currentDate \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Reservation thisReservation \u003d getReservationByIndex(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (currentDate.after(thisReservation.getStartDate()) \u0026\u0026 currentDate.before(thisReservation.getEndDate())) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isAvailableFrom(Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (reservations.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Reservation thisReservation \u003d getReservationByIndex(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if ((startDate.after(thisReservation.getStartDate()) \u0026\u0026 startDate.before(thisReservation.getEndDate())) || (endDate.after(thisReservation.getStartDate()) \u0026\u0026 endDate.before(thisReservation.getEndDate()))) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Reservation getCurrentBooking() throws RimsException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date currentDate \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Reservation thisReservation \u003d getReservationByIndex(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (currentDate.after(thisReservation.getStartDate()) \u0026\u0026 currentDate.before(thisReservation.getEndDate())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisReservation;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new RimsException(\"Item is not currently booked!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // modify"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReservationList getUserReservations(int userId) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ReservationList userReservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Reservation thisReservation \u003d getReservationByIndex(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisReservation.getUserId() \u003d\u003d userId) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                userReservations.add(thisReservation);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return userReservations;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 30,
      "rabhijit": 88
    }
  },
  {
    "path": "src/main/java/rims/resource/Resource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Resource {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int resourceId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ReservationList reservations;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for newly created Resource with no Reservations yet"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource(int resourceId, String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceId \u003d resourceId;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for creating existing Resource from data file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource(int resourceId, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resourceId \u003d resourceId;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"[\" + getType() + \"] \" + getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resourceId + \",\" + type + \",\" + name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getResourceId() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resourceId;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (getClass().getSimpleName().equals(\"Item\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            return \"I\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"R\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList getReservations() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservations;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isCurrentlyAvailable() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservations.isCurrentlyAvailable();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isAvailableFrom(Date dateFrom, Date dateTill) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservations.isAvailableFrom(dateFrom, dateTill);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void book(int reservationId, int userId, Date startDate, Date endDate) throws ParseException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        reservations.createReservation(reservationId, resourceId, userId, startDate, endDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReservationList getUserReservations(int userId) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return reservations.getUserReservations(userId);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 20,
      "rabhijit": 52
    }
  },
  {
    "path": "src/main/java/rims/resource/Room.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Room extends Resource {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    //constructing new Room instance using string data from resource.txt"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Room(int resourceId, String name){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(resourceId, name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Room(int resourceId, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(resourceId, name, reservations);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 1,
      "rabhijit": 10
    }
  }
]
