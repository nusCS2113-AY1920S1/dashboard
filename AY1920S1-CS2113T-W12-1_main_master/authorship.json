[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveBaseName \u003d \"rim\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveVersion \u003d \"1.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    mainClassName \u003d \"rims/core/Rim\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 3,
      "-": 44
    }
  },
  {
    "path": "src/main/java/rims/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.exception.RimException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public AddCommand(String itemName, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.resourceName \u003d itemName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (type.equals(\"room\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            this.type \u003d \"R\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else if (type.equals(\"item\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            this.type \u003d \"I\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws RimException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int resource_id \u003d resources.generateResourceId();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList list \u003d new ReservationList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource newResource \u003d new Item(resource_id, type, resourceName, list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources.addResource(newResource);   "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.print(\"The following resource(s) have been successfully added:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.print(newResource.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 20,
      "isbobby": 16
    }
  },
  {
    "path": "src/main/java/rims/command/CalendarCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "public class CalendarCommand{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    public CalendarCommand(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danielcyc": 12
    }
  },
  {
    "path": "src/main/java/rims/command/CloseCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class CloseCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        storage.saveToFiles(resources.getResourceList());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        setExitCode();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 7,
      "rabhijit": 8
    }
  },
  {
    "path": "src/main/java/rims/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * The parent of all possible commands understood by Duke. Sets the exit code"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * to false by default and lists methods common to all the commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Boolean exitCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Boolean getExitCode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return exitCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void setExitCode() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    abstract public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 4,
      "rabhijit": 23
    }
  },
  {
    "path": "src/main/java/rims/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int resource_id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public DeleteCommand(int resource_id) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d resource_id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Implementing cascade delete: select a item to delete via resource ID, it will"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * delete the resource itself from the resource file as well as all reservations"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * associated with it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Use with care!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources.deleteResourceByResourceId(resource_id);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 13,
      "isbobby": 16
    }
  },
  {
    "path": "src/main/java/rims/command/HomeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class HomeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.Home();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11
    }
  },
  {
    "path": "src/main/java/rims/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String param \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String listType \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for basic \u0027list\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    // for list /paramType"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ListCommand(String paramType, String param) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        listType \u003d paramType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.param \u003d param;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (listType \u003d\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.ErrorPrint(\"Resources\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printEmptyLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.printResourceArrayWithReservations(resources.getResourceList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printEmptyLine();            "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         else if (listType.equals(\"date\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.print(\"Here are the resources in your list on this date:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "//             ui.printEmptyLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printArray(resources.generateAvailableListByDate(param));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printEmptyLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printArray(resources.generateBookedListByDate(param));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         else if (listType.equals(\"item\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.print(\"Here are the \" + param + \"s in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printEmptyLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printArray(resources.generateListByItem(param));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         else if (listType.equals(\"room\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.print(\"Here is the status of \" + param + \":\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printArray(resources.generateListByRoom(param));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "// //            ui.printEmptyLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "// //            ui.printArray(resources.generateBookedListByDate(itemName));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//             ui.printLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "//         }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 31,
      "rabhijit": 26
    }
  },
  {
    "path": "src/main/java/rims/command/ReserveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReserveCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int reservation_id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int user_id;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int resource_id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReserveCommand(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This command supports the reservation for a single resource."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param user_id"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param startDate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param endDate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReserveCommand(int resource_id, int user_id, String startDate, String endDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d resource_id;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.user_id \u003d user_id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * A reserve command requires id, type, name and quantity"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @exception IDexists"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @exception quantityvalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource thisResource \u003d resources.getResourceByResourceId(resource_id);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList currentReservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        reservation_id \u003d currentReservations.generateReservationId();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Reservation newReservation \u003d new Reservation(reservation_id, resource_id, user_id, startDate, endDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printSuccessReservation(newReservation);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        currentReservations.addNewReservation(newReservation);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 53
    }
  },
  {
    "path": "src/main/java/rims/command/ReturnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ReturnCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int resource_id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int reservation_id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReturnCommand(int resource_id, int reservation_id){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id\u003dresource_id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservation_id\u003dreservation_id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources.deleteSingleReservation(resource_id, reservation_id);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11,
      "rabhijit": 8
    }
  },
  {
    "path": "src/main/java/rims/command/TestCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class TestCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        // TODO Auto-generated method stub"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 14
    }
  },
  {
    "path": "src/main/java/rims/command/UnknownCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.ResourceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public UnknownCommand(String input){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.input\u003dinput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.ErrorPrint(\"Sorry, RIM does not support:\" + \u0027\u003c\u0027 + input + \"\u003e\" + \" as a command yet.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.Home();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 17
    }
  },
  {
    "path": "src/main/java/rims/core/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.CloseCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.HomeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.ReturnCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.UnknownCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    Reader reader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    ResourceList resources;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Parser(ResourceList resources, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        reader \u003d new Reader(resources, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command parseInput(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d new HomeCommand(); // temporary default until exception handling finished"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (input.equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new CloseCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (input.equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        // } else if (words[0].equals(\"list\") \u0026\u0026 words.length \u003e 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //     String param \u003d ui.getInput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //     String paramType \u003d words[1].substring(1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //     if (paramType.equals(\"date\") || paramType.equals(\"room\") || paramType.equals(\"item\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //         c \u003d new ListCommand(paramType, param);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //     } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //         ;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //         // throw new RimException (invalid paramType)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //     }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (words[0].equals(\"reserve\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reader.ReadReserveCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if ((words[0].equals(\"cancel\") || words[0].equals(\"return\")) \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reader.ReadReturnCommandByUserId();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (words[0].equals(\"add\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reader.ReadAddCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reader.ReadDeleteResourceCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d new UnknownCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 1,
      "isbobby": 36,
      "rabhijit": 14
    }
  },
  {
    "path": "src/main/java/rims/core/Read.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "interface Read {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 13
    }
  },
  {
    "path": "src/main/java/rims/core/Reader.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.HomeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.ReserveCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.ReturnCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class Reader implements Read {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String resourceName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int resource_id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int user_id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int reservation_id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private ResourceList resources;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reader(ResourceList resources, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadAddCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Would you like to add an item or a room to the inventory?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String choice \u003d ui.getInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (choice.equals(\"room\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the name of the room\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String resourceName \u003d ui.getInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d new AddCommand(resourceName, \"room\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (choice.equals(\"item\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the name of the item\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String resourceName \u003d ui.getInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d new AddCommand(resourceName, \"item\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadReserveCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Enter \u0027room\u0027 or \u0027item\u0027 to reserve a room or an item.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String choice \u003d ui.getInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (choice.equals(\"room\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reserveRoom();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else if (choice.equals(\"item\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d reserveItem();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else {//error"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadReturnCommandByUserId(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Enter your user ID to see your current reservations.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        user_id\u003dInteger.parseInt(ui.getInput());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList thisReservations \u003d resources.getReservationsByUserId(user_id);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printReservationArrayReturn(thisReservations);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Enter the resource ID of the resource you wish to return\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resource_id\u003dInteger.parseInt(ui.getInput());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.print(\"These are your reservations for the selected item\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printReservations(resource_id, resources);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Select the reservation to cancel/return by entering the reservation ID\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        reservation_id\u003dInteger.parseInt(ui.getInput());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        c \u003d new ReturnCommand(resource_id,reservation_id);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadDeleteResourceCommand(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        c \u003d deleteItem();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method will first print out a list of all rooms that are available. Then"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * it will ask for an resource id input, and flushes out all the reservations"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * that is currently under this resource."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Lastly, it will ask for a pair of dates and the user\u0027s user id."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return ReserveCommand(); "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Command reserveRoom() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d new ReserveCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printRooms(this.resources.getResourceList());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resource_id \u003d ui.getResourceId();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printReservations(resource_id, resources);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cString\u003e PairOfDates \u003d ui.getPairOfDates();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        startDate \u003d PairOfDates.get(0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        endDate \u003d PairOfDates.get(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        user_id \u003d ui.getUserId();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        c \u003d new ReserveCommand(resource_id, user_id, startDate, endDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Command reserveItem() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d new ReserveCommand();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printItem(this.resources.getResourceList());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resource_id \u003d ui.getResourceId();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printReservations(resource_id, resources);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cString\u003e PairOfDates \u003d ui.getPairOfDates();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        startDate \u003d PairOfDates.get(0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        endDate \u003d PairOfDates.get(1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        user_id \u003d ui.getUserId();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        c \u003d new ReserveCommand(resource_id, user_id, startDate, endDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method flushes out all resources, then takes in a resource ID from the user and delete it."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return DeleteCommand(resource_id)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command deleteItem(){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Command c \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.print(\"Enter a resource ID to delete the resource\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printResourceArray(resources);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resource_id\u003dui.getResourceId();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        c \u003d new DeleteCommand(resource_id);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 146
    }
  },
  {
    "path": "src/main/java/rims/core/ResourceList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ResourceList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cResource\u003e resources;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ResourceList(ArrayList\u003cResource\u003e resources, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // Create"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void addResource(Resource resource) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources.add(resource);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int generateResourceId(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int resource_id\u003d0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if(resources.size()\u003e0){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            resource_id\u003d( resources.get( resources.size()-1 ).getResourceId() ) + 1 ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resource_id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // Read"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cResource\u003e getResourceList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cString\u003e getResourceArrayWithReservations() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resources.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method returns all reservations under a specified user id "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * (Some work needs to be done to tidy up temp variables and constructors)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param user_id"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return List of reservation under the given user id (as reservationList)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList getReservationsByUserId (int user_id ){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList list \u003d new ReservationList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for(int i\u003d0; i \u003c resources.size(); i++ ){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Resource thisResource \u003d resources.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ReservationList thisList \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            for(int j\u003d0; j \u003c thisList.size(); j ++){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Reservation thisReservation \u003d new Reservation();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                thisReservation \u003d thisList.getReservationByIndex(j);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                if (thisReservation.getUid()\u003d\u003duser_id){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                    list.addNewReservation(thisReservation);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource getResourceByIndex(int id) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource resource \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getResourceId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                resource \u003d resources.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resource;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource getResourceByName(String resourceName) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource resource \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getResourceName().equals(resourceName)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                resource \u003d resources.get(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resource;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method return a resource that matches the given resource Id"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource getResourceByResourceId(int resource_id) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource resource \u003d new Resource(){};"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getResourceId() \u003d\u003d resource_id) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                resource \u003d resources.get(i);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return resource;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // update"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // delete"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void deleteResourceByResourceId(int resource_id) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int index_to_remove \u003d -1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getResourceId() \u003d\u003d resource_id) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                index_to_remove \u003d i;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (index_to_remove !\u003d -1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"The following resource and its reservations are removed:\\n\" + \"\\t\"+ resources.get(index_to_remove).toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            resources.remove(index_to_remove);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Delete a single reservation, a single reservation can only be uniquely identified through a pair of resource id and reservation id"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * First query for the resource, then remove the reservation via id"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservation_id"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void deleteSingleReservation(int resource_id, int reservation_id){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource thisResource \u003d getResourceByResourceId(resource_id);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        thisResource.removeReservationByReservationId(reservation_id);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 1,
      "aarushisingh1": 7,
      "isbobby": 119,
      "rabhijit": 10
    }
  },
  {
    "path": "src/main/java/rims/core/Rim.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Rim {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private ResourceList resources;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Rim(String filePath, String rfilepath) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        storage \u003d new Storage(filePath,rfilepath,ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources \u003d new ResourceList(storage.getResources(), ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        parser \u003d new Parser(resources, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void run() throws Exception, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Boolean toExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (!toExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Command c \u003d parser.parseInput(ui.getInput());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c.execute(ui, storage, this.resources);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            toExit \u003d c.getExitCode();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static void main(String[] args) throws Exception, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        new Rim(\"data/resources.txt\", \"data/reserves.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11,
      "rabhijit": 24
    }
  },
  {
    "path": "src/main/java/rims/core/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * Current format of data storage: -"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * Resource.txt [ resource id ] [ type ] [ name ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * Reserve.txt [ reservation id ] [ resource id ] [ user id ] [ date from ] ["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * date until ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": " * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cResource\u003e resources;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cReservation\u003e Reservations;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ReservationList TempReservations;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected File resourceFile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected File reservationFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Storage(String ResourceFileName, String ReserveFileName, Ui ui)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resourceFile \u003d new File(ResourceFileName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        reservationFile \u003d new File(ReserveFileName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resources \u003d new ArrayList\u003cResource\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Reservations \u003d new ArrayList\u003cReservation\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        TempReservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        readFromResourceFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Obtains the contents of a ResourceList line by line from a text file in a"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * specified file path."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Data retrieval:\u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 1. Open the resource file\u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 2. Loop through each single entry to fetch [ resource id ] [ type ] [ name"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * ]\u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 3. For each entry, open reservsation file and fetch any reservations under"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * this resource_id \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 4. Create a new resource object using the above data \u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * 5. Add this object to ResourceList object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws FileNotFoundException when specified file path does not lead to a"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               valid file type."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException        when unable to parse an integer for ID or"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               checking if a resource is booked."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void readFromResourceFile() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(resourceFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Resource input \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String[] line \u003d fileScanner.nextLine().split(\",\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String resource_id \u003d line[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ReservationList reservations \u003d readReservationsFromReserveFile(resource_id);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            input \u003d new Item(line[0], line[1], line[2], reservations);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            this.resources.add(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Obtains the contents of a ResourceList line by line from a text file in a"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * specified file path."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws FileNotFoundException when specified file path does not lead to a"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               valid file type."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException        when unable to parse an integer for ID or"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                               checking if a resource is booked."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList readReservationsFromReserveFile(String resource_id)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(reservationFile);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList tempreservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String[] line \u003d fileScanner.nextLine().split(\",\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (line[1].equals(resource_id)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Reservation newReservation \u003d new Reservation(line[0], line[1], line[2], line[3], line[4]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                tempreservations.addNewReservation(newReservation);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList reservations \u003d new ReservationList(tempreservations.getReservationList(), ui);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return reservations;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Put contents of a ResourceList into a text file for future reference."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param resources ResourceList to put contents into text file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws IOException when file given is directory, or file does not exist and"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                     cannot be created."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void saveToFiles(ArrayList\u003cResource\u003e resources) throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(resourceFile, false));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Resource thisResource \u003d resources.get(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            line \u003d thisResource.toDataString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            fileWriter.write(line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.ErrorPrint(\"Saved:\" + line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            fileWriter.newLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (thisResource.getReservations().size() \u003e 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ReservationList thisReservationList \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                saveToTempReservationList(thisReservationList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        saveToReservationFile(this.TempReservations);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void saveToTempReservationList(ReservationList reservations) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            this.TempReservations.addNewReservation(reservations.getReservationByIndex(i));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void saveToReservationFile(ReservationList reservations) throws IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        BufferedWriter ReservationfileWriter \u003d new BufferedWriter(new FileWriter(reservationFile, false));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String ReservationLine;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ReservationLine \u003d reservations.getReservationByIndex(i).toDataString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ReservationfileWriter.write(ReservationLine);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.ErrorPrint(\"Saved:\" + ReservationLine);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ReservationfileWriter.newLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationfileWriter.close();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cResource\u003e getResources() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cReservation\u003e getReservations() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return Reservations;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 10,
      "isbobby": 122,
      "rabhijit": 24
    }
  },
  {
    "path": "src/main/java/rims/core/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Reservation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.ReservationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.Resource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Scanner inputScanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int intInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static String line \u003d \"____________________________________________________________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public static String dashline \u003d \"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public static String hash \u003d \"********************************************************************************************************************************************\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static String tab \u003d \"\\t\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Home();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getIntegerInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        intInput \u003d inputScanner.nextInt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return intInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printDashLine() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + dashline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void ErrorPrint(String Error) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + Error);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void print(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c inputs.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            System.out.println(\"\\t\" + inputs.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printResourceArray(ResourceList resources) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            System.out.println(\"\\t\" + resources.getResourceList().get(i).toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method loops through all the resources first, print out the resource."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Then, it goes into each resource and print out all the reservation under this"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * resource."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resources"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printResourceArrayWithReservations(ArrayList\u003cResource\u003e resources) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            printDashLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            print(resources.get(i).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            printEmptyLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            printReservationArray(resources.get(i).getReservations());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            printEmptyLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printReservationArray(ReservationList reservations) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            System.out.println(\"\\t\" + reservations.getReservationByIndex(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printReservationArrayReturn(ReservationList reservations) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            System.out.println(\"\\t\" + reservations.getReservationByIndex(i).toString(\"return\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method takes in an arraylist\u003cresource\u003e because the java remove method"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * re-allocates an memory address, so passing ResourceList results in a null"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * pointer exception"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printRooms(ArrayList\u003cResource\u003e resources) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"List of all rooms:\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getType().equals(\"R\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                System.out.println(\"\\t\" + resources.get(i).toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method takes in an arraylist\u003cresource\u003e because the java remove method"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * re-allocates an memory address, so passing ResourceList results in a null"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * pointer exception"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printItem(ArrayList\u003cResource\u003e resources) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"List of all items:\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c resources.size(); i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (resources.get(i).getType().equals(\"I\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                System.out.println(\"\\t\" + resources.get(i).toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printReservations(int resource_id, ResourceList resources) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource thisResource \u003d resources.getResourceByResourceId(resource_id);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ReservationList reservations \u003d thisResource.getReservations();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (reservations.size() \u003e 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            print(\"List of all reservations under this resource:\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            printReservationArray(reservations);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            print(\"There is currently no reservations under this resource\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * asks the user to enter an resource id, and returns it as an integer"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return input i"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getResourceId() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"Enter the resource ID\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        i \u003d Integer.parseInt(getInput());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * asks the user to enter his user id, and returns it as an integer"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return input i"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getUserId() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"Enter your user ID\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        i \u003d Integer.parseInt(getInput());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method asks user for a pair of dates. The dates are stored in a string"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * array. The first element is the start date and the second element is the end"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * date."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return ArrayList\u003cString\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cString\u003e getPairOfDates() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cString\u003e newpair \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"Enter Start date \u0026 time (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String startdate \u003d getInput();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"Enter End date \u0026 time (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String endDate \u003d getInput();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        newpair.add(startdate);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        newpair.add(endDate);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return newpair;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printSuccessReservation(Reservation reservation) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(\"The following reservation has been made\\n\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        print(reservation.toString());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrintArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printArray(inputs);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrint(String input) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        print(input);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     * Prints a welcome message when Duke is started up."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void welcomeWithLogo() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        formattedPrintArray(new ArrayList\u003cString\u003e(Arrays.asList(\"Hello. I am RIM.\", \"Resource \u0026 Inventory Management\","
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                \"The facilities and logistics management system.\", \"What can I do for you?\")));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        formattedPrintArray(new ArrayList\u003cString\u003e(Arrays.asList(\"Hello. I am RIM.\", \"Resource \u0026 Inventory Management\","
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                \"The facilities and logistics management system.\", \"What can I do for you?\")));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void Home() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        list.add(\"add - add new resource to inventory\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        list.add(\"delete - delete existing resource from inventory\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        list.add(\"reserve - add new reservation request\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        list.add(\"return - return/cancel reservation\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        list.add(\"list - see all resources and current reservations\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printArray(list);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        String logo \u003d \"\\n\" +"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"          _____                    _____                    _____                    _____          \\n\" +"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"         /\\\\    \\\\                  /\\\\    \\\\                  /\\\\    \\\\                  /\\\\    \\\\         \\n\" +"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"        /::\\\\    \\\\                /::\\\\    \\\\                /::\\\\____\\\\                /::\\\\    \\\\        \\n\" +"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       /::::\\\\    \\\\               \\\\:::\\\\    \\\\              /::::|   |               /::::\\\\    \\\\       \\n\" +"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"      /::::::\\\\    \\\\               \\\\:::\\\\    \\\\            /:::::|   |              /::::::\\\\    \\\\      \\n\" +"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"     /:::/\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\          /::::::|   |             /:::/\\\\:::\\\\    \\\\     \\n\" +"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"    /:::/__\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\        /:::/|::|   |            /:::/__\\\\:::\\\\    \\\\    \\n\" +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"   /::::\\\\   \\\\:::\\\\    \\\\              /::::\\\\    \\\\      /:::/ |::|   |            \\\\:::\\\\   \\\\:::\\\\    \\\\   \\n\" +"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"  /::::::\\\\   \\\\:::\\\\    \\\\    ____    /::::::\\\\    \\\\    /:::/  |::|___|______    ___\\\\:::\\\\   \\\\:::\\\\    \\\\  \\n\" +"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \" /:::/\\\\:::\\\\   \\\\:::\\\\____\\\\  /\\\\   \\\\  /:::/\\\\:::\\\\    \\\\  /:::/   |::::::::\\\\    \\\\  /\\\\   \\\\:::\\\\   \\\\:::\\\\    \\\\ \\n\" +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"/:::/  \\\\:::\\\\   \\\\:::|    |/::\\\\   \\\\/:::/  \\\\:::\\\\____\\\\/:::/    |:::::::::\\\\____\\\\/::\\\\   \\\\:::\\\\   \\\\:::\\\\____\\\\\\n\" +"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"\\\\::/   |::::\\\\  /:::|____|\\\\:::\\\\  /:::/    \\\\::/    /\\\\::/    / ~~~~~/:::/    /\\\\:::\\\\   \\\\:::\\\\   \\\\::/    /\\n\" +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \" \\\\/____|:::::\\\\/:::/    /  \\\\:::\\\\/:::/    / \\\\/____/  \\\\/____/      /:::/    /  \\\\:::\\\\   \\\\:::\\\\   \\\\/____/ \\n\" +"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       |:::::::::/    /    \\\\::::::/    /                       /:::/    /    \\\\:::\\\\   \\\\:::\\\\    \\\\     \\n\" +"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       |::|\\\\::::/    /      \\\\::::/____/                       /:::/    /      \\\\:::\\\\   \\\\:::\\\\____\\\\    \\n\" +"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       |::| \\\\::/____/        \\\\:::\\\\    \\\\                      /:::/    /        \\\\:::\\\\  /:::/    /    \\n\" +"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       |::|  ~|               \\\\:::\\\\    \\\\                    /:::/    /          \\\\:::\\\\/:::/    /     \\n\" +"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       |::|   |                \\\\:::\\\\    \\\\                  /:::/    /            \\\\::::::/    /      \\n\" +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"       \\\\::|   |                 \\\\:::\\\\____\\\\                /:::/    /              \\\\::::/    /       \\n\" +"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"        \\\\:|   |                  \\\\::/    /                \\\\::/    /                \\\\::/    /        \\n\" +"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"         \\\\|___|                   \\\\/____/                  \\\\/____/                  \\\\/____/         \\n\" +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "                \"                                                                                                    \\n\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 193,
      "danielcyc": 23,
      "rabhijit": 60
    }
  },
  {
    "path": "src/main/java/rims/exception/InvalidInputException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class InvalidInputException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    InvalidInputException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11
    }
  },
  {
    "path": "src/main/java/rims/exception/InvalidInputTypeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class InvalidInputTypeException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    InvalidInputTypeException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11
    }
  },
  {
    "path": "src/main/java/rims/exception/ReaderException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReaderException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    ReaderException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "isbobby": 13
    }
  },
  {
    "path": "src/main/java/rims/exception/RimException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class RimException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public RimException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 1,
      "isbobby": 2,
      "rabhijit": 8
    }
  },
  {
    "path": "src/main/java/rims/resource/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// have a list of all possible objects / all objects currently in inventory [Frisbee, Basketball]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// return /item frisbee /qty 3 /user id1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Item extends Resource {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Item(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Takes in id, type and name to create new resource"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param id"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param type"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Item(String id, String type, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(id, type, name, reservations);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Item(int id, String type, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(id, type, name, reservations);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 15,
      "rabhijit": 11
    }
  },
  {
    "path": "src/main/java/rims/resource/Reservation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class Reservation {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int reservation_id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int user_id;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int resource_id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Date date_from;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Date date_until;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This builds an reservation from given user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservation_id"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param user_id"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param until"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reservation(int reservation_id, int resource_id, int user_id, String from, String until)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservation_id \u003d reservation_id;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d resource_id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.user_id \u003d user_id;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.date_from \u003d stringToDate(from);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.date_until \u003d stringToDate(until);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This overloaded constructor is built for data retrieval, where all data are"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * in the form of strings. The string parameters are later type castedd into"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * suitable data types like integer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reservation(String reservation_id, String resource_id, String user_id, String from, String until)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservation_id \u003d Integer.parseInt(reservation_id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d Integer.parseInt(resource_id);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.user_id \u003d Integer.parseInt(user_id);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.date_from \u003d stringToDate(from);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.date_until \u003d stringToDate(until);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reservation() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * get method to return the user id who made this reservation"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return this.user_id"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getUid() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.user_id;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * get method to return the user id who made this reservation"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return this.user_id"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getReservationId() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.reservation_id;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * get method to return the user id who made this reservation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return this.user_id"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.date_from;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * get method to return the user id who made this reservation"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return this.user_id"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.date_until;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method returns the current reserve detail, formatted in a user friendly"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * string"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        s \u003d \"Reservation ID[\" + reservation_id + \"]\" + \" Borrowed By User: \" + user_id + \"\\n\" + \"\\n\\tFrom \" + date_from"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                + \" to \" + date_until + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This toString method formats the string output slightly differently for"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * better UI."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toString(String input) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (input.equals(\"return\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            s \u003d \"Resource ID[\" + resource_id + \"] From \" + date_from + \" to \" + date_until + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method returns the current reserve detail, formatted in a string usable"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * by storage class"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        s \u003d reservation_id + \",\" + resource_id + \",\" + user_id + \",\" + dateToString(date_from) + \",\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                + dateToString(date_until);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method casts strings to date, used for data retreival from txt file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method casts dates to string"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String dateToString(Date thisDate) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String stringDate \u003d format.format(thisDate);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 145
    }
  },
  {
    "path": "src/main/java/rims/resource/ReservationList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.util.DateRange;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReservationList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ArrayList\u003cReservation\u003e reservations;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Empty constructor, where an empty ArrayList\u003cReservation\u003e is constructed. This"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * is to prevent null pointer exceptions but use with care."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations \u003d new ArrayList\u003cReservation\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This constructor builds a reservation list for a given resource"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservations populated list of reservations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param ui           UI"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList(ArrayList\u003cReservation\u003e reservations, Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get the whole list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return the entire reserve list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cReservation\u003e getReservationList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.reservations;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get a reservation residing at index i"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return reservations.get(i)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Reservation getReservationByIndex(int i) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return reservations.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Fetch one single reserve given a Loan ID"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param lid Loan Id"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return reserve if found"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return null if not found"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cReservation\u003e getReservationListByUid(int uid) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cReservation\u003e tempList \u003d new ArrayList\u003cReservation\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (reservations.get(i).getUid() \u003d\u003d uid) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                tempList.add(reservations.get(i));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return tempList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method generates a reservation id by taking the last element\u0027s id + 1"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return id"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int generateReservationId() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (reservations.size() \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            i \u003d reservations.get(reservations.size() - 1).getReservationId() + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Fetch all the pairs of dates in a reservationList under a given resource,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * populate a list\u003cpair_of_dates\u003e and return this list. This is method is not"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * yet finished!"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ArrayList\u003cDateRange\u003e getAllDates(int resource_id) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ArrayList\u003cDateRange\u003e listOfDates \u003d new ArrayList\u003cDateRange\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return listOfDates;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This section contains all methods performing CREATE operation"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void addNewReservation(Reservation reservation) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations.add(reservation);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This section contains all methods performing DELETE operation"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void deleteReservationByReservationID(int reservationid) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int index_to_remove \u003d -1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.size(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (reservations.get(i).getReservationId() \u003d\u003d reservationid) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.print(\"The following reservation is removed: \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.printDashLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.print(reservations.get(i).toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.printDashLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                index_to_remove \u003d i;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (index_to_remove !\u003d -1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            reservations.remove(index_to_remove);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This section contains all utility methods (usually related to the data"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * structure)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Returns the number of reservations in a reservation lists"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return reservations.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 134
    }
  },
  {
    "path": "src/main/java/rims/resource/Resource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Resource {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // resource specific attributes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int resource_id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected ReservationList reservations;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    // utility classes"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Takes in id, type and name to create new resource. No reservation is created"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * for a newly added resource"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param id   integer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param type string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param name string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource(int resource_id, String type, String name) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d resource_id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Takes in id, type and resource name as string tokens from the text file, and"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * its reservation (if any) into the resourceList. The resource_id is casted to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * integer in this constructor"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id  string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param type         string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param name         string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservations string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource(String resource_id, String type, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d Integer.parseInt(resource_id);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Takes in id, type and resource name as string tokens from the text file, and"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * its reservation (if any) into the resourceList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param resource_id  integer"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param type         string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param name         string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservations string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Resource(int resource_id, String type, String name, ReservationList reservations) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.resource_id \u003d resource_id;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method formats the resource information into a easy-to-read string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        s \u003d \"ID: \" + resource_id + \" [\" + type + \"]\" + name;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * This method formats the resource information into a string suitable to store"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * in text file Different attributes are separated by \u0027,\u0027 The attributes being"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * stored are: id, type, name"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        s \u003d resource_id + \",\" + type + \",\" + name;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get method"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return resource_id"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getResourceId() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.resource_id;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get method"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return resource name"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String getResourceName() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get method"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return type name"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Get method"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @return Reservationlist that belongs the this object"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReservationList getReservations() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return this.reservations;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * Remove the single reservation by a reservation id. The exception catching is"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * not yet done."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @exception invalidReservationId A reservation cannot be found under using"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     *                                 this reservation id"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     * @param reservation_id"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void removeReservationByReservationId(int reservation_id) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        int index_to_remove \u003d -1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c this.reservations.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Reservation thisReservation \u003d reservations.getReservationByIndex(i);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (thisReservation.getReservationId() \u003d\u003d reservation_id) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                index_to_remove \u003d i;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (index_to_remove !\u003d -1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            reservations.deleteReservationByReservationID(index_to_remove);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 132,
      "rabhijit": 15
    }
  },
  {
    "path": "src/main/java/rims/resource/Room.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Room extends Resource {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    //constructing new Room instance using string data from resource.txt"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Room(int id, String type, String name, int qty){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(id, type, name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 3,
      "rabhijit": 5
    }
  },
  {
    "path": "src/main/java/rims/util/DateRange.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class DateRange {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public DateRange(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public DateRange (Date startDate, Date endDate){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getStartDate(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Date getEndDate(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        s \u003d startDate + \" - \" + endDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 31
    }
  }
]
