[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveBaseName \u003d \"rim\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveVersion \u003d \"1.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    mainClassName \u003d \"rims/core/Rim\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 3,
      "-": 44
    }
  },
  {
    "path": "src/main/java/rims/command/CloseCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class CloseCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        storage.saveToFile(resources.getResources());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        setExitCode();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 17
    }
  },
  {
    "path": "src/main/java/rims/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * The parent of all possible commands understood by Duke. Sets the exit code"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " * to false by default and lists methods common to all the commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Boolean exitCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Boolean getExitCode() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return exitCode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void setExitCode() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        exitCode \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 34
    }
  },
  {
    "path": "src/main/java/rims/command/HomeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class HomeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printEmptyLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 17
    }
  },
  {
    "path": "src/main/java/rims/command/ListByDateCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "public class ListByDateCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    protected String stringDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    public ListByDateCommand(String stringDate){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        this.stringDate \u003d stringDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.print(\"Here are the resources in your list by date:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printEmptyLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printArray(resources.generateAvailableListByDate(stringDate));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printEmptyLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printArray(resources.generateBookedListByDate(stringDate));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aarushisingh1": 28
    }
  },
  {
    "path": "src/main/java/rims/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.print(\"Here are the resources in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printEmptyLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printArray(resources.generateAvailableList());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printEmptyLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printArray(resources.generateBookedList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 21
    }
  },
  {
    "path": "src/main/java/rims/command/LoanCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class LoanCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int loanId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String stringDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public LoanCommand(String itemName, int qty, int loanId, String stringDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d itemName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDate \u003d stringDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public LoanCommand(String roomName, int loanId, String stringDate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d roomName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.stringDate \u003d stringDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (resources.getAvailableQuantity(resourceName) \u003c qty) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            // throw Exception"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Resource thisResource \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c qty; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            thisResource \u003d resources.getAvailableResource(resourceName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            thisResource.markAsBooked(stringDate, loanId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (thisResource !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"Done! I\u0027ve marked these resources as loaned:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (qty: \" + Integer.toString(qty) + \")\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (thisResource.getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 53
    }
  },
  {
    "path": "src/main/java/rims/command/ReserveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReserveCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int loanId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected String endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReserveCommand(String itemName, int qty, int loanId, String startDate, String endDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resourceName \u003d itemName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public ReserveCommand(String roomName, int loanId, String startDate, String endDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        resourceName \u003d roomName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.qty \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (resources.getAvailableQuantity(resourceName) \u003c qty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            // throw Exception"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        Resource thisResource \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        for (int i \u003d 0; i \u003c qty; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            thisResource \u003d resources.getAvailableResource(resourceName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            thisResource.markAsBooked(startDate, endDate, loanId);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if (thisResource !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.print(\"Done! I\u0027ve marked these resources as reserved:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            if (thisResource.getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.print(thisResource.toString() + \" (qty: \" + Integer.toString(qty) + \")\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            else if (thisResource.getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.print(thisResource.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 56
    }
  },
  {
    "path": "src/main/java/rims/command/ReturnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ReturnCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String resourceName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int qty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int loanId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReturnCommand(String itemName, int qty, int loanId) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d itemName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d qty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ReturnCommand(String roomName, int loanId) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resourceName \u003d roomName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.qty \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void execute(Ui ui, Storage storage, ResourceList resources) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (qty \u003e resources.getBookedQuantityOfOrder(resourceName, loanId)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            // throw Exception"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int actualQty \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Resource thisResource \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c qty; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            thisResource \u003d resources.getBookedResource(resourceName, loanId);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            thisResource.markAsReturned();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (thisResource !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.print(\"Done! I\u0027ve marked these resources as returned:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString() + \" (qty: \" + Integer.toString(qty) + \")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (thisResource.getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                ui.print(thisResource.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 52
    }
  },
  {
    "path": "src/main/java/rims/core/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    Reader reader \u003d new Reader();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Command parseInput(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Command c \u003d new ListCommand(); // temporary default until exception handling finished"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        if (input.equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new CloseCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (input.equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        else if (words[0].equals(\"listByDate\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            Scanner myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            String day \u003d myObj.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                c \u003d new ListByDateCommand(day);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danielcyc"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else if (words[0].equals(\"lend\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c\u003dreader.ReadLoanCommand(ui);        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        } "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else if (words[0].equals(\"reserve\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            c\u003dreader.ReadReserveCommand(ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danielcyc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        else if (words[0].equals(\"return\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (words[1].equals(\"/item\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int itemIndex \u003d input.indexOf(\"/item\") + 6;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int qtyIndex \u003d input.indexOf(\" /qty\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String item \u003d input.substring(itemIndex, qtyIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int idIndex \u003d input.indexOf(\" /id\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int qty \u003d Integer.parseInt(input.substring(qtyIndex + 6, idIndex));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                input \u003d input.replaceFirst(\"return /item \" + item + \" /qty \" + qty + \" /id \", \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int id \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReturnCommand(item, qty, id);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            } else if (words[1].equals(\"/room\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int roomIndex \u003d input.indexOf(\"/room\") + 6;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int idIndex \u003d input.indexOf(\" /id\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String room \u003d input.substring(roomIndex, idIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                input \u003d input.replaceFirst(\"return /room \" + room + \" /id \", \"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int id \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                c \u003d new ReturnCommand(room, id);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            // throw an exception"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aarushisingh1": 6,
      "isbobby": 10,
      "danielcyc": 2,
      "rabhijit": 45
    }
  },
  {
    "path": "src/main/java/rims/core/Read.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "interface Read {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 13
    }
  },
  {
    "path": "src/main/java/rims/core/Reader.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class Reader implements Read {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int qty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadLoanCommand(Ui ui){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Would you like to borrow an item or book a room\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //input validation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String choice\u003dui.getInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if(choice.equals(\"room\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter Room name\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            item\u003dui.getInput();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for item existence"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //return qty here to show user the quantity available"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for ID validity as an integer (for now)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter your ID as a borrower\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempId\u003dui.getInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                id\u003dInteger.parseInt(tempId);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to return by in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            endDate\u003dui.getInput();      "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new LoanCommand(item, id, endDate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else if(choice.equals(\"item\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter Item name (use cancel to go back)\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            item\u003dui.getInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for item existence"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //return qty here to show user the quantity available"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter quantity you wish to borrow\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempQty\u003dui.getInput();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for valid Integer input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //Needs to be done: check for sufficient quantity"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                qty\u003dInteger.parseInt(tempQty);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check if quantity is valid"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for ID validity as an integer (for now)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter your ID as a borrower\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempId\u003dui.getInput();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                id\u003dInteger.parseInt(tempId);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to return by in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            endDate\u003dui.getInput();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new LoanCommand(item, qty, id, endDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public Command ReadReserveCommand(Ui ui){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        ui.formattedPrint(\"Would you like to reserve an item or book a room\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        //input validation"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        String choice\u003dui.getInput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        if(choice.equals(\"room\")){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter Room name\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            item\u003dui.getInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for item existence"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //return qty here to show user the quantity available"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for ID validity as an integer (for now)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter your ID as a borrower\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempId\u003dui.getInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                id\u003dInteger.parseInt(tempId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to start using the resource in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            startDate\u003dui.getInput();     "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to return by in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            endDate\u003dui.getInput();      "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new ReserveCommand(item, id, startDate, endDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;    "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else if(choice.equals(\"item\")){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter Item name (use cancel to go back)\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            item\u003dui.getInput();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for item existence"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //return qty here to show user the quantity available"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter quantity you wish to borrow\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempQty\u003dui.getInput();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for valid Integer input"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //Needs to be done: check for sufficient quantity"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                qty\u003dInteger.parseInt(tempQty);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check if quantity is valid"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            //check for ID validity as an integer (for now)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter your ID as a borrower\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            String tempId\u003dui.getInput();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                id\u003dInteger.parseInt(tempId);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }catch (NumberFormatException ex){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                ui.ErrorPrint(\"Error encountered: Please enter an integer. We will redirect you to the home page\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to start using the resource in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            startDate\u003dui.getInput();     "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            ui.formattedPrint(\"Enter the date you wish to return by in the following format: DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            endDate\u003dui.getInput();    "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new ReserveCommand(item, id, startDate, endDate);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;  "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            Command c \u003d new HomeCommand();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "isbobby"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        } "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 167
    }
  },
  {
    "path": "src/main/java/rims/core/ResourceList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": " package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class ResourceList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected HashMap\u003cString, ArrayList\u003cResource\u003e\u003e resources;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ResourceList(HashMap\u003cString, ArrayList\u003cResource\u003e\u003e resources) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.resources \u003d resources;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public HashMap\u003cString, ArrayList\u003cResource\u003e\u003e getResources() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getAvailableQuantity(String resourceName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e thisResourceArray \u003d resources.get(resourceName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int availableQty \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!(thisResourceArray.get(i).isBooked())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                availableQty++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return availableQty;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getBookedQuantity(String resourceName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e thisResourceArray \u003d resources.get(resourceName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int bookedQty \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResourceArray.get(i).isBooked()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                bookedQty++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return bookedQty;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getBookedQuantityOfOrder(String resourceName, int loanId) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e thisResourceArray \u003d resources.get(resourceName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int bookedQty \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.isBooked() \u0026\u0026 thisResource.getLoanId() \u003d\u003d loanId) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                bookedQty++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return bookedQty;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getTotalQuantity(String resourceName) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources.get(resourceName).size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource getAvailableResource(String resourceName) throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e thisResourceArray \u003d resources.get(resourceName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (!(thisResource.isBooked())) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisResource;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new Exception(\"No available items!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        // throw exception if nothing returned"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        // replace with custom exception"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource getBookedResource(String resourceName, int loanId) throws Exception {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cResource\u003e thisResourceArray \u003d resources.get(resourceName);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResource.isBooked() \u0026\u0026 thisResource.getLoanId() \u003d\u003d loanId) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                return thisResource;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        throw new Exception(\"No available items!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        // replace with custom exception"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ArrayList\u003cString\u003e generateBookedList() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        list.add(\"CURRENTLY BOOKED\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cResource\u003e\u003e entry : resources.entrySet()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e thisResourceArray \u003d entry.getValue();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            int qtyBooked \u003d getBookedQuantity(entry.getKey());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResourceArray.size() \u003e 0 \u0026\u0026 qtyBooked \u003e 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (thisResourceArray.get(0).getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    list.add(thisResourceArray.get(0).toString() + \" (qty: \" + qtyBooked + \")\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (thisResourceArray.get(0).getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    list.add(thisResourceArray.get(0).toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public ArrayList\u003cString\u003e generateAvailableList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        list.add(\"AVAILABLE FOR LOAN\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cResource\u003e\u003e entry : resources.entrySet()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e thisResourceArray \u003d entry.getValue();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            int qtyAvailable \u003d getAvailableQuantity(entry.getKey());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (thisResourceArray.size() \u003e 0 \u0026\u0026 qtyAvailable \u003e 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (thisResourceArray.get(0).getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    list.add(thisResourceArray.get(0).toString() + \" (qty: \" + qtyAvailable + \")\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (thisResourceArray.get(0).getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    list.add(thisResourceArray.get(0).toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    public ArrayList\u003cString\u003e generateAvailableListByDate(String day) throws ParseException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        list.add(\"AVAILABLE FOR LOAN ON THIS DAY\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cResource\u003e\u003e entry : resources.entrySet()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            ArrayList\u003cResource\u003e thisResourceArray \u003d entry.getValue();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            int qtyAvailable \u003d getAvailableQuantity(entry.getKey());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            for(int i \u003d 0; i \u003c thisResourceArray.size(); i++){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                if (!(thisResource.isBooked()) \u0026\u0026 ((thisResource.getDateBookedFrom().after(stringToDate(day))) \u0026\u0026 (thisResource.getDateBookedTill().before(stringToDate(day))))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    if (thisResourceArray.get(0).getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                        list.add(thisResourceArray.get(0).toString() + \" (qty: \" + qtyAvailable + \")\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    else if (thisResourceArray.get(0).getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                        list.add(thisResourceArray.get(0).toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    public ArrayList\u003cString\u003e generateBookedListByDate(String day) throws ParseException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        list.add(\"CURRENTLY BOOKED ON THIS DAY\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cResource\u003e\u003e entry : resources.entrySet()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            ArrayList\u003cResource\u003e thisResourceArray \u003d entry.getValue();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            int qtyBooked \u003d getBookedQuantity(entry.getKey());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            for(int i \u003d 0; i \u003c thisResourceArray.size(); i++){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                if (thisResource.isBooked() \u0026\u0026 ((thisResource.getDateBookedFrom().before(stringToDate(day))) \u0026\u0026 (thisResource.getDateBookedTill().after(stringToDate(day))))) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    if (thisResourceArray.get(0).getType() \u003d\u003d \u0027I\u0027) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                        list.add(thisResourceArray.get(0).toString() + \" (qty: \" + qtyBooked + \")\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    else if (thisResourceArray.get(0).getType() \u003d\u003d \u0027R\u0027) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                        list.add(thisResourceArray.get(0).toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aarushisingh1"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aarushisingh1": 49,
      "rabhijit": 123
    }
  },
  {
    "path": "src/main/java/rims/core/Rim.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Rim {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private ResourceList resources;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Rim(String filePath) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        resources \u003d new ResourceList(storage.getResources());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void run() throws Exception, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Boolean toExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (!toExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            Command c \u003d parser.parseInput(ui.getInput());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            c.execute(ui, storage, resources);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            toExit \u003d c.getExitCode();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static void main(String[] args) throws Exception, IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        new Rim(\"data/resources.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 36
    }
  },
  {
    "path": "src/main/java/rims/core/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected HashMap\u003cString, ArrayList\u003cResource\u003e\u003e resources \u003d new HashMap\u003cString, ArrayList\u003cResource\u003e\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Storage(String filename) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        file \u003d new File(filename);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        readFromFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void readFromFile() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String[] line \u003d fileScanner.nextLine().split(\"`\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            boolean isBooked \u003d Integer.parseInt(line[3]) \u003d\u003d 1 ? true : false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (line[0].equals(\"I\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Item newItem;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (isBooked) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    newItem \u003d new Item(line[2], Integer.parseInt(line[1]), isBooked, Integer.parseInt(line[4]), line[5], line[6]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    newItem \u003d new Item(line[2], Integer.parseInt(line[1]), isBooked);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (resources.containsKey(line[2])) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    resources.get(line[2]).add(newItem);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    resources.put(line[2], new ArrayList\u003cResource\u003e(Arrays.asList(newItem)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (line[0].equals(\"R\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Room newRoom;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (isBooked) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    newRoom \u003d new Room(line[2], Integer.parseInt(line[1]), isBooked, Integer.parseInt(line[4]), line[5], line[6]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    newRoom \u003d new Room(line[2], Integer.parseInt(line[1]), isBooked);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                resources.put(line[2], new ArrayList\u003cResource\u003e(Arrays.asList(newRoom)));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void saveToFile(HashMap\u003cString, ArrayList\u003cResource\u003e\u003e resources) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cResource\u003e\u003e entry : resources.entrySet()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            ArrayList\u003cResource\u003e thisResourceArray \u003d entry.getValue();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            for (int i \u003d 0; i \u003c thisResourceArray.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Resource thisResource \u003d thisResourceArray.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                int isBooked \u003d (thisResource.isBooked() \u003d\u003d true) ? 1 : 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String line \u003d thisResource.getType() + \"`\" + thisResource.getId() + \"`\" + thisResource.getName() + \"`\" + isBooked;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (thisResource.isBooked()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d \"`\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d thisResource.getLoanId();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d \"`\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d thisResource.dateToString(thisResource.getDateBookedFrom());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d \"`\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    line +\u003d thisResource.dateToString(thisResource.getDateBookedTill());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                fileWriter.write(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                fileWriter.newLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public HashMap\u003cString, ArrayList\u003cResource\u003e\u003e getResources() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return resources;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 80
    }
  },
  {
    "path": "src/main/java/rims/core/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import java.time.format.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Scanner inputScanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    protected int intInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static String line \u003d \"____________________________________________________________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public static String hash \u003d \"********************************************************************************************************************************************\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static String tab \u003d \"\\t\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        welcomeWithLogo();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public int getIntegerInput(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        intInput \u003d inputScanner.nextInt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        return intInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void ErrorPrint(String Error) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + Error);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        System.out.println(tab + hash);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void print(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(tab + input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        for (int i \u003d 0; i \u003c inputs.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            System.out.println(\"\\t\" + inputs.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrintArray(ArrayList\u003cString\u003e inputs) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printArray(inputs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void formattedPrint(String input) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        print(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        formattedPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     * Prints a welcome message when Duke is started up."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void welcomeWithLogo() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        formattedPrintArray(new ArrayList\u003cString\u003e(Arrays.asList(\"Hello. I am RIM.\", \"Resource \u0026 Inventory Management\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                \"The facilities and logistics management system.\", \"What can I do for you?\")));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void welcome(){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        formattedPrintArray(new ArrayList\u003cString\u003e(Arrays.asList(\"Hello. I am RIM.\", \"Resource \u0026 Inventory Management\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "isbobby"
        },
        "content": "                \"The facilities and logistics management system.\", \"What can I do for you?\")));        "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String logo \u003d \"\\n\" + \"          _____                    _____                    _____          \\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"         /\\\\    \\\\                  /\\\\    \\\\                  /\\\\    \\\\         \\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"        /::\\\\    \\\\                /::\\\\    \\\\                /::\\\\____\\\\        \\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       /::::\\\\    \\\\               \\\\:::\\\\    \\\\              /::::|   |        \\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"      /::::::\\\\    \\\\               \\\\:::\\\\    \\\\            /:::::|   |        \\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"     /:::/\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\          /::::::|   |        \\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"    /:::/__\\\\:::\\\\    \\\\               \\\\:::\\\\    \\\\        /:::/|::|   |        \\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"   /::::\\\\   \\\\:::\\\\    \\\\              /::::\\\\    \\\\      /:::/ |::|   |        \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"  /::::::\\\\   \\\\:::\\\\    \\\\    ____    /::::::\\\\    \\\\    /:::/  |::|___|______  \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \" /:::/\\\\:::\\\\   \\\\:::\\\\____\\\\  /\\\\   \\\\  /:::/\\\\:::\\\\    \\\\  /:::/   |::::::::\\\\    \\\\ \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"/:::/  \\\\:::\\\\   \\\\:::|    |/::\\\\   \\\\/:::/  \\\\:::\\\\____\\\\/:::/    |:::::::::\\\\____\\\\\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"\\\\::/   |::::\\\\  /:::|____|\\\\:::\\\\  /:::/    \\\\::/    /\\\\::/    / ~~~~~/:::/    /\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \" \\\\/____|:::::\\\\/:::/    /  \\\\:::\\\\/:::/    / \\\\/____/  \\\\/____/      /:::/    / \\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       |:::::::::/    /    \\\\::::::/    /                       /:::/    /  \\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       |::|\\\\::::/    /      \\\\::::/____/                       /:::/    /   \\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       |::| \\\\::/____/        \\\\:::\\\\    \\\\                      /:::/    /    \\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       |::|  ~|               \\\\:::\\\\    \\\\                    /:::/    /     \\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       |::|   |                \\\\:::\\\\    \\\\                  /:::/    /      \\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"       \\\\::|   |                 \\\\:::\\\\____\\\\                /:::/    /       \\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"        \\\\:|   |                  \\\\::/    /                \\\\::/    /        \\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"         \\\\|___|                   \\\\/____/                  \\\\/____/         \\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                + \"                                                      \";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 28,
      "rabhijit": 88
    }
  },
  {
    "path": "src/main/java/rims/exception/InvalidInputException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class InvalidInputException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    InvalidInputException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11
    }
  },
  {
    "path": "src/main/java/rims/exception/InvalidInputTypeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class InvalidInputTypeException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    InvalidInputTypeException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 11
    }
  },
  {
    "path": "src/main/java/rims/exception/ReaderException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "isbobby"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "isbobby"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "isbobby"
        },
        "content": "public class ReaderException extends RimException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    ReaderException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "isbobby"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "isbobby": 13
    }
  },
  {
    "path": "src/main/java/rims/exception/RimException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.resource.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class RimException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    RimException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 3,
      "rabhijit": 8
    }
  },
  {
    "path": "src/main/java/rims/resource/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// have a list of all possible objects / all objects currently in inventory [Frisbee, Basketball]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "// return /item frisbee /qty 3 /user id1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Item extends Resource {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Item(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027I\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        // find some way to generate ID"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Item(String name, int id, boolean isBooked) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name, id, isBooked);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027I\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Item(String name, int id, boolean isBooked, int loanId, String stringDateFrom, String stringDateTill) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name, id, isBooked, loanId, stringDateFrom, stringDateTill);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(this.loanId);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027I\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 38
    }
  },
  {
    "path": "src/main/java/rims/resource/Resource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public abstract class Resource {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected boolean booked;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Date bookedFrom;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Date bookedTill;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected int loanId;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource(String name) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.booked \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedFrom \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedTill \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d -1; // yes yes magic, I know"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource(String name, int id, boolean isBooked) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.booked \u003d isBooked;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d -1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Resource(String name, int id, boolean isBooked, int loanId, String stringDateFrom, String stringDateTill) throws ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.booked \u003d isBooked;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        setLoanId(loanId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedFrom \u003d stringToDate(stringDateFrom);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedTill \u003d stringToDate(stringDateTill);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public int getLoanId() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return loanId;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Date getDateBookedFrom() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return bookedFrom;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Date getDateBookedTill() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return bookedTill;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean isBooked() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return booked;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void setLoanId(int loanId) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String dateToString(Date thisDate) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d format.format(thisDate);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void markAsBooked(String stringDateTill, int loanId) throws ParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        booked \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        bookedFrom \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        bookedTill \u003d stringToDate(stringDateTill);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    public void markAsBooked(String StringDateFrom, String stringDateTill, int loanId) throws ParseException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        booked \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        bookedFrom \u003d stringToDate(StringDateFrom);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        bookedTill \u003d stringToDate(stringDateTill);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "isbobby"
        },
        "content": "        this.loanId \u003d loanId;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "isbobby"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "isbobby"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void markAsReturned() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.loanId \u003d -1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.booked \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedFrom \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.bookedTill \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"[\" + getType() + \"] \" + getName();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "isbobby": 7,
      "rabhijit": 110
    }
  },
  {
    "path": "src/main/java/rims/resource/Room.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "package rims.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import rims.core.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Room extends Resource {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Room(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027R\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        // find some way to generate ID"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Room(String name, int id, boolean isBooked) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name, id, isBooked);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027R\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Room(String name, int id, boolean isBooked, int loanId, String stringDateFrom, String stringDateTill) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(name, id, isBooked, loanId, stringDateFrom, stringDateTill);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(this.loanId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027R\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 31
    }
  }
]
