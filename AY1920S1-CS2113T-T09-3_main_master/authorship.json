[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveBaseName \u003d \"AlgoSenpai\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.media\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "group \u0027com.algosenpai.app\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    mainClassName \u003d \"com.algosenpai.app.Launcher\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:testfx-core:4.0.16-alpha\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:testfx-junit5:4.0.16-alpha\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:openjfx-monocle:jdk-11+23\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \u003d \u0027full\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027java.awt.headless\u0027, \u0027true\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.robot\u0027, \u0027glass\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.headless\u0027, \u0027true\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027prism.order\u0027, \u0027sw\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027prism.text\u0027, \u0027t2k\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.setup.timeout\u0027, \u00272500\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 18,
      "Ng Wei Jie, Brandon": 1,
      "-": 40
    }
  },
  {
    "path": "scenebuilder/basic-layout.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 36
    }
  },
  {
    "path": "scenebuilder/home.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cTextField id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cLabel id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Home Page\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 48
    }
  },
  {
    "path": "scenebuilder/quiz.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cTextField id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cLabel id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Quiz Page\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 48
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Chapter1.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "class Chapter1 {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the question by using a random number to determine which of the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * subquestions to ask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if a correct answer is given and false if the answer is wrong."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    public Boolean generateQuestions() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return bubbleSortPassesQuestion();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return quickSortPivotsQuestion();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return insertionSortSwapsQuestion();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return selectionSortSwapsQuestion();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the Selection Sort Algorithm question related to the sequence of"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then runs the algorithm on it for certain number of swaps, after which it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * will terminate. An input is taken in from the user as an answer."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the input matches the answer, and false if the answer is"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean selectionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 5) + 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Selection Sort Algorithm : \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"int i, j, min_idx;\\n\" + \"   for (i \u003d 0; i \u003c n-1; i++) {\\n\" + \"       min_idx \u003d i;\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"       for (j \u003d i+1; j \u003c n; j++) {\\n\" + \"           if (arr[j] \u003c arr[min_idx]) {\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"               min_idx \u003d j;\\n\" + \"       }\\n\" + \"       }\\n\" + \"   if (min_idx !\u003d i) {\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"       swap(arr[min_idx], arr[i]);\\n\" + \"   }\" + \"}\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        selectionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the Insertion Sort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then conducts Insertion Sort on it. A random number of swaps is generated,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * after which Insertion Sort stops. An input is taken in from the user as an"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * answer."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if a correct answer is given, and false if the answer does not"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         match."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean insertionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Insertion Sort Algorithm : \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"int i, key, j;\\n\" + \"for (i \u003d 1; i \u003c n; i++) {\\n\" + \"    key \u003d arr[i];\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"    j \u003d i - 1;\\n\" + \"    while (j \u003e\u003d 0 \u0026\u0026 arr[j] \u003e key) {\\n\" + \"        arr[j + 1] \u003d arr[j];\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"        j \u003d j - 1;\\n\" + \"    }\\n\" + \"    arr[j + 1] \u003d key;\\n\" + \"} \\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        insertionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the QuickSort Algorithm question regarding number of possible"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * pivots after certain passes of the algorithm. It determines a random array"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * size, then conducts QuickSort on it. A random snapshot of the array is taken"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * for the question and the answer is pre-determined. An input is taken in from"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * the user as an answer."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer is correct, false if the answer is wrong."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean quickSortPivotsQuestion() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(6) + 6;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        Integer[] arr \u003d initialArray.toArray(new Integer[arraySize]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger[]\u003e allSteps \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        quickSort(arr, 0, arraySize - 1, allSteps);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int numberOfChoices \u003d allSteps.size() - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr \u003d allSteps.get(random.nextInt(numberOfChoices));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        initialArray \u003d new ArrayList\u003c\u003e(Arrays.asList(arr));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \" elements underwent some passes of the Quick Sort Algorithm to become : \" + initialArray);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"How many elements could possibly have been the pivot?\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int userInput \u003d s.nextInt();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int answer \u003d 0;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c arraySize; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            Boolean canBePivot \u003d true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (int j \u003d 0; j \u003c arraySize; j++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if ((j \u003c i \u0026\u0026 arr[j] \u003e arr[i]) || (j \u003e i \u0026\u0026 arr[j] \u003c arr[i])) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    canBePivot \u003d false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (canBePivot) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                answer++;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userInput \u003d\u003d answer) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + answer + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the BubbleSort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of passes. It determines a random array size,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then fills the array with unique numbers. A random number of passes is"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * determined and the BubbleSort Algorithm stops midway. The user then has to"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * decide what the correct answer is."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return true if the answer matches, and false if the answer is wrong."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean bubbleSortPassesQuestion() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(7) + 3;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int passes \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Bubble Sort Algorithm : \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + passes + \" passes?\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"for (int i \u003d 0; i \u003c passes; i++) {\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"   for (int j \u003d 0; j \u003c arr.size - 1 - i; j ++) {\\n\" + \"       if (arr[j] \u003e arr[j + 1]) {\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"            swap (arr[j], arr[j+1]);\\n\" + \"       }\\n\" + \"   }\\n\" + \"}\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        bubbleSort(initialArray, passes);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Conducts Selection Sort on the given ArrayList."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr   The ArrayList to be sorted."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param swaps The number of swaps before the program terminates."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void selectionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int minIdx;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (i \u003d 0; i \u003c arr.size() - 1; i++) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            minIdx \u003d i;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (j \u003d i + 1; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (arr.get(j) \u003c arr.get(minIdx)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    minIdx \u003d j;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int temp \u003d arr.get(minIdx);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(minIdx, arr.get(i));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(i, temp);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (minIdx !\u003d i) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Conducts Insertion Sort on the given ArrayList."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr   The array to conduct the Insertion Sort algorithm on."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param swaps The number of swaps to be performed before the algorithm"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *              terminates."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void insertionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int key;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (i \u003d 1; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            key \u003d arr.get(i);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            j \u003d i - 1;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            while (j \u003e\u003d 0 \u0026\u0026 arr.get(j) \u003e key) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr.set(j + 1, arr.get(j));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                j \u003d j - 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(j + 1, key);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Bubble Sorts the array."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr    The arraylist to be sorted."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param passes The number of passes before the program gets terminated."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void bubbleSort(ArrayList\u003cInteger\u003e arr, int passes) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c passes; i++) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (int j \u003d 0; j \u003c arr.size() - 1 - i; j++) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int first \u003d arr.get(j);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int second \u003d arr.get(j + 1);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (first \u003e second) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    int temp \u003d first;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    arr.set(j, second);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    arr.set(j + 1, temp);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Quick Sorts the array."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void quickSort(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (low \u003c high) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int partitionIndex \u003d partition(arr, low, high, allSteps);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            quickSort(arr, low, partitionIndex - 1, allSteps);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            quickSort(arr, partitionIndex + 1, high, allSteps);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Partitions the array according to the Quick Sort Algorithm."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return An integer which is the partitioning index."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static int partition(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int pivot \u003d arr[high];"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i \u003d (low - 1);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int j \u003d low; j \u003c\u003d high - 1; j++) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (arr[j] \u003c pivot) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int temp \u003d arr[i];"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr[i] \u003d arr[j];"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr[j] \u003d temp;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int temp \u003d arr[i + 1];"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr[i + 1] \u003d arr[high];"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr[high] \u003d temp;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        Integer[] tempArray \u003d Arrays.copyOf(arr, arr.length);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        allSteps.add(tempArray);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return (i + 1);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the set of values to be used for the arrays."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arraySize The size of the set to be used."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return The hashset to be used for the array."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static HashSet\u003cInteger\u003e generateArray(int arraySize) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        HashSet\u003cInteger\u003e tempStorage \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        while (tempStorage.size() !\u003d arraySize) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            tempStorage.add(value);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return tempStorage;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sim Yu Jie": 337
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import com.algosenpai.app.controller.SceneController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Application.launch(SceneController.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 11,
      "Ng Wei Jie, Brandon": 2
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/chapters/ChapterLinkedList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "class ChapterLinkedList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a random question according to a random value."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the question was answered correctly, or false if the question"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         was answered wrongly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    public Boolean generateQuestions() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return stackPopPushQuestion();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return queuePopPushQuestion();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return singleInsertLinkedListQuestion();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return pseudoCodeQuestion();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a pseudoCode question that tests the user on their understanding of"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Linked List through pseudocode calculation. An input is taken from the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * as an answer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer matches the input, or false if the answer is"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean pseudoCodeQuestion() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 6;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e array \u003d new ArrayList\u003c\u003e(createList(arraySize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            array.set(i, array.get(i) % 10);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"In the pseudocode program below, list is an initially empty Singly Linked List.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"The function populateList() adds the integers \" + array + \" to the tail of the list sequentially.\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"What is the output of the program?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cString\u003e pseudoCode \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        generatePseudoCode(pseudoCode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printPseudoCode(pseudoCode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int answer \u003d calculateSum(array, pseudoCode);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int userInput \u003d s.nextInt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (answer \u003d\u003d userInput) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.print(\"This is the correct answer : \" + answer);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\". Try harder!\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Calculates the sum of the values based on the pseudocode generated."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param array      The ArrayList which makes up the Linked List."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param pseudoCode The list of instructions in the pseudo-code."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return The value of the sum given in the pseudo-code."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private int calculateSum(ArrayList\u003cInteger\u003e array, ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int sum \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : pseudoCode) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            switch (i) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"n \u003d n.next;\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"sum +\u003d list.tail.value;\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                sum +\u003d array.get(array.size() - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"sum +\u003d list.head.value;\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                sum +\u003d array.get(0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"n \u003d list.head;\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"sum +\u003d n.value;\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                sum +\u003d array.get(index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case \"sum +\u003d n.next.value;\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                sum +\u003d array.get(index + 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return sum;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a list of pseudo-code, such as \"n \u003d n.next\", or \"n \u003d list.head\"."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * This list of instructions will be printed to the user."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param pseudoCode The list which will contain the instructions."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void generatePseudoCode(ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        pseudoCode.add(\"populateList();\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        pseudoCode.add(\"int sum \u003d 0;\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        pseudoCode.add(\"Node n \u003d list.head; //list.head/list.tail points to the first/last integer in list\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int noOfCommands \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c noOfCommands; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int commandToAdd \u003d random.nextInt(6);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            switch (commandToAdd) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"n \u003d n.next;\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"sum +\u003d list.tail.value;\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"sum +\u003d list.head.value;\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"n \u003d list.head;\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"sum +\u003d n.value;\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                pseudoCode.add(\"sum +\u003d n.next.value;\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        pseudoCode.add(\"print sum;\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a question relating to a single insertion in a Singly Linked List."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * The question can be either appending to the head or the tail of the linked"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * list. A sequence of integers are taken in from the user as an answer."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer matches the input given by the user, else false if"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         the answer is wrong."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean singleInsertLinkedListQuestion() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int listSize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        LinkedList\u003cInteger\u003e ll \u003d createList(listSize);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int valueToAdd \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String positionToAdd;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (random.nextInt(2) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            positionToAdd \u003d \"head\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            positionToAdd \u003d \"tail\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"Consider the Singly Linked List of size \" + listSize + \" below.\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \" It undergoes an insertion of value \" + valueToAdd + \" at the \" + positionToAdd"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \".\\nWhat would be the new sequence of integers?\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printList(ll);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (positionToAdd.equals(\"head\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            ll.addFirst(valueToAdd);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            ll.addLast(valueToAdd);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        LinkedList\u003cInteger\u003e userInput \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d input.split(\" -\u003e \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String string : arr) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userInput.add(Integer.parseInt(string));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userInput.equals(ll)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            printList(ll);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Try harder!\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a Queue question related to popping and pushing. A random size is"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * determined, followed by a series of instructions consisting of pop and push."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * The algorithm will do the popping and pushing accordingly. An input is taken"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * in from the user as an answer."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer matches the input, or false if the question was"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         answered wrongly."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean queuePopPushQuestion() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int queueSize \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        LinkedList\u003cInteger\u003e queue \u003d createList(queueSize);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cString\u003e instructions \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int numberOfInstructions \u003d random.nextInt(3) + 4;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        addInstructions(instructions, numberOfInstructions);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"A Queue of size \" + queueSize"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \" undergoes a series of operations as shown below.\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"What would be the new value called upon queue.peek()?\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printQueue(queue);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printInstructions(instructions);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        changeQueue(instructions, queue);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (val \u003d\u003d queue.getLast()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + queue.getLast() + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Changes the queue according to the instructions given. If instruction is pop,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * the front value of the list would be removed, or else a new value will be"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * pushed into the queue."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param instructions The list of instructions given."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param queue        The list which would be editted according to the"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *                     instructions given."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void changeQueue(ArrayList\u003cString\u003e instructions, LinkedList\u003cInteger\u003e queue) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String cmd : instructions) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (cmd.contains(\"Pop\")) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                queue.removeLast();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                String number \u003d cmd.substring(5, cmd.length() - 2);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int valuetoadd \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                queue.addFirst(valuetoadd);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates a Stack operations question related to pushing and popping. A"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * random stack size is determined and the stack is created. A sequence of"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * instructions consisting of push and pops are created, followed by which, the"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * algorithm will do the popping and pushing accordingly. An input is taken in"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * from the user as an answer."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer matches the input, or false if the answer is"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean stackPopPushQuestion() {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int stackSize \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        LinkedList\u003cInteger\u003e stack \u003d createList(stackSize);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cString\u003e instructions \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int numberOfInstructions \u003d random.nextInt(3) + 4;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        addInstructions(instructions, numberOfInstructions);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"A Stack of size \" + stackSize"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \" undergoes a series of operations as shown below.\\n\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"What would be the new value called upon stack.peek()?\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printStack(stack);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        printInstructions(instructions);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        changeStack(instructions, stack);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (val \u003d\u003d stack.getLast()) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + stack.getLast() + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Changes the stack according to the instructions generated. Instructions are"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * either pop or push."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param instructions The list of instructions provided."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param stack        The data structure to be changed."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void changeStack(ArrayList\u003cString\u003e instructions, LinkedList\u003cInteger\u003e stack) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String cmd : instructions) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (cmd.contains(\"Pop\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                stack.removeLast();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                String number \u003d cmd.substring(5, cmd.length() - 2);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int valuetoadd \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                stack.addLast(valuetoadd);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Adds new instructions to the list through random generation of either 1 or 0."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * If values is 0, a push command is added along with a value. Else, a pop"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * command is added."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param instructions         The list where instructions will be added."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param numberOfInstructions The number of instructions to be added into the"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *                             list."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void addInstructions(ArrayList\u003cString\u003e instructions, int numberOfInstructions) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfInstructions; i++) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int val \u003d random.nextInt(2);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int toadd \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            switch (val) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                String combined \u003d \"Push(\" + Integer.toString(toadd) + \");\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                instructions.add(combined);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                instructions.add(\"Pop();\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Creates a Linked List and populate it with unique numbers."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param size The number of elements to be in the Linked List."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return The Linked List data structure to be used for the question."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private LinkedList\u003cInteger\u003e createList(int size) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        HashSet\u003cInteger\u003e set \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        while (set.size() !\u003d size) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            set.add(value);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        LinkedList\u003cInteger\u003e stackCreated \u003d new LinkedList\u003c\u003e(set);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return stackCreated;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Prints the list of pseudo-code."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param pseudoCode The list of instructions in the pseudo-code."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void printPseudoCode(ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String cmd : pseudoCode) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(cmd);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Prints the list given."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param ll The linked list provided."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void printList(LinkedList\u003cInteger\u003e ll) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i : ll) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.printf(\"[%d]\", i);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (i !\u003d ll.getLast()) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                System.out.print(\" -\u003e \");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Prints the stack created."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param stack The stack containing the elements."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void printStack(LinkedList\u003cInteger\u003e stack) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i : stack) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.printf(\"[%d] \u003c- \", i);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"Head\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Prints the queue created."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param queue The queue containing the elements."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void printQueue(LinkedList\u003cInteger\u003e queue) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i : queue) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.printf(\"[%d] -\u003e \", i);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"Front\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Prints the instruction given by the list on seperate new lines."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param instructions The list of instructions provided."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void printInstructions(ArrayList\u003cString\u003e instructions) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String s : instructions) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.printf(\"%d. %s\\n\", i, s);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sim Yu Jie": 398
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/chapters/ChapterSorting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "package com.algosenpai.app.chapters;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "class ChapterSorting {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the question by using a random number to determine which of the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * subquestions to ask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if a correct answer is given and false if the answer is wrong."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    public Boolean generateQuestions() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return bubbleSortPassesQuestion();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return quickSortPivotsQuestion();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return insertionSortSwapsQuestion();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return selectionSortSwapsQuestion();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the Selection Sort Algorithm question related to the sequence of"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then runs the algorithm on it for certain number of swaps, after which it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * will terminate. An input is taken in from the user as an answer."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the input matches the answer, and false if the answer is"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private Boolean selectionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 5) + 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Selection Sort Algorithm : \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"int i, j, min_idx;\\n\" + \"   for (i \u003d 0; i \u003c n-1; i++) {\\n\" + \"       min_idx \u003d i;\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"       for (j \u003d i+1; j \u003c n; j++) {\\n\" + \"           if (arr[j] \u003c arr[min_idx]) {\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"               min_idx \u003d j;\\n\" + \"       }\\n\" + \"       }\\n\" + \"   if (min_idx !\u003d i) {\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"       swap(arr[min_idx], arr[i]);\\n\" + \"   }\" + \"}\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        selectionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the Insertion Sort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then conducts Insertion Sort on it. A random number of swaps is generated,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * after which Insertion Sort stops. An input is taken in from the user as an"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * answer."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if a correct answer is given, and false if the answer does not"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *         match."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean insertionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Insertion Sort Algorithm : \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"int i, key, j;\\n\" + \"for (i \u003d 1; i \u003c n; i++) {\\n\" + \"    key \u003d arr[i];\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"    j \u003d i - 1;\\n\" + \"    while (j \u003e\u003d 0 \u0026\u0026 arr[j] \u003e key) {\\n\" + \"        arr[j + 1] \u003d arr[j];\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"        j \u003d j - 1;\\n\" + \"    }\\n\" + \"    arr[j + 1] \u003d key;\\n\" + \"} \\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        insertionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the QuickSort Algorithm question regarding number of possible"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * pivots after certain passes of the algorithm. It determines a random array"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * size, then conducts QuickSort on it. A random snapshot of the array is taken"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * for the question and the answer is pre-determined. An input is taken in from"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * the user as an answer."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return True if the answer is correct, false if the answer is wrong."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean quickSortPivotsQuestion() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(6) + 6;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        Integer[] arr \u003d initialArray.toArray(new Integer[arraySize]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger[]\u003e allSteps \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        quickSort(arr, 0, arraySize - 1, allSteps);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int numberOfChoices \u003d allSteps.size() - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr \u003d allSteps.get(random.nextInt(numberOfChoices));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        initialArray \u003d new ArrayList\u003c\u003e(Arrays.asList(arr));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \" elements underwent some passes of the Quick Sort Algorithm to become : \" + initialArray);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"How many elements could possibly have been the pivot?\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int userInput \u003d s.nextInt();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int answer \u003d 0;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c arraySize; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            Boolean canBePivot \u003d true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (int j \u003d 0; j \u003c arraySize; j++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if ((j \u003c i \u0026\u0026 arr[j] \u003e arr[i]) || (j \u003e i \u0026\u0026 arr[j] \u003c arr[i])) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    canBePivot \u003d false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (canBePivot) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                answer++;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userInput \u003d\u003d answer) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + answer + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the BubbleSort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * integers after a certain number of passes. It determines a random array size,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * then fills the array with unique numbers. A random number of passes is"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * determined and the BubbleSort Algorithm stops midway. The user then has to"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * decide what the correct answer is."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return true if the answer matches, and false if the answer is wrong."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static Boolean bubbleSortPassesQuestion() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int arraySize \u003d random.nextInt(7) + 3;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int passes \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Bubble Sort Algorithm : \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + passes + \" passes?\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String code \u003d new String(\"for (int i \u003d 0; i \u003c passes; i++) {\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"   for (int j \u003d 0; j \u003c arr.size - 1 - i; j ++) {\\n\" + \"       if (arr[j] \u003e arr[j + 1]) {\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                + \"            swap (arr[j], arr[j+1]);\\n\" + \"       }\\n\" + \"   }\\n\" + \"}\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        bubbleSort(initialArray, passes);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Conducts Selection Sort on the given ArrayList."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr   The ArrayList to be sorted."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param swaps The number of swaps before the program terminates."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private void selectionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int minIdx;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (i \u003d 0; i \u003c arr.size() - 1; i++) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            minIdx \u003d i;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (j \u003d i + 1; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (arr.get(j) \u003c arr.get(minIdx)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    minIdx \u003d j;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int temp \u003d arr.get(minIdx);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(minIdx, arr.get(i));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(i, temp);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (minIdx !\u003d i) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Conducts Insertion Sort on the given ArrayList."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr   The array to conduct the Insertion Sort algorithm on."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param swaps The number of swaps to be performed before the algorithm"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     *              terminates."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void insertionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int key;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (i \u003d 1; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            key \u003d arr.get(i);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            j \u003d i - 1;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            while (j \u003e\u003d 0 \u0026\u0026 arr.get(j) \u003e key) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr.set(j + 1, arr.get(j));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                j \u003d j - 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            arr.set(j + 1, key);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Bubble Sorts the array."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr    The arraylist to be sorted."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param passes The number of passes before the program gets terminated."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void bubbleSort(ArrayList\u003cInteger\u003e arr, int passes) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int i \u003d 0; i \u003c passes; i++) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            for (int j \u003d 0; j \u003c arr.size() - 1 - i; j++) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int first \u003d arr.get(j);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int second \u003d arr.get(j + 1);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                if (first \u003e second) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    int temp \u003d first;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    arr.set(j, second);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                    arr.set(j + 1, temp);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Quick Sorts the array."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static void quickSort(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        if (low \u003c high) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int partitionIndex \u003d partition(arr, low, high, allSteps);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            quickSort(arr, low, partitionIndex - 1, allSteps);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            quickSort(arr, partitionIndex + 1, high, allSteps);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Partitions the array according to the Quick Sort Algorithm."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return An integer which is the partitioning index."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static int partition(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int pivot \u003d arr[high];"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int i \u003d (low - 1);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        for (int j \u003d low; j \u003c\u003d high - 1; j++) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            if (arr[j] \u003c pivot) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                int temp \u003d arr[i];"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr[i] \u003d arr[j];"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "                arr[j] \u003d temp;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        int temp \u003d arr[i + 1];"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr[i + 1] \u003d arr[high];"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        arr[high] \u003d temp;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        Integer[] tempArray \u003d Arrays.copyOf(arr, arr.length);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        allSteps.add(tempArray);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return (i + 1);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * Generates the set of values to be used for the arrays."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @param arraySize The size of the set to be used."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     * @return The hashset to be used for the array."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    private static HashSet\u003cInteger\u003e generateArray(int arraySize) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        HashSet\u003cInteger\u003e tempStorage \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        while (tempStorage.size() !\u003d arraySize) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "            tempStorage.add(value);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "        return tempStorage;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Sim Yu Jie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sim Yu Jie": 337
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/FilePath.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "public class FilePath {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    public static final String soundFilePath \u003d System.getProperty(\"user.dir\") + \"/src/main/resources/sound/\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 7
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/HomeController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "public class HomeController extends ParentController {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Label sceneTitle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Button nextButton;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Button settings;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private void handleButtonAction(ActionEvent event) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Stage stage \u003d getStage(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        MusicController.playMusic(\"saturation.wav\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        changeScene(stage, \"/view/quiz.fxml\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 31
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/MusicController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import com.algosenpai.app.constant.FilePath;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.media.Media;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.media.MediaPlayer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "class MusicController {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private static MediaPlayer mediaPlayer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private static boolean isLoaded \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    MusicController() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        playMusic(\"asayake-no-starmine.wav\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "     * Play and change music."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "     * @param musicName name of the music."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    static void playMusic(String musicName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        if (isLoaded) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "            mediaPlayer.stop();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        String musicFile \u003d FilePath.soundFilePath + musicName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Media sound \u003d new Media(new File(musicFile).toURI().toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        mediaPlayer \u003d new MediaPlayer(sound);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        mediaPlayer.setAutoPlay(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        mediaPlayer.play();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        isLoaded \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 35
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/ParentController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "class ParentController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    void changeScene(Stage stage, String sceneName) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Parent root \u003d FXMLLoader.load(getClass().getResource(sceneName));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Scene scene \u003d new Scene(root);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    Stage getStage(ActionEvent event) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Node source \u003d (Node) event.getSource();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        return (Stage) source.getScene().getWindow();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 25
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/QuizController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "public class QuizController extends ParentController {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Label sceneTitle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Button nextButton;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private Button settings;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    private void handleButtonAction(ActionEvent event) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Stage stage \u003d getStage(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        MusicController.playMusic(\"asayake-no-starmine.wav\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        changeScene(stage, \"/view/home.fxml\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 31
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/SceneController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "public class SceneController extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    MusicController musicController;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        musicController \u003d new MusicController();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Parent root \u003d FXMLLoader.load(getClass().getResource(\"/view/home.fxml\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Scene scene \u003d new Scene(root);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 27
    }
  },
  {
    "path": "src/main/resources/view/home.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.algosenpai.app.controller.HomeController\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cLabel fx:id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Home Scene\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton fx:id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" onAction\u003d\"#handleButtonAction\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton fx:id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 48
    }
  },
  {
    "path": "src/main/resources/view/quiz.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.algosenpai.app.controller.QuizController\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cLabel fx:id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Quiz Scene\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton fx:id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" onAction\u003d\"#handleButtonAction\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "      \u003cButton fx:id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ng Wei Jie, Brandon": 48
    }
  },
  {
    "path": "src/test/java/com/algosenpai/app/SceneControllerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import com.algosenpai.app.controller.SceneController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.api.FxToolkit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.framework.junit5.ApplicationTest;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import org.testfx.api.FxAssert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "import org.testfx.matcher.control.LabeledMatchers;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "public class SceneControllerTest extends ApplicationTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        Parent mainNode \u003d FXMLLoader.load(SceneController.class.getResource(\"/view/home.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.setScene(new Scene(mainNode));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.toFront();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void setUp() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void tearDown() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        FxToolkit.hideStage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testUserInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ng Wei Jie, Brandon"
        },
        "content": "        FxAssert.verifyThat(\"#sceneTitle\", LabeledMatchers.hasText(\"Home Scene\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 34,
      "Ng Wei Jie, Brandon": 6
    }
  }
]
