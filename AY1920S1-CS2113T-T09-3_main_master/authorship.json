[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveBaseName \u003d \"AlgoSenpai\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.media\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "group \u0027com.algosenpai.app\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    mainClassName \u003d \"com.algosenpai.app.Launcher\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    implementation \u0027com.itextpdf:itextpdf:5.5.10\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    implementation \u0027org.bouncycastle:bcprov-jdk15on:1.56\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:testfx-core:4.0.16-alpha\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:testfx-junit5:4.0.16-alpha\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation \u0027org.testfx:openjfx-monocle:jdk-11+23\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \u003d \u0027full\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027java.awt.headless\u0027, \u0027true\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.robot\u0027, \u0027glass\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.headless\u0027, \u0027true\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027prism.order\u0027, \u0027sw\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027prism.text\u0027, \u0027t2k\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    systemProperty \u0027testfx.setup.timeout\u0027, \u00272500\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 21,
      "-": 40
    }
  },
  {
    "path": "scenebuilder/basic-layout.fxml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 36
    }
  },
  {
    "path": "scenebuilder/home.fxml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cTextField id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cLabel id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Home Page\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cButton id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cButton id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 48
    }
  },
  {
    "path": "scenebuilder/quiz.fxml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cGridPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cTextField id\u003d\"userInput\" GridPane.columnIndex\u003d\"2\" GridPane.columnSpan\u003d\"10\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cLabel id\u003d\"sceneTitle\" prefHeight\u003d\"18.0\" prefWidth\u003d\"104.0\" text\u003d\"Quiz Page\" GridPane.columnIndex\u003d\"6\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cButton id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"105.0\" text\u003d\"Next\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "      \u003cButton id\u003d\"settings\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\" prefWidth\u003d\"75.0\" text\u003d\"Settings\" GridPane.columnIndex\u003d\"13\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 48
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Chapter1.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "import com.algosenpai.app.controller.HomeController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "public class Chapter1 {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the question by using a random number to determine which of the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * subquestions to ask."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if a correct answer is given and false if the answer is wrong."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Boolean generateQuestions() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return bubbleSortPassesQuestion();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return quickSortPivotsQuestion();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return insertionSortSwapsQuestion();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return selectionSortSwapsQuestion();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the Selection Sort Algorithm question related to the sequence of"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then runs the algorithm on it for certain number of swaps, after which it"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * will terminate. An input is taken in from the user as an answer."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the input matches the answer, and false if the answer is"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Boolean selectionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 5) + 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Selection Sort Algorithm : \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String code \u003d new String(\"int i, j, min_idx;\\n\" + \"   for (i \u003d 0; i \u003c n-1; i++) {\\n\" + \"       min_idx \u003d i;\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"       for (j \u003d i+1; j \u003c n; j++) {\\n\" + \"           if (arr[j] \u003c arr[min_idx]) {\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"               min_idx \u003d j;\\n\" + \"       }\\n\" + \"       }\\n\" + \"   if (min_idx !\u003d i) {\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"       swap(arr[min_idx], arr[i]);\\n\" + \"   }\" + \"}\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        selectionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the Insertion Sort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then conducts Insertion Sort on it. A random number of swaps is generated,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * after which Insertion Sort stops. An input is taken in from the user as an"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * answer."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if a correct answer is given, and false if the answer does not"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         match."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Boolean insertionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Insertion Sort Algorithm : \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String code \u003d new String(\"int i, key, j;\\n\" + \"for (i \u003d 1; i \u003c n; i++) {\\n\" + \"    key \u003d arr[i];\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"    j \u003d i - 1;\\n\" + \"    while (j \u003e\u003d 0 \u0026\u0026 arr[j] \u003e key) {\\n\" + \"        arr[j + 1] \u003d arr[j];\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"        j \u003d j - 1;\\n\" + \"    }\\n\" + \"    arr[j + 1] \u003d key;\\n\" + \"} \\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        insertionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the QuickSort Algorithm question regarding number of possible"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * pivots after certain passes of the algorithm. It determines a random array"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * size, then conducts QuickSort on it. A random snapshot of the array is taken"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * for the question and the answer is pre-determined. An input is taken in from"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * the user as an answer."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the answer is correct, false if the answer is wrong."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Boolean quickSortPivotsQuestion() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(6) + 6;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Integer[] arr \u003d initialArray.toArray(new Integer[arraySize]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger[]\u003e allSteps \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        quickSort(arr, 0, arraySize - 1, allSteps);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int numberOfChoices \u003d allSteps.size() - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr \u003d allSteps.get(random.nextInt(numberOfChoices));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        initialArray \u003d new ArrayList\u003c\u003e(Arrays.asList(arr));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"An array of \" + arraySize"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \" elements underwent some passes of the Quick Sort Algorithm to become : \" + initialArray);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"How many elements could possibly have been the pivot?\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int userInput \u003d s.nextInt();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int answer \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c arraySize; i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            Boolean canBePivot \u003d true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (int j \u003d 0; j \u003c arraySize; j++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if ((j \u003c i \u0026\u0026 arr[j] \u003e arr[i]) || (j \u003e i \u0026\u0026 arr[j] \u003c arr[i])) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    canBePivot \u003d false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (canBePivot) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                answer++;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (userInput \u003d\u003d answer) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + answer + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the BubbleSort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of passes. It determines a random array size,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then fills the array with unique numbers. A random number of passes is"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * determined and the BubbleSort Algorithm stops midway. The user then has to"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * decide what the correct answer is."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return true if the answer matches, and false if the answer is wrong."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Boolean bubbleSortPassesQuestion() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(7) + 3;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int passes \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"An array of \" + arraySize + \" elements underwent the following Bubble Sort Algorithm : \""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"What would be the new configuration of the elements after \" + passes + \" passes?\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String code \u003d new String(\"for (int i \u003d 0; i \u003c passes; i++) {\\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"   for (int j \u003d 0; j \u003c arr.size - 1 - i; j ++) {\\n\" + \"       if (arr[j] \u003e arr[j + 1]) {\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"            swap (arr[j], arr[j+1]);\\n\" + \"       }\\n\" + \"   }\\n\" + \"}\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(code);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String userInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String[] arr \u003d userInput.split(\", \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e userAnswer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String i : arr) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            userAnswer.add(Integer.parseInt(i));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        bubbleSort(initialArray, passes);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (userAnswer.equals(initialArray)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + initialArray + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Conducts Selection Sort on the given ArrayList."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr   The ArrayList to be sorted."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param swaps The number of swaps before the program terminates."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    private static void selectionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int minIdx;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (i \u003d 0; i \u003c arr.size() - 1; i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            minIdx \u003d i;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (j \u003d i + 1; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (arr.get(j) \u003c arr.get(minIdx)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    minIdx \u003d j;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int temp \u003d arr.get(minIdx);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(minIdx, arr.get(i));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(i, temp);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (minIdx !\u003d i) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Conducts Insertion Sort on the given ArrayList."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr   The array to conduct the Insertion Sort algorithm on."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param swaps The number of swaps to be performed before the algorithm"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *              terminates."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void insertionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int key;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (i \u003d 1; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            key \u003d arr.get(i);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            j \u003d i - 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            while (j \u003e\u003d 0 \u0026\u0026 arr.get(j) \u003e key) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr.set(j + 1, arr.get(j));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                j \u003d j - 1;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(j + 1, key);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Bubble Sorts the array."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr    The arraylist to be sorted."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param passes The number of passes before the program gets terminated."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void bubbleSort(ArrayList\u003cInteger\u003e arr, int passes) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c passes; i++) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (int j \u003d 0; j \u003c arr.size() - 1 - i; j++) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int first \u003d arr.get(j);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int second \u003d arr.get(j + 1);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (first \u003e second) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    int temp \u003d first;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    arr.set(j, second);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    arr.set(j + 1, temp);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Quick Sorts the array."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void quickSort(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (low \u003c high) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int partitionIndex \u003d partition(arr, low, high, allSteps);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            quickSort(arr, low, partitionIndex - 1, allSteps);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            quickSort(arr, partitionIndex + 1, high, allSteps);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Partitions the array according to the Quick Sort Algorithm."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return An integer which is the partitioning index."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static int partition(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int pivot \u003d arr[high];"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i \u003d (low - 1);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int j \u003d low; j \u003c\u003d high - 1; j++) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (arr[j] \u003c pivot) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int temp \u003d arr[i];"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr[i] \u003d arr[j];"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr[j] \u003d temp;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int temp \u003d arr[i + 1];"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr[i + 1] \u003d arr[high];"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr[high] \u003d temp;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Integer[] tempArray \u003d Arrays.copyOf(arr, arr.length);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        allSteps.add(tempArray);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return (i + 1);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the set of values to be used for the arrays."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arraySize The size of the set to be used."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return The hashset to be used for the array."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static HashSet\u003cInteger\u003e generateArray(int arraySize) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        HashSet\u003cInteger\u003e tempStorage \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        while (tempStorage.size() !\u003d arraySize) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            tempStorage.add(value);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return tempStorage;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenmatt7": 10,
      "therealcs1010": 330
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.controller.SceneController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Application.launch(SceneController.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 13
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.BackCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ConvertStringToIntegerArrayCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.HistoryCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.MenuCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ReportCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ResetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.ResultCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.SaveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.SelectCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.StartCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.command.UndoCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Returns command to execute after parsing the user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @param userInput user\u0027s input command or answer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @return command to execute"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @throws DukeExceptions if user input is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public static Command parse(String userInput) throws DukeExceptions {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        String[] outputs \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        String firstWord \u003d outputs[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        int num \u003d Integer.parseInt(outputs[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        if (firstWord.equals(\"exit\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"menu\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new MenuCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"start\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new StartCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"select\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new SelectCommand(num);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"result\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ResultCommand(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"report\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ReportCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"back\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new BackCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"history\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new HistoryCommand(num);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"undo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"clear\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ClearCommand(num);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"reset\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ResetCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"save\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new SaveCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (firstWord.equals(\"help\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else if (isInteger(firstWord)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return new ConvertStringToIntegerArrayCommand(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            throw new DukeExceptions(\"☹ OOPS!!! I\u0027m sorry, please enter a valid command.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Returns command to execute after parsing the user input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @param s string taken in"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @return boolean true if the string can be returned as an integer else boolean false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public static boolean isInteger(String s) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 83
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/Question.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Question {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Question(String question,String answer) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public boolean isAnswerEqual(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return userInput.equals(answer);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 23
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/UserStats.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import com.itextpdf.text.Chapter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Handles temporary storage of user stats while the program is running."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class UserStats {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Inner class to hold the 3 data for each chapter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * the chapter name, total questions answered and correct answers."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    static class ChapterStat {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String chapterName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        int totalAnswered;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        int correctAnswers;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ChapterStat(int totalAnswered, int correctAnswers) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.totalAnswered \u003d totalAnswered;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.correctAnswers \u003d correctAnswers;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        public ChapterStat(String chapterName,int totalAnswered, int correctAnswers) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.chapterName \u003d chapterName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.totalAnswered \u003d totalAnswered;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.correctAnswers \u003d correctAnswers;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private ArrayList\u003cChapterStat\u003e data;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param size The initial size of the arraylist containing the data. Should be equal to the number of chapters."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public UserStats(int size) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        data \u003d new ArrayList\u003cChapterStat\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            data.add(new ChapterStat(0, 0));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Get the stats for a particular chapter."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param index The index of the chapter."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return A pair of (correct answers , total Qs answered)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Pair\u003cInteger,Integer\u003e getStats(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return new Pair\u003c\u003e(data.get(index).correctAnswers, data.get(index).totalAnswered);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Get the stats for a particular chapter."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param chapterName The name of the chapter."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return A pair of (correct answers , total Qs answered), or null if no such chapter found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Pair\u003cInteger,Integer\u003e getStats(String chapterName) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ChapterStat target \u003d getStatsByName(chapterName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (target \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return new Pair\u003c\u003e(target.correctAnswers, target.totalAnswered);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Call this after each question is answered to update the stats for that chapter."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param index The index of the chapter to update."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param wasAnsweredCorrectly Whether the answer that is being added was answered correctly."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void updateStats(int index, boolean wasAnsweredCorrectly) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        data.get(index).totalAnswered++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (wasAnsweredCorrectly) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            data.get(index).correctAnswers++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Call this after each question is answered to update the stats for that chapter."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param chapterName The name of the chapter to update."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param wasAnsweredCorrectly Whether the answer that is being added was answered correctly."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void updateStats(String chapterName, boolean wasAnsweredCorrectly) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ChapterStat target \u003d getStatsByName(chapterName);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (target \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        target.totalAnswered++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (wasAnsweredCorrectly) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            target.correctAnswers++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private ChapterStat getStatsByName(String chapterName) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ChapterStat target \u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (ChapterStat item : data) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            if (item.chapterName.equals(chapterName)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                target \u003d item;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return target;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 110
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/chapters/ChapterLinkedList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package com.algosenpai.app.chapters;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "class ChapterLinkedList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private int totalAnswers;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private int correctAnswers;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a random question according to a random value."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the question was answered correctly, or false if the question"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         was answered wrongly."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Boolean generateQuestions() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return stackPopPushQuestion();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return queuePopPushQuestion();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return singleInsertLinkedListQuestion();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return pseudoCodeQuestion();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a pseudoCode question that tests the user on their understanding of"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Linked List through pseudocode calculation. An input is taken from the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * as an answer."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the answer matches the input, or false if the answer is"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private Boolean pseudoCodeQuestion() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 6;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e array \u003d new ArrayList\u003c\u003e(createList(arraySize));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            array.set(i, array.get(i) % 10);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"In the pseudocode program below, list is an initially empty Singly Linked List.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"The function populateList() adds the integers \" + array + \" to the tail of the list sequentially.\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"What is the output of the program?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cString\u003e pseudoCode \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        generatePseudoCode(pseudoCode);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printPseudoCode(pseudoCode);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int answer \u003d calculateSum(array, pseudoCode);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int userInput \u003d s.nextInt();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (answer \u003d\u003d userInput) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.print(\"This is the correct answer : \" + answer);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\". Try harder!\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Calculates the sum of the values based on the pseudocode generated."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param array      The ArrayList which makes up the Linked List."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param pseudoCode The list of instructions in the pseudo-code."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return The value of the sum given in the pseudo-code."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private int calculateSum(ArrayList\u003cInteger\u003e array, ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int sum \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String i : pseudoCode) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            switch (i) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"n \u003d n.next;\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"sum +\u003d list.tail.value;\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                sum +\u003d array.get(array.size() - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"sum +\u003d list.head.value;\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                sum +\u003d array.get(0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"n \u003d list.head;\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"sum +\u003d n.value;\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                sum +\u003d array.get(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"sum +\u003d n.next.value;\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                sum +\u003d array.get(index + 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return sum;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a list of pseudo-code, such as \"n \u003d n.next\", or \"n \u003d list.head\"."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * This list of instructions will be printed to the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param pseudoCode The list which will contain the instructions."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void generatePseudoCode(ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        pseudoCode.add(\"populateList();\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        pseudoCode.add(\"int sum \u003d 0;\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        pseudoCode.add(\"Node n \u003d list.head; //list.head/list.tail points to the first/last integer in list\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int noOfCommands \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c noOfCommands; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int commandToAdd \u003d random.nextInt(6);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            switch (commandToAdd) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"n \u003d n.next;\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"sum +\u003d list.tail.value;\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"sum +\u003d list.head.value;\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"n \u003d list.head;\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"sum +\u003d n.value;\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                pseudoCode.add(\"sum +\u003d n.next.value;\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        pseudoCode.add(\"print sum;\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a question relating to a single insertion in a Singly Linked List."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * The question can be either appending to the head or the tail of the linked"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * list. A sequence of integers are taken in from the user as an answer."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the answer matches the input given by the user, else false if"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         the answer is wrong."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private Boolean singleInsertLinkedListQuestion() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int listSize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        LinkedList\u003cInteger\u003e ll \u003d createList(listSize);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int valueToAdd \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String positionToAdd;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (random.nextInt(2) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            positionToAdd \u003d \"head\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            positionToAdd \u003d \"tail\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"Consider the Singly Linked List of size \" + listSize + \" below.\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \" It undergoes an insertion of value \" + valueToAdd + \" at the \" + positionToAdd"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \".\\nWhat would be the new sequence of integers?\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printList(ll);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (positionToAdd.equals(\"head\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            ll.addFirst(valueToAdd);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            ll.addLast(valueToAdd);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        LinkedList\u003cInteger\u003e userInput \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String[] arr \u003d input.split(\" -\u003e \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String string : arr) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            userInput.add(Integer.parseInt(string));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (userInput.equals(ll)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            printList(ll);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Try harder!\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a Queue question related to popping and pushing. A random size is"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * determined, followed by a series of instructions consisting of pop and push."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * The algorithm will do the popping and pushing accordingly. An input is taken"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * in from the user as an answer."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the answer matches the input, or false if the question was"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         answered wrongly."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private Boolean queuePopPushQuestion() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int queueSize \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        LinkedList\u003cInteger\u003e queue \u003d createList(queueSize);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cString\u003e instructions \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int numberOfInstructions \u003d random.nextInt(3) + 4;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        addInstructions(instructions, numberOfInstructions);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"A Queue of size \" + queueSize"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \" undergoes a series of operations as shown below.\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"What would be the new value called upon queue.peek()?\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printQueue(queue);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printInstructions(instructions);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        changeQueue(instructions, queue);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (val \u003d\u003d queue.getLast()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + queue.getLast() + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Changes the queue according to the instructions given. If instruction is pop,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * the front value of the list would be removed, or else a new value will be"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * pushed into the queue."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param instructions The list of instructions given."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param queue        The list which would be editted according to the"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *                     instructions given."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void changeQueue(ArrayList\u003cString\u003e instructions, LinkedList\u003cInteger\u003e queue) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String cmd : instructions) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (cmd.contains(\"Pop\")) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                queue.removeLast();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                String number \u003d cmd.substring(5, cmd.length() - 2);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int valuetoadd \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                queue.addFirst(valuetoadd);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates a Stack operations question related to pushing and popping. A"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * random stack size is determined and the stack is created. A sequence of"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * instructions consisting of push and pops are created, followed by which, the"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * algorithm will do the popping and pushing accordingly. An input is taken in"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * from the user as an answer."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return True if the answer matches the input, or false if the answer is"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *         wrong."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private Boolean stackPopPushQuestion() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int stackSize \u003d random.nextInt(4) + 4;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        LinkedList\u003cInteger\u003e stack \u003d createList(stackSize);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cString\u003e instructions \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int numberOfInstructions \u003d random.nextInt(3) + 4;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        addInstructions(instructions, numberOfInstructions);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"A Stack of size \" + stackSize"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \" undergoes a series of operations as shown below.\\n\""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"What would be the new value called upon stack.peek()?\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printStack(stack);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        printInstructions(instructions);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        changeStack(instructions, stack);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        s.nextLine();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (val \u003d\u003d stack.getLast()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"Well Done! You got a correct answer!\\n\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"This is the correct answer : \" + stack.getLast() + \"\\nTry harder!\\n\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Changes the stack according to the instructions generated. Instructions are"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * either pop or push."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param instructions The list of instructions provided."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param stack        The data structure to be changed."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void changeStack(ArrayList\u003cString\u003e instructions, LinkedList\u003cInteger\u003e stack) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String cmd : instructions) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (cmd.contains(\"Pop\")) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                stack.removeLast();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                String number \u003d cmd.substring(5, cmd.length() - 2);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int valuetoadd \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                stack.addLast(valuetoadd);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Adds new instructions to the list through random generation of either 1 or 0."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * If values is 0, a push command is added along with a value. Else, a pop"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * command is added."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param instructions         The list where instructions will be added."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param numberOfInstructions The number of instructions to be added into the"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *                             list."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void addInstructions(ArrayList\u003cString\u003e instructions, int numberOfInstructions) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfInstructions; i++) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int val \u003d random.nextInt(2);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int toadd \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            switch (val) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                String combined \u003d \"Push(\" + Integer.toString(toadd) + \");\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                instructions.add(combined);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                instructions.add(\"Pop();\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Creates a Linked List and populate it with unique numbers."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param size The number of elements to be in the Linked List."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return The Linked List data structure to be used for the question."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private LinkedList\u003cInteger\u003e createList(int size) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        HashSet\u003cInteger\u003e set \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        while (set.size() !\u003d size) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            set.add(value);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        LinkedList\u003cInteger\u003e stackCreated \u003d new LinkedList\u003c\u003e(set);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return stackCreated;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Prints the list of pseudo-code."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param pseudoCode The list of instructions in the pseudo-code."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void printPseudoCode(ArrayList\u003cString\u003e pseudoCode) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String cmd : pseudoCode) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(cmd);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Prints the list given."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param ll The linked list provided."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void printList(LinkedList\u003cInteger\u003e ll) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i : ll) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.printf(\"[%d]\", i);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (i !\u003d ll.getLast()) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                System.out.print(\" -\u003e \");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Prints the stack created."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param stack The stack containing the elements."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void printStack(LinkedList\u003cInteger\u003e stack) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i : stack) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.printf(\"[%d] \u003c- \", i);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"Head\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Prints the queue created."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param queue The queue containing the elements."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void printQueue(LinkedList\u003cInteger\u003e queue) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i : queue) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.printf(\"[%d] -\u003e \", i);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        System.out.println(\"Front\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Prints the instruction given by the list on seperate new lines."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param instructions The list of instructions provided."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void printInstructions(ArrayList\u003cString\u003e instructions) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String s : instructions) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.printf(\"%d. %s\\n\", i, s);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 398,
      "modakshantanu": 5
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/chapters/ChapterSorting.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package com.algosenpai.app.chapters;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import com.algosenpai.app.Question;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "public class ChapterSorting {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the question by using a random number to determine which of the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * sub-questions to ask."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return A question class that contains the question and expected answer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    public static Question generateQuestions() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int questionType \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        switch (questionType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return bubbleSortPassesQuestion();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return quickSortPivotsQuestion();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return insertionSortSwapsQuestion();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return selectionSortSwapsQuestion();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the Selection Sort Algorithm question related to the sequence of"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then runs the algorithm on it for certain number of swaps, after which it"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * will terminate."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return the question class with the question."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    private static Question selectionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 5) + 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String question \u003d \"An array of \" + arraySize + \" elements underwent the following Selection Sort Algorithm : \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"int i, j, min_idx;\\n\" + \"   for (i \u003d 0; i \u003c n-1; i++) {\\n\" + \"       min_idx \u003d i;\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"       for (j \u003d i+1; j \u003c n; j++) {\\n\" + \"           if (arr[j] \u003c arr[min_idx]) {\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"               min_idx \u003d j;\\n\" + \"       }\\n\" + \"       }\\n\" + \"   if (min_idx !\u003d i) {\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"       swap(arr[min_idx], arr[i]);\\n\" + \"   }\" + \"}\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        selectionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Question newQuestion \u003d new Question(question, initialArray.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return newQuestion;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the Insertion Sort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of swaps. It determines a random array size,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then conducts Insertion Sort on it. A random number of swaps is generated,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * after which Insertion Sort stops."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return the question class with the question."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Question insertionSortSwapsQuestion() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(4) + 5;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int swaps \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String question \u003d \"An array of \" + arraySize + \" elements underwent the following Insertion Sort Algorithm : \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"What would be the new configuration of the elements after \" + swaps + \" swaps?\\n\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"int i, key, j;\\n\" + \"for (i \u003d 1; i \u003c n; i++) {\\n\" + \"    key \u003d arr[i];\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"    j \u003d i - 1;\\n\" + \"    while (j \u003e\u003d 0 \u0026\u0026 arr[j] \u003e key) {\\n\" + \"        arr[j + 1] \u003d arr[j];\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"        j \u003d j - 1;\\n\" + \"    }\\n\" + \"    arr[j + 1] \u003d key;\\n\" + \"} \\n\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        insertionSort(initialArray, swaps);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Question newQuestion \u003d new Question(question, initialArray.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return newQuestion;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the QuickSort Algorithm question regarding number of possible"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * pivots after certain passes of the algorithm. It determines a random array"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * size, then conducts QuickSort on it. A random snapshot of the array is taken"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * for the question and the answer is pre-determined."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return the question class with the question."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Question quickSortPivotsQuestion() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(6) + 6;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Integer[] arr \u003d initialArray.toArray(new Integer[arraySize]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger[]\u003e allSteps \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        quickSort(arr, 0, arraySize - 1, allSteps);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int numberOfChoices \u003d allSteps.size() - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr \u003d allSteps.get(random.nextInt(numberOfChoices));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        initialArray \u003d new ArrayList\u003c\u003e(Arrays.asList(arr));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String question \u003d \"An array of \" + arraySize"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \" elements underwent some passes of the Quick Sort Algorithm to become : \" + initialArray + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"How many elements could possibly have been the pivot?\\n\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int answer \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c arraySize; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            Boolean canBePivot \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (int j \u003d 0; j \u003c arraySize; j++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if ((j \u003c i \u0026\u0026 arr[j] \u003e arr[i]) || (j \u003e i \u0026\u0026 arr[j] \u003c arr[i])) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    canBePivot \u003d false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (canBePivot) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                answer++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Question newQuestion \u003d new Question(question, Integer.toString(answer));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return newQuestion;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the BubbleSort Algorithm question regarding the sequence of"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * integers after a certain number of passes. It determines a random array size,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * then fills the array with unique numbers. A random number of passes is"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * determined and the BubbleSort Algorithm stops midway. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return the question class with the question."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Question bubbleSortPassesQuestion() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int arraySize \u003d random.nextInt(7) + 3;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cInteger\u003e initialArray \u003d new ArrayList\u003c\u003e(generateArray(arraySize));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int passes \u003d random.nextInt(arraySize - 2) + 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String question \u003d \"An array of \" + arraySize + \" elements underwent the following Bubble Sort Algorithm : \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + initialArray + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"What would be the new configuration of the elements after \" + passes + \" passes?\\n\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        question +\u003d \"for (int i \u003d 0; i \u003c passes; i++) {\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"   for (int j \u003d 0; j \u003c arr.size - 1 - i; j ++) {\\n\" + \"       if (arr[j] \u003e arr[j + 1]) {\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                + \"            swap (arr[j], arr[j+1]);\\n\" + \"       }\\n\" + \"   }\\n\" + \"}\\n\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        bubbleSort(initialArray, passes);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Question newQuestion \u003d new Question(question, initialArray.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return newQuestion;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Conducts Selection Sort on the given ArrayList."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr   The ArrayList to be sorted."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param swaps The number of swaps before the program terminates."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    private static void selectionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int minIdx;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (i \u003d 0; i \u003c arr.size() - 1; i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            minIdx \u003d i;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (j \u003d i + 1; j \u003c arr.size(); j++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (arr.get(j) \u003c arr.get(minIdx)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    minIdx \u003d j;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int temp \u003d arr.get(minIdx);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(minIdx, arr.get(i));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(i, temp);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (minIdx !\u003d i) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Conducts Insertion Sort on the given ArrayList."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr   The array to conduct the Insertion Sort algorithm on."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param swaps The number of swaps to be performed before the algorithm"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *              terminates."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void insertionSort(ArrayList\u003cInteger\u003e arr, int swaps) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int key;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int j;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (i \u003d 1; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            key \u003d arr.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            j \u003d i - 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            while (j \u003e\u003d 0 \u0026\u0026 arr.get(j) \u003e key) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr.set(j + 1, arr.get(j));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                j \u003d j - 1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr.set(j + 1, key);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (counter \u003d\u003d swaps) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Bubble Sorts the array."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr    The arraylist to be sorted."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param passes The number of passes before the program gets terminated."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void bubbleSort(ArrayList\u003cInteger\u003e arr, int passes) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int i \u003d 0; i \u003c passes; i++) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (int j \u003d 0; j \u003c arr.size() - 1 - i; j++) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int first \u003d arr.get(j);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int second \u003d arr.get(j + 1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (first \u003e second) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    int temp \u003d first;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    arr.set(j, second);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    arr.set(j + 1, temp);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Quick Sorts the array."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void quickSort(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        if (low \u003c high) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int partitionIndex \u003d partition(arr, low, high, allSteps);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            quickSort(arr, low, partitionIndex - 1, allSteps);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            quickSort(arr, partitionIndex + 1, high, allSteps);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Partitions the array according to the Quick Sort Algorithm."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arr      The array to be sorted."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param low      The start of the partitioning."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param high     The end of the partitioning."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param allSteps The arraylist which takes a snapshot after each step."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return An integer which is the partitioning index."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static int partition(Integer[] arr, int low, int high, ArrayList\u003cInteger[]\u003e allSteps) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int pivot \u003d arr[high];"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int i \u003d (low - 1);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (int j \u003d low; j \u003c\u003d high - 1; j++) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (arr[j] \u003c pivot) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int temp \u003d arr[i];"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr[i] \u003d arr[j];"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                arr[j] \u003d temp;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int temp \u003d arr[i + 1];"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr[i + 1] \u003d arr[high];"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        arr[high] \u003d temp;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Integer[] tempArray \u003d Arrays.copyOf(arr, arr.length);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        allSteps.add(tempArray);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return (i + 1);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Generates the set of values to be used for the arrays."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param arraySize The size of the set to be used."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @return The hashset to be used for the array."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static HashSet\u003cInteger\u003e generateArray(int arraySize) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        HashSet\u003cInteger\u003e tempStorage \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        while (tempStorage.size() !\u003d arraySize) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            int value \u003d random.nextInt(100);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            tempStorage.add(value);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return tempStorage;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenmatt7": 4,
      "therealcs1010": 283
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/BackCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class BackCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 8
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ClearCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public ClearCommand(int num) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 14
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Create new command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Execute command action."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public abstract void execute() throws DukeExceptions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 19
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ConvertStringToIntegerArrayCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ConvertStringToIntegerArrayCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Chapter user is at."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int chapter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Input by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public ConvertStringToIntegerArrayCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * Returns the answer of the user as an array of integers."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @param userInput the original user answer with arrows"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     * @return userAnswer the array of integers based on the user\u0027s original answer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int[] userAnswer(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        String[] newArray \u003d userInput.split(\" -\u003e \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        int[] intArray \u003d new int[10000];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        for (String i : newArray) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            intArray[count] \u003d Integer.parseInt(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        return intArray;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 42
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 8
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 8
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/HistoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class HistoryCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public HistoryCommand(int num) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 15
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/MenuCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class MenuCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 9
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ReportCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ReportCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 9
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ResetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ResetCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 9
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/ResultCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class ResultCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int chap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public ResultCommand(int chap) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        this.chap \u003d chap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 15
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/SaveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class SaveCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 9
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/SelectCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class SelectCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public SelectCommand(int num) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() throws DukeExceptions {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 18
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/StartCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "import com.algosenpai.app.exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class StartCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() throws DukeExceptions {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 11
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/command/UndoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 9
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/CommandsConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class CommandsConstant {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e homeCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/play\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/date\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/sound\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e quizCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/home\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/end\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/prev\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/next\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e dateCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/home\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e endCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/home\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/date\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/review\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e girlsCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/home\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/select\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/fun\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e reviewCommand \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/home\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/date\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"/exit\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 42
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/ImagesConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ImagesConstant {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e quizImages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e homeImages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e dateImages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e endImages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e girlsImages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e reviewImages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cImagesEnum, String\u003e characterImages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final ArrayList\u003cString\u003e characterImagesList \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"miku.png\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            add(\"lolicon.png\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizImages.put(ImagesEnum.MORNING_CLASSROOM, \"morning-classroom.jpg\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizImages.put(ImagesEnum.AFTERNOON_CLASSROOM, \"afternoon-classroom.jpg\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizImages.put(ImagesEnum.EVENING_CLASSROOM, \"evening-classroom.jpg\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizImages.put(ImagesEnum.EMPTY_CLASSROOM, \"empty-classroom.jpg\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeImages.put(ImagesEnum.CUTE_ANIME, \"cute-anime.png\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages.put(ImagesEnum.PARK, \"park.jpg\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages.put(ImagesEnum.BEDROOM, \"bedroom.jpg\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages.put(ImagesEnum.SWIMMING_POOL, \"swimming-pool.jpg\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages.put(ImagesEnum.TOUR, \"tour.jpg\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateImages.put(ImagesEnum.TOWN, \"town.jpg\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endImages.put(ImagesEnum.EVENING, \"evening.jpg\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsImages.put(ImagesEnum.KISS, \"kiss.png\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewImages.put(ImagesEnum.SAO, \"sao.jpeg\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImages \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImages.put(ImagesEnum.MIKU, \"miku.png\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImages.put(ImagesEnum.LOLICON, \"lolicon.png\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 52
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/ImagesEnum.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public enum  ImagesEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for home scene"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    CUTE_ANIME,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for quiz scene"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    AFTERNOON_CLASSROOM,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    EMPTY_CLASSROOM,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    EVENING_CLASSROOM,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    MORNING_CLASSROOM,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for end scene"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    EVENING,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for girl scene"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    KISS,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for date scene"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    BEDROOM,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    PARK,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    SWIMMING_POOL,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    TOUR,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    TOWN,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // background images for review scene"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    SAO,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    // images of character"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    LOLICON,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    MIKU;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 33
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/JavaFxConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class JavaFxConstant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final int windowHeight \u003d 600;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final int windowWidth \u003d 1000;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final int sceneInterval \u003d 3000;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String windowTitle \u003d \"AlgoSenpai Adventures\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 11
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/ResourcePathConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ResourcePathConstant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String soundFilePath \u003d System.getProperty(\"user.dir\") + \"/src/main/resources/sound/\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String imagesFilePath \u003d System.getProperty(\"user.dir\") + \"/src/main/resources/images/\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String viewFilePath \u003d System.getProperty(\"user.dir\") + \"/src/main/resources/view/\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String soundResourcePath \u003d \"/sound/\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String imagesResourcePath \u003d \"/images/\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static final String viewResourcePath \u003d \"/view/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 16
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/SoundConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class SoundConstant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e quizSound;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e homeSound;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e dateSound;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e endSound;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e girlsSound;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cSoundEnum, String\u003e reviewSound;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.BURST_THE_GRAVITY, \"burst-the-gravity.wav\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.GOTOBUN, \"gotobun.wav\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.REZERO, \"rezero.wav\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.ROMEO_AND_CINDERELLA, \"romeo-and-cinderella.wav\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.SATURATION, \"saturation.wav\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizSound.put(SoundEnum.SISTERS, \"sisters.wav\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeSound.put(SoundEnum.PROMISE, \"promise.wav\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.BURST_THE_GRAVITY, \"burst-the-gravity.wav\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.GOTOBUN, \"gotobun.wav\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.REZERO, \"rezero.wav\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.ROMEO_AND_CINDERELLA, \"romeo-and-cinderella.wav\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.SATURATION, \"saturation.wav\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateSound.put(SoundEnum.SISTERS, \"sisters.wav\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.BURST_THE_GRAVITY, \"burst-the-gravity.wav\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.GOTOBUN, \"gotobun.wav\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.REZERO, \"rezero.wav\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.ROMEO_AND_CINDERELLA, \"romeo-and-cinderella.wav\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.SATURATION, \"saturation.wav\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endSound.put(SoundEnum.SISTERS, \"sisters.wav\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsSound.put(SoundEnum.ASAYAKE_NO_STARMINE, \"asayake-no-starmine.wav\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.BURST_THE_GRAVITY, \"burst-the-gravity.wav\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.GOTOBUN, \"gotobun.wav\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.REZERO, \"rezero.wav\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.ROMEO_AND_CINDERELLA, \"romeo-and-cinderella.wav\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.SATURATION, \"saturation.wav\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewSound.put(SoundEnum.SISTERS, \"sisters.wav\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 55
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/SoundEnum.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public enum SoundEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    ASAYAKE_NO_STARMINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    BURST_THE_GRAVITY,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    GOTOBUN,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    PROMISE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    REZERO,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    ROMEO_AND_CINDERELLA,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    SATURATION,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    SISTERS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 14
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/ViewConstant.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ViewConstant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e quizView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e homeView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e dateView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e endView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e girlsView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e reviewView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Map\u003cViewEnum, String\u003e characterView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        quizView.put(ViewEnum.QUIZ, \"quiz.fxml\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        homeView.put(ViewEnum.HOME, \"home.fxml\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dateView.put(ViewEnum.DATE, \"date.fxml\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        endView.put(ViewEnum.END, \"end.fxml\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        girlsView.put(ViewEnum.GIRLS, \"girls.fxml\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewView \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewView.put(ViewEnum.REVIEW, \"review.fxml\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 36
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/constant/ViewEnum.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public enum ViewEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    DATE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    END,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    GIRLS,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    HOME,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    QUIZ,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    REVIEW;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 12
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/AnimationTimerController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.animation.AnimationTimer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public abstract class AnimationTimerController extends AnimationTimer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private long sleepNs \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private long prevTime \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    AnimationTimerController(long sleepMs) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.sleepNs \u003d sleepMs * 1_000_000;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handle(long now) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if ((now - prevTime) \u003c sleepNs) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        prevTime \u003d now;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public abstract void handle();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 26
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/DateController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.CommandsConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.DialogPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DateController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneText;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private DialogPane dialogPane;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private StackPane container;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize quiz scene."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DateController() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        sceneTitle.setText(\"Date\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(sceneTitle, 50, 400);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(sceneTitle, 199,21,133, true, 30, \"arial\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 400, 400);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 250.0, -350);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayDialogPane(dialogPane, 0.8, 2, 5, 255, 105, 180, 5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(dialogPane, 450, -200);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCommandList(container, CommandsConstant.dateCommand,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 218, 185, true, 20, \"arial\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                350.0, 250.0, 30);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(JavaFxConstant.sceneInterval) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key inputs."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.H) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 110
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/EndController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.CommandsConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class EndController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text subSceneTitle;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private StackPane container;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize home scene."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public EndController() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        sceneTitle.setText(\"End Of Quiz\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(sceneTitle, 150, -100);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(sceneTitle, 255,218,185, true, 40, \"arial\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        subSceneTitle.setText(\"Score: 0 / 10\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(subSceneTitle, 200, -80);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(subSceneTitle, 255,218,185, true, 30, \"arial\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 400, 400);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 250.0, 0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCommandList(container, CommandsConstant.endCommand,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 218, 185, true, 20, \"arial\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                300.0, 250.0, 30);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(JavaFxConstant.sceneInterval) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key inputs."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.H) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.R) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.reviewView, ImagesConstant.reviewImages, SoundConstant.reviewSound);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.G) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.girlsView, ImagesConstant.girlsImages, SoundConstant.girlsSound);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 116
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/GirlsController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.CommandsConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ResourcePathConstant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class GirlsController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private StackPane container;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private FlowPane options;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize home scene."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public GirlsController() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        sceneTitle.setText(\"Select Your Waifu!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(sceneTitle, 100, -150);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(sceneTitle, 199,21,133, true, 40, \"arial\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 300, 300);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 350.0, 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCommandList(container, CommandsConstant.girlsCommand,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 218, 185, true, 20, \"arial\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                450.0, 300.0, 30);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c ImagesConstant.characterImagesList.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ImageView imageView \u003d new ImageView();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            displayCharacterImage(imageView, ImagesConstant.characterImagesList.get(i), 150, 150);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            setNodePos(imageView, 150.0, -80.0 + i * 30);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            options.getChildren().add(imageView);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(JavaFxConstant.sceneInterval) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key inputs."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.H) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.D) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.dateView, ImagesConstant.dateImages, SoundConstant.dateSound);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (userInput.getText().equals(\"/select 1\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                Image image \u003d new Image(getClass().getResourceAsStream("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        ResourcePathConstant.imagesResourcePath + \"miku.png\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                characterImage.setImage(image);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (userInput.getText().equals(\"/select 2\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                Image image \u003d new Image(getClass().getResourceAsStream("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        ResourcePathConstant.imagesResourcePath + \"lolicon.png\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                characterImage.setImage(image);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 132
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/HomeController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.CommandsConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class HomeController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private StackPane container;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int userInputY \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize home scene."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public HomeController() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        sceneTitle.setText(\"Welcome to AlgoSenpai Adventures!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(sceneTitle, 0, 0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(sceneTitle, 199,21,133, true, 40, \"arial\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 400, 400);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 250.0, -200);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCommandList(container, CommandsConstant.homeCommand,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 218, 185, true, 20, \"arial\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                300.0, 250.0, 30);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                if (userInputY \u003c\u003d 250) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    userInputY +\u003d 2;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    setNodePos(sceneTitle, userInputY, 0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key  inputs."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.Q) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.quizView, ImagesConstant.quizImages, SoundConstant.quizSound);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.R) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.reviewView, ImagesConstant.reviewImages, SoundConstant.reviewSound);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.G) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.girlsView, ImagesConstant.girlsImages, SoundConstant.girlsSound);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 111,
      "sevenmatt7": 2
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/MusicController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ResourcePathConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundEnum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.media.Media;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.media.MediaPlayer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class MusicController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static MediaPlayer mediaPlayer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static boolean isLoaded \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static boolean isMuted \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    MusicController() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        playMusic(SoundConstant.homeSound.get(SoundEnum.PROMISE));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Play and change music."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param musicName name of the music."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void playMusic(String musicName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (isLoaded) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            mediaPlayer.stop();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String musicFile \u003d ResourcePathConstant.soundFilePath + musicName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Media sound \u003d new Media(new File(musicFile).toURI().toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        mediaPlayer \u003d new MediaPlayer(sound);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        mediaPlayer.setAutoPlay(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        mediaPlayer.play();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        isLoaded \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void toggleVolume() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (isMuted) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            mediaPlayer.setMute(false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            isMuted \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            mediaPlayer.setMute(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            isMuted \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 48
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/QuizController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "import com.algosenpai.app.Question;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "import com.algosenpai.app.chapters.ChapterSorting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.CommandsConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.utility.ResourceRandomUtility;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.DialogPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class QuizController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "    private Question newQuestion;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneText;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private DialogPane dialogPane;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private StackPane container;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize quiz scene."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public QuizController() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        sceneTitle.setText(\"Quiz\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(sceneTitle, 50, 400);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(sceneTitle, 199,21,133, true, 30, \"arial\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 400, 400);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 250.0, -350);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayDialogPane(dialogPane, 0.8, 2, 5, 255, 105, 180, 5);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(dialogPane, 450, -200);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCommandList(container, CommandsConstant.quizCommand,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 218, 185, true, 20, \"arial\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                350.0, 250.0, 30);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(JavaFxConstant.sceneInterval) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                String imageName \u003d ResourceRandomUtility.randomResources(ImagesConstant.quizImages);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                changeBackgroundImage(imageName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key inputs."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.H) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.E) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.endView, ImagesConstant.endImages, SoundConstant.endSound);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "        //handling the user commands entered"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            switch (userInput.getText()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            case \"menu\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                sceneText.setText(\"These are the commands available\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            case \"start\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                sceneText.setText(\"The game is loading....\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                int questionNumber \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                while (questionNumber \u003c 10) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    newQuestion \u003d ChapterSorting.generateQuestions();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    assert newQuestion !\u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    sceneText.setText(newQuestion.getQuestion());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                        if (newQuestion.isAnswerEqual(userInput.getText())) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                            sceneText.setText(\"Correct!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                            sceneText.setText(newQuestion.getAnswer());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                    questionNumber++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                sceneText.setText(\"Aww you\u0027re leaving already? See you soon!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "                sceneText.setText(\"I\u0027m sorry, I don\u0027t understand what you mean..\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "            userInput.setText(\"\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 117,
      "sevenmatt7": 35
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/ReviewController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.model.ReviewQuestionListModel;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.model.ReviewTracingListModel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.model.ReviewQuestionModel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.model.Triplet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.model.ReviewTracingModel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ReviewController extends SceneController implements Initializable {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Text sceneTitle;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ImageView characterImage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ScrollPane reviewPane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private AnimationTimerController backgroundSceneTimer;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ReviewQuestionListModel reviewQuestionListModel;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ReviewTracingListModel reviewTracingListModel;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Queue\u003cTriplet\u003cReviewTracingListModel, ReviewQuestionModel, Integer\u003e\u003e animation;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initializes questions and ui for review scene."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewController() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewQuestionListModel \u003d new ReviewQuestionListModel();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewTracingListModel \u003d new ReviewTracingListModel();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        animation \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        handle();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setUpReview();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void setUpReview() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        // setup sample questions for review scene"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ReviewQuestionModel reviewQuizModel \u003d new ReviewQuestionModel();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewQuizModel.setQuestion(\"Q\" + i + \") What is the sequence of numbers after 3 swaps using bubble sort?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewQuizModel.setMyAnswer(\"Your Answer: 3, 2, 1, 5, 4\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewQuizModel.setActualAnswer(\"Correct Answer: 1, 2, 3, 4, 5\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewQuizModel.setList(new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    add(5);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    add(1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    add(2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    add(3);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    add(4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewQuestionListModel.addReviewQuizModel(reviewQuizModel);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewTracingListModel.addReviewTracingModel(new ReviewTracingModel(i, i + 1, \"C\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewTracingListModel.addReviewTracingModel(new ReviewTracingModel(i, i + 1, \"S\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            reviewTracingListModel.addReviewTracingModel(new ReviewTracingModel(i, i + 1, \"C\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        userInput.setPrefWidth(500.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(userInput, 500.0, -250);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayCharacterImage(characterImage, \"miku.png\", 400, 400);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(characterImage, 250.0, -300);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        VBox scrollingPaneVBox \u003d new VBox();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollingPaneVBox.setSpacing(30);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c reviewQuestionListModel.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ReviewQuestionModel reviewQuizModel \u003d reviewQuestionListModel.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            loadQuestion(scrollingPaneVBox, reviewQuizModel.getQuestion(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    0, 0, 0, false, 20, \"arial\", 600);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            loadQuestion(scrollingPaneVBox, reviewQuizModel.getMyAnswer(),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    0, 0, 0, false, 15, \"arial\", 600);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            loadQuestion(scrollingPaneVBox, reviewQuizModel.getActualAnswer(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    0, 0, 0, false, 15, \"arial\", 600);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ArrayList\u003cInteger\u003e animationList \u003d (ArrayList\u003cInteger\u003e) reviewQuizModel.getList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            FlowPane flowPane \u003d new FlowPane();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            loadAnimation(flowPane, animationList, 20, Color.LIGHTGREEN, 20);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            scrollingPaneVBox.getChildren().add(flowPane);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        displayScrollPane(reviewPane, 20, 20, 20, 20, 600, 550,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 255, 255, 0.3,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                255, 255, 255, 0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewPane.setContent(scrollingPaneVBox);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setNodePos(reviewPane, 0, -150);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void loadQuestion(VBox scrollingPaneVBox, String str, int red, int green, int blue,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                              boolean bold, int fontSize, String fontStyle, int wrappingWidth) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Text text \u003d new Text(str);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        setTextStyle(text, red, green, blue, bold, fontSize, fontStyle);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        text.setWrappingWidth(wrappingWidth);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollingPaneVBox.getChildren().add(text);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void loadAnimation(FlowPane flowPane, ArrayList\u003cInteger\u003e animationList, int radius, Color color, int"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            flowPaneHGap) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int bubbleNode: animationList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            StackPane stackPane \u003d new StackPane();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            displayBubble(stackPane, Integer.toString(bubbleNode), radius, color);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            flowPane.setHgap(flowPaneHGap);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            flowPane.getChildren().add(stackPane);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void handle() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer \u003d new AnimationTimerController(1000) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            private boolean isRunning \u003d false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            int tracingIndex;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ReviewTracingListModel steps;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            ReviewQuestionModel original;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            int reviewIndex;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            private boolean isReset \u003d false;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            private void unpack(Triplet\u003cReviewTracingListModel, ReviewQuestionModel, Integer\u003e triplet) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                isRunning \u003d true;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tracingIndex \u003d 0;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                steps \u003d triplet.getFirst();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                original \u003d triplet.getSecond();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                reviewIndex \u003d triplet.getThird();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            private void reset(ArrayList\u003cInteger\u003e animationList) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                FlowPane flowPane \u003d new FlowPane();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                loadAnimation(flowPane, animationList, 20, Color.LIGHTGREEN, 20);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                VBox scrollingPaneVBox \u003d (VBox) reviewPane.getContent();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                scrollingPaneVBox.getChildren().set(3 + 4 * reviewIndex, flowPane);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                isReset \u003d false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            private void end() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                isRunning \u003d false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                isReset \u003d true;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                animation.remove();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            public void handle() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                if (isReset) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    reset((ArrayList\u003cInteger\u003e) original.getList());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                if (!animation.isEmpty()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    if (!isRunning) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        unpack(animation.peek());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    if (tracingIndex \u003d\u003d steps.size()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        end();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        ReviewTracingModel previous \u003d steps.getReviewTracingModel(tracingIndex - 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        if (previous.getType().equals(\"C\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            compareAnimation(previous, Color.LIGHTGREEN, reviewIndex);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    if (tracingIndex \u003c steps.size()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        if (tracingIndex \u003e 0) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            ReviewTracingModel previous \u003d steps.getReviewTracingModel(tracingIndex - 1);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            if (previous.getType().equals(\"C\")) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                                compareAnimation(previous, Color.LIGHTGREEN, reviewIndex);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        ReviewTracingModel current \u003d steps.getReviewTracingModel(tracingIndex);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        if (current.getType().equals(\"C\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            compareAnimation(current, Color.RED, reviewIndex);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        if (current.getType().equals(\"S\")) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            swapAnimation(current, reviewIndex);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        tracingIndex +\u003d 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        };"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        backgroundSceneTimer.start();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Pair\u003cStackPane, StackPane\u003e getPairOfBubbles(ReviewTracingModel reviewTracingModel, int reviewIndex) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        int indexLeft \u003d reviewTracingModel.getIndexLeft();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        int indexRight \u003d reviewTracingModel.getIndexRight();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        VBox scrollingPaneVBox \u003d (VBox) reviewPane.getContent();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        FlowPane scrollingPaneHBox \u003d (FlowPane) scrollingPaneVBox.getChildren().get(3 + 4 * reviewIndex);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        StackPane stackPaneLeft \u003d (StackPane) scrollingPaneHBox.getChildren().get(indexLeft);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        StackPane stackPaneRight \u003d (StackPane) scrollingPaneHBox.getChildren().get(indexRight);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return new Pair\u003c\u003e(stackPaneLeft, stackPaneRight);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void compareAnimation(ReviewTracingModel reviewTracingModel, Color color, int reviewIndex) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Pair\u003cStackPane, StackPane\u003e pairOfBubbles \u003d getPairOfBubbles(reviewTracingModel, reviewIndex);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Circle circleLeft \u003d (Circle) pairOfBubbles.getKey().getChildren().get(0);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        circleLeft.setFill(color);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Circle circleRight \u003d (Circle) pairOfBubbles.getValue().getChildren().get(0);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        circleRight.setFill(color);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void swapAnimation(ReviewTracingModel reviewTracingModel, int reviewIndex) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Pair\u003cStackPane, StackPane\u003e pairOfBubbles \u003d getPairOfBubbles(reviewTracingModel, reviewIndex);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Text textLeft \u003d (Text) pairOfBubbles.getKey().getChildren().get(1);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Text textRight \u003d (Text) pairOfBubbles.getValue().getChildren().get(1);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Text tmp \u003d new Text(textLeft.getText());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        textLeft.setText(textRight.getText());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        textRight.setText(tmp.getText());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void loadReview(int i) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        animation.add(new Triplet\u003c\u003e(reviewTracingListModel, reviewQuestionListModel.get(i), i));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle shortcut key inputs."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyEvent key inputs."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException key input error."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleKeyPressed(KeyEvent keyEvent) throws IOException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.H) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.G) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            changeSceneOnKeyPressed(ViewConstant.girlsView, ImagesConstant.girlsImages, SoundConstant.girlsSound);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            backgroundSceneTimer.stop();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ESCAPE) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.M) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            toggleVolume();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (userInput.getText().startsWith(\"/review\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                String []c \u003d userInput.getText().split(\" \");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                int reviewIndex \u003d Integer.parseInt(c[1]);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                loadReview(reviewIndex);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Handle mouse clicking inputs."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param mouseEvent mouse inputs."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void handleMouseClicked(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (!userInput.equals(mouseEvent.getSource())) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            userInput.getParent().requestFocus();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 283
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/controller/SceneController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesConstant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundConstant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ResourcePathConstant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ViewEnum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesEnum;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.SoundEnum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.utility.ResourceRandomUtility;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.DialogPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class SceneController extends Application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static MusicController musicController;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static Stage stage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static Pane root;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SceneController.stage \u003d stage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SceneController.musicController \u003d new MusicController();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        changeSceneOnKeyPressed(ViewConstant.homeView, ImagesConstant.homeImages, SoundConstant.homeSound);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static Stage getStage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return stage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void toggleVolume() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        MusicController.toggleVolume();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void setRoot(Pane root) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SceneController.root \u003d root;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void displayBubble(StackPane stackPane, String str, int radius, Color color) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Circle circle \u003d new Circle();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        circle.setRadius(radius);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        circle.setFill(color);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Text text \u003d new Text(str);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stackPane.getChildren().addAll(circle, text);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void displayScrollPane(ScrollPane scrollPane, int top, int right, int bottom, int left, int width, int height,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                           int bgcRed, int bgcGreen, int bgcBlue, double bgcOpacity,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                           int bgRed, int bgGreen, int bgBlue, double bgOpacity) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollPane.setPadding(new Insets(top, right, bottom, left));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollPane.setPrefViewportWidth(width);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollPane.setPrefViewportHeight(height);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        scrollPane.setStyle("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                \"-fx-background-color: rgb(\" + bgcRed + \", \" + bgcGreen + \", \" + bgcBlue + \", \" + bgcOpacity + \"); \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"-fx-background: rgb(\" + bgRed + \", \" + bgGreen + \", \" + bgBlue + \", \" + bgOpacity + \");\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void displayDialogPane(DialogPane dialogPane, double opacity, int scaleX, int scaleY,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                           int red, int green, int blue, int radii) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dialogPane.setOpacity(opacity);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dialogPane.setScaleX(scaleX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dialogPane.setScaleY(scaleY);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        dialogPane.setBackground(new Background("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                new BackgroundFill(Color.rgb(red, green, blue), new CornerRadii(radii), Insets.EMPTY)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void displayCommandList(Pane container, ArrayList\u003cString\u003e commandsList,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            int red, int green, int blue, boolean bold, int fontSize, String fontStyle,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                            double downShift, double rightShift, int spacing) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c commandsList.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            Text text \u003d new Text(commandsList.get(i));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            setTextStyle(text, red, green, blue, bold, fontSize, fontStyle);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            setNodePos(text, downShift + i * spacing, rightShift);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            container.getChildren().add(text);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void displayCharacterImage(ImageView characterImage, String imageName, int height, int width) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Image image \u003d new Image(getClass().getResourceAsStream("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                ResourcePathConstant.imagesResourcePath + imageName));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImage.setImage(image);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImage.setFitHeight(height);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        characterImage.setFitWidth(width);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void changeSceneOnKeyPressed("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            Map\u003cViewEnum, String\u003e view,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            Map\u003cImagesEnum, String\u003e image,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            Map\u003cSoundEnum, String\u003e sound) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        MusicController.playMusic(ResourceRandomUtility.randomResources(sound));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        changeScene(ResourceRandomUtility.randomResources(view), ResourceRandomUtility.randomResources(image));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void changeScene(String sceneName, String imageName) throws IOException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Pane root \u003d FXMLLoader.load(getClass().getResource("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                ResourcePathConstant.viewResourcePath + sceneName));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SceneController.root \u003d root;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Scene scene \u003d new Scene(root, JavaFxConstant.windowWidth, JavaFxConstant.windowHeight);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        (SceneController.getStage()).setScene(scene);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.setTitle(JavaFxConstant.windowTitle);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        changeBackgroundImage(imageName);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void changeBackgroundImage(String imageName) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String fxBackgroundImageStyle \u003d getFxBackgroundImageStyle("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                ResourcePathConstant.imagesResourcePath + imageName);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        root.setStyle(fxBackgroundImageStyle);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String getFxBackgroundImageStyle(String imageName) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"-fx-background-image: url(\u0027\" + imageName + \"\u0027); -fx-background-size: cover;\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void setNodePos(Node node, double downShift, double rightShift) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        node.applyCss();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final double width \u003d node.getLayoutBounds().getWidth();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        node.setTranslateX((double) JavaFxConstant.windowWidth / 2 - width / 2 + rightShift);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        node.setTranslateY(downShift);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void setTextStyle(Node node, int red, int green, int blue, boolean bold, int fontSize, String fontStyle) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        node.applyCss();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        node.setStyle(\"-fx-fill:rgb(\" + red + \",\" + green + \",\" + blue + \"); -fx-font: \" + fontSize"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \" \" + fontStyle + \";\" + (bold ? \"-fx-font-weight:bold;\" : \"\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 151
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/exceptions/DukeExceptions.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "package com.algosenpai.app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    public DukeExceptions(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "carrieng0323852"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "carrieng0323852": 8
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/model/ReviewQuestionListModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ReviewQuestionListModel {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private List\u003cReviewQuestionModel\u003e reviewQuizModelList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewQuestionListModel() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewQuizModelList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addReviewQuizModel(ReviewQuestionModel reviewQuizModel) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.reviewQuizModelList.add(reviewQuizModel);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return reviewQuizModelList.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewQuestionModel get(int i) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return reviewQuizModelList.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 26
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/model/ReviewQuestionModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ReviewQuestionModel {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private List\u003cInteger\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String myAnswer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String actualAnswer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewQuestionModel() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getActualAnswer() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return actualAnswer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getMyAnswer() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return myAnswer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setActualAnswer(String actualAnswer) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.actualAnswer \u003d actualAnswer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setMyAnswer(String myAnswer) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.myAnswer \u003d myAnswer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setQuestion(String question) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public List\u003cInteger\u003e getList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setList(List\u003cInteger\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 52
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/model/ReviewTracingListModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ReviewTracingListModel {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ArrayList\u003cReviewTracingModel\u003e reviewTracingModelArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewTracingListModel() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        reviewTracingModelArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addReviewTracingModel(ReviewTracingModel reviewTracingModel) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.reviewTracingModelArrayList.add(reviewTracingModel);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewTracingModel getReviewTracingModel(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return reviewTracingModelArrayList.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return reviewTracingModelArrayList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 24
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/model/ReviewTracingModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ReviewTracingModel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int indexLeft;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int indexRight;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initialize containers to store the step in the algorithm."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param indexLeft left bubble in the tracing step."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param indexRight right bubble in the tracing step."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param type mode of operation in the tracing step."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ReviewTracingModel(int indexLeft, int indexRight, String type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.indexLeft \u003d indexLeft;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.indexRight \u003d indexRight;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int getIndexLeft() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return indexLeft;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int getIndexRight() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return indexRight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setIndexLeft(int indexLeft) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.indexLeft \u003d indexLeft;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setIndexRight(int indexRight) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.indexRight \u003d indexRight;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 46
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/model/Triplet.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Triplet\u003cT, U, V\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final T first;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final U second;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final V third;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Initializes container to store a triplet."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param first first item in triplet."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param second second item in triplet."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param third third item in triplet."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Triplet(T first, U second, V third) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.first \u003d first;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.second \u003d second;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.third \u003d third;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public T getFirst() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return first;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public U getSecond() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return second;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public V getThird() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return third;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 32
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/utility/PdfDocumentWriterUtility.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.BaseColor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.FontFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.Font;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.Chunk;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.Document;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.DocumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.itextpdf.text.pdf.PdfWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class PdfDocumentWriterUtility {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private BaseColor color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String fontFactory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private PdfDocumentWriterUtility() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        size \u003d 16;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        color \u003d BaseColor.BLACK;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        fontFactory \u003d FontFactory.COURIER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Save content to PDF."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param documentContent content for the document."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param documentName name of the document."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws FileNotFoundException file not found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DocumentException document error."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void saveToPdf(String documentContent, String documentName) throws FileNotFoundException, DocumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Document document \u003d new Document();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        PdfWriter.getInstance(document, new FileOutputStream(documentName));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        document.open();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Font font \u003d FontFactory.getFont(fontFactory, size, color);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Chunk chunk \u003d new Chunk(documentContent, font);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        document.add(chunk);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        document.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Change color of text in PDF."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param color text color."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setColor(BaseColor color) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.color \u003d color;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Change font of text."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param fontFactory text font."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setFontFactory(String fontFactory) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.fontFactory \u003d fontFactory;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Change size of text."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size text size."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setSize(int size) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 66
    }
  },
  {
    "path": "src/main/java/com/algosenpai/app/utility/ResourceRandomUtility.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.ImagesEnum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class ResourceRandomUtility {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Returns a string from generic map for views, images, and sound."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param map container of the for views, images, and sound."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return file name of the for views, images, and sound."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static \u003cT\u003e String randomResources(Map\u003cT, String\u003e map) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        List\u003cT\u003e keysAsArray \u003d new ArrayList\u003cT\u003e(map.keySet());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Random r \u003d new Random();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return map.get(keysAsArray.get(r.nextInt(keysAsArray.size())));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 23
    }
  },
  {
    "path": "src/main/resources/view/date.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.DialogPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            fx:controller\u003d\"com.algosenpai.app.controller.DateController\" onKeyPressed\u003d\"#handleKeyPressed\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onMouseClicked\u003d\"#handleMouseClicked\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cDialogPane fx:id\u003d\"dialogPane\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cImageView fx:id\u003d\"characterImage\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cTextField fx:id\u003d\"userInput\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneTitle\" text\u003d\"date text\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneText\" text\u003d\"date text\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cStackPane fx:id\u003d\"container\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 19
    }
  },
  {
    "path": "src/main/resources/view/end.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            fx:controller\u003d\"com.algosenpai.app.controller.EndController\" onKeyPressed\u003d\"#handleKeyPressed\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onMouseClicked\u003d\"#handleMouseClicked\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cImageView fx:id\u003d\"characterImage\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cTextField fx:id\u003d\"userInput\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneTitle\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"subSceneTitle\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cStackPane fx:id\u003d\"container\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 16
    }
  },
  {
    "path": "src/main/resources/view/girls.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            fx:controller\u003d\"com.algosenpai.app.controller.GirlsController\" onKeyPressed\u003d\"#handleKeyPressed\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onMouseClicked\u003d\"#handleMouseClicked\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cImageView fx:id\u003d\"characterImage\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cTextField fx:id\u003d\"userInput\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneTitle\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cStackPane fx:id\u003d\"container\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cFlowPane fx:id\u003d\"options\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 16
    }
  },
  {
    "path": "src/main/resources/view/home.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenmatt7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onKeyPressed\u003d\"#handleKeyPressed\" onMouseClicked\u003d\"#handleMouseClicked\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            fx:controller\u003d\"com.algosenpai.app.controller.HomeController\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cImageView fx:id\u003d\"characterImage\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cText fx:id\u003d\"sceneTitle\" text\u003d\"home text\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    \u003cStackPane fx:id\u003d\"container\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 16,
      "sevenmatt7": 2
    }
  },
  {
    "path": "src/main/resources/view/quiz.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.DialogPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.algosenpai.app.controller.QuizController\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onKeyPressed\u003d\"#handleKeyPressed\" onMouseClicked\u003d\"#handleMouseClicked\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cDialogPane fx:id\u003d\"dialogPane\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cImageView fx:id\u003d\"characterImage\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cTextField fx:id\u003d\"userInput\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneTitle\" text\u003d\"quiz text\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneText\" text\u003d\"quiz text\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cStackPane fx:id\u003d\"container\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 20
    }
  },
  {
    "path": "src/main/resources/view/review.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            fx:controller\u003d\"com.algosenpai.app.controller.ReviewController\" onKeyPressed\u003d\"#handleKeyPressed\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            onMouseClicked\u003d\"#handleMouseClicked\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cScrollPane fx:id\u003d\"reviewPane\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cImageView fx:id\u003d\"characterImage\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cTextField fx:id\u003d\"userInput\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "  \u003cText fx:id\u003d\"sceneTitle\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 16
    }
  },
  {
    "path": "src/test/java/com/algosenpai/app/SceneControllerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.algosenpai.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.constant.JavaFxConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.algosenpai.app.controller.SceneController;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.api.FxAssert;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.api.FxToolkit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.framework.junit5.ApplicationTest;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.matcher.control.LabeledMatchers;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.testfx.matcher.control.TextMatchers;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class SceneControllerTest extends ApplicationTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Pane mainNode \u003d FXMLLoader.load(SceneController.class.getResource(\"/view/home.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SceneController.setRoot(mainNode);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.setScene(new Scene(mainNode, JavaFxConstant.windowWidth, JavaFxConstant.windowHeight));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        stage.toFront();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void setUp() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    static void tearDown() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        FxToolkit.hideStage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testInterfaceRendering() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        clickOn(\"#sceneTitle\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        FxAssert.verifyThat(\"#sceneTitle\", TextMatchers.hasText(\"Welcome to AlgoSenpai Adventures!\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 44
    }
  }
]
