[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 7,
      "Pdotdeep": 1,
      "-": 40
    }
  },
  {
    "path": "src/main/java/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public abstract class Controller"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected Stage mWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected Main mMainApplication;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Sets the window for this controller"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setWindow(Stage window)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mWindow \u003d window;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Sets the main application for this controller"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMainApplication(Main mainApplication)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMainApplication \u003d mainApplication;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 20
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void main(String[] args)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Application.launch(Main.class,args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import object.MovieInfoObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Stage mainWindow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Scene mainMoviesScene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private BorderPane mainLayout;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow \u003d primaryStage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        setUp();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Display window and the root scene"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainMoviesScene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.setTitle(\"Entertainment Pro\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.setScene(mainMoviesScene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(Main.class.getResource(\"MainPage.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "           // loader.getStylesheets().add(this.getClass().getResource(\"view/MainView.css\").toExt‌​ernalForm())"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mainLayout \u003d loader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // setup the controller\u0027s window and reference to this main application class"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MovieHandler controller \u003d loader.getController();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMainApplication(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setWindow(mainWindow);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Request control to be passed to the movie info controller to view movie info"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void transitToMovieInfoController(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(Main.class.getResource(\"InsideMovie.fxml\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Pane layout \u003d loader.load();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // setup controller"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MovieInfoController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setWindow(mainWindow);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMainApplication(this);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMovie(movie);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mainWindow.setScene(new Scene(layout));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void transitionBackToMoviesController()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.setScene(mainMoviesScene);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 72
    }
  },
  {
    "path": "src/main/java/MovieHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Orientation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import movieRequesterAPI.RequestListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import movieRequesterAPI.RetrieveRequest;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import object.MovieInfoObject;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieHandler extends Controller implements RequestListener{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ScrollPane mMoviesScrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private VBox mMovieTypeVBox;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label titleLabel;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label titleLabel2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Text ageText;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Text genreText;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Text text;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private FlowPane mMoviesFlowPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //@FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //private ListView\u003cString\u003e mMovieTypeListView;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label mStatusLabel;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ProgressBar mProgressBar;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TextField mSearchTextField;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //@FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //private Button mSearchButton;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //@FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //private Button mClearSearchButton;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ArrayList\u003cMovieInfoObject\u003e mMovies;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private double[] mImagesLoadingProgress;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private RetrieveRequest mMovieRequest;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void initialize()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest \u003d new RetrieveRequest(this);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mMovieTypeVBox.setStyle(\"-fx-border-color: white;\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mMovieTypeListView.getItems().addAll(\"Now Showing\", \"Popular\", \"TV Shows\", \"Upcoming Movies\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mMovieTypeListView.getSelectionModel().select(0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mSearchTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (event.getCode() \u003d\u003d KeyCode.TAB) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Tab pressed\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }else if(event.getCode().equals(KeyCode.ENTER)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Enter pressed\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.NOW_SHOWING);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mSearchButton.disableProperty().bind(mSearchTextField.textProperty().isEmpty());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mClearSearchButton.disableProperty().bind(mSearchTextField.textProperty().isEmpty());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "       // mMovieTypeListView.getSelectionModel().selectedIndexProperty().addListener((observable, oldValue, newValue) -\u003e moviesTypeSelectionChanged(oldValue.intValue(), newValue.intValue()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the fetch request for the movie data is completed"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestCompleted(ArrayList\u003cMovieInfoObject\u003e moviesInfo)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Build the Movie poster views and add to the flow pane on the main thread"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovies \u003d moviesInfo;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mImagesLoadingProgress \u003d new double[mMovies.size()];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e buildMoviesFlowPane(moviesInfo));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the request to fetch movie data timed out."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestTimedOut()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"Request timed out\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the request fails due to an invalid internet connection"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestFailed()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"No internet connection\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void showDownloadFailureAlert(String headerText)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Alert alert \u003d new Alert(Alert.AlertType.ERROR);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setTitle(\"Failed to download\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setContentText(\"Please ensure you have an active internet connection.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void buildMoviesFlowPane(ArrayList\u003cMovieInfoObject\u003e movies)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Setup progress bar and status label"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress(0.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setVisible(true);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mStatusLabel.setText(\"Loading..\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Build a flow pane layout with the width and size of the"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane \u003d new FlowPane(Orientation.HORIZONTAL);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setHgap(4);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setVgap(10);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setPadding(new Insets(10, 8, 4, 8));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.prefWrapLengthProperty().bind(mMoviesScrollPane.widthProperty());   // bind to scroll pane width"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (MovieInfoObject movie : movies)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterPane \u003d buildMoviePosterPane(movie);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.getChildren().add(posterPane);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesScrollPane.setContent(mMoviesFlowPane);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private AnchorPane buildMoviePosterPane(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(MovieHandler.class.getResource(\"MoviePoster.fxml\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterView \u003d loader.load();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            posterView.setOnMouseClicked((mouseEvent) -\u003e moviePosterClicked(movie));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // set the movie info"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MoviePosterController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Image posterImage \u003d new Image(movie.getFullPosterPath(), true);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            posterImage.progressProperty().addListener((observable, oldValue, newValue) -\u003e updateProgressBar(movie, newValue.doubleValue()));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieTitleLabel().setText(movie.getTitle());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getPosterImageView().setImage(posterImage);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return posterView;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void updateProgressBar(MovieInfoObject movie, double progress)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // update the progress for that movie in the array"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int index \u003d mMovies.indexOf(movie);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (index \u003e\u003d 0){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImagesLoadingProgress[index] \u003d progress;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        double currentTotalProgress \u003d 0.0;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (double value : mImagesLoadingProgress){"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            currentTotalProgress +\u003d value;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"Current total progress: \" + currentTotalProgress);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress((currentTotalProgress / mMovies.size()));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if(currentTotalProgress \u003e\u003d mMovies.size()){"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mProgressBar.setVisible(false);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mStatusLabel.setText(\"\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // movieTypeSelectionChanged event - Reload the movies for the new movies request type"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void moviesTypeSelectionChanged(int oldIndex, int newIndex)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if(newIndex \u003e\u003d 0 \u0026\u0026 (newIndex !\u003d oldIndex)){"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (mMoviesFlowPane !\u003d null) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                mMoviesFlowPane.getChildren().clear();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            switch (newIndex) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.NOW_SHOWING);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.POPULAR);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.TV_SHOWS);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.UPCOMING);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // User clicks on a movie poster"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void moviePosterClicked(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMainApplication.transitToMovieInfoController(movie);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private void searchButtonClicked() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mSearchTextField.getText().equals(\"show current movie\")) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.NOW_SHOWING);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show upcoming movie\")) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.UPCOMING);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show popular movie\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.POPULAR);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show current tv\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.TV_SHOWS);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (!mSearchTextField.getText().isEmpty()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginSearchRequest(mSearchTextField.getText());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private void clearSearchButtonClicked()"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mSearchTextField.clear();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Menu item events"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void exitMenuItemClicked()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void aboutMenuItemClicked()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 263,
      "Pdotdeep": 13
    }
  },
  {
    "path": "src/main/java/MovieInfoController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Orientation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import movieRequesterAPI.RequestListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import movieRequesterAPI.RetrieveRequest;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import object.MovieInfoObject;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieInfoController extends Controller implements RequestListener {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label movieTitleLabel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label movieGenresLabel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label movieReleaseDateLabel;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label movieRatingLabel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label movieSummaryLabel;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private ImageView movieBackdropImageView;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private ScrollPane movieScrollPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private VBox movieMainVBox;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private GridPane movieGridPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private TextField mSearchTextField;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private Label mStatusLabel;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private ProgressBar mProgressBar;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private FlowPane mMoviesFlowPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private RetrieveRequest mMovieRequest \u003d new RetrieveRequest(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private MovieHandler movieHandler \u003d new MovieHandler();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ArrayList\u003cMovieInfoObject\u003e mMovies;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private double[] mImagesLoadingProgress;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private MovieInfoObject mMovie;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Set the movie for this controller"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovie(MovieInfoObject movie)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovie \u003d movie;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void initialize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mMovieRequest \u003d new RetrieveRequest(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Load the movie info if movie has been set"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mMovie !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieTitleLabel.setText(mMovie.getTitle());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieRatingLabel.setText(String.format(\"%.2f\", mMovie.getRating()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (mMovie.getReleaseDate() !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movieReleaseDateLabel.setText(String.format(\"%s\", mMovie.getReleaseDate().toString()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movieReleaseDateLabel.setText(\"N/A\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieSummaryLabel.setText(mMovie.getSummary());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loadMovieBackdrop();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loadGenres();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieMainVBox.prefWidthProperty().bind(movieScrollPane.widthProperty());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieBackdropImageView.setPreserveRatio(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieGridPane.prefWidthProperty().bind(movieScrollPane.widthProperty());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // User clicks on the back button to navigate back to the movies scene"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void backToMoviesButtonClick()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMainApplication.transitionBackToMoviesController();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Loads the movie backdrop image asynchronously"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void loadMovieBackdrop()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mMovie.getFullBackdropPath() !\u003d null){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Image backdropImage \u003d new Image(mMovie.getFullBackdropPath(), true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieBackdropImageView.setImage(backdropImage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void loadGenres()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieGenresLabel.setText(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Thread t \u003d new Thread(new Runnable() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String[] genres \u003d RetrieveRequest.getGenreStrings(mMovie);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (String genre : genres){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    builder.append(genre);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // if not last string in array, append a ,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (!genres[genres.length - 1].equals(genre)){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        builder.append(\", \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Platform.runLater(new Runnable() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    public void run() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        movieGenresLabel.setText(builder.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        t.start();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML private void searchButtonClicked() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mSearchTextField.getText().equals(\"show current movie\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.NOW_SHOWING);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show upcoming movie\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.UPCOMING);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show popular movie\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.POPULAR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (mSearchTextField.getText().equals(\"show current tv\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.TV_SHOWS);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (!mSearchTextField.getText().isEmpty()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.beginSearchRequest(mSearchTextField.getText());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Menu item events"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void exitMenuItemClicked()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML public void aboutMenuItemClicked()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the fetch request for the movie data is completed"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestCompleted(ArrayList\u003cMovieInfoObject\u003e moviesInfo)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Build the Movie poster views and add to the flow pane on the main thread"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovies \u003d moviesInfo;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mImagesLoadingProgress \u003d new double[mMovies.size()];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e buildMoviesFlowPane(moviesInfo));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the request to fetch movie data timed out."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestTimedOut()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"Request timed out\"));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Called when the request fails due to an invalid internet connection"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestFailed()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"No internet connection\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void showDownloadFailureAlert(String headerText)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Alert alert \u003d new Alert(Alert.AlertType.ERROR);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setTitle(\"Failed to download\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setContentText(\"Please ensure you have an active internet connection.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void buildMoviesFlowPane(ArrayList\u003cMovieInfoObject\u003e movies)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Setup progress bar and status label"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress(0.0);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setVisible(true);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mStatusLabel.setText(\"Loading..\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Build a flow pane layout with the width and size of the"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane \u003d new FlowPane(Orientation.HORIZONTAL);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setHgap(4);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setVgap(10);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setPadding(new Insets(10, 8, 4, 8));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.prefWrapLengthProperty().bind(movieScrollPane.widthProperty());   // bind to scroll pane width"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (MovieInfoObject movie : movies)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterPane \u003d buildMoviePosterPane(movie);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.getChildren().add(posterPane);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieScrollPane.setContent(mMoviesFlowPane);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private AnchorPane buildMoviePosterPane(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(MovieHandler.class.getResource(\"MoviePoster.fxml\"));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterView \u003d loader.load();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            posterView.setOnMouseClicked((mouseEvent) -\u003e moviePosterClicked(movie));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // set the movie info"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MoviePosterController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Image posterImage \u003d new Image(movie.getFullPosterPath(), true);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            posterImage.progressProperty().addListener((observable, oldValue, newValue) -\u003e updateProgressBar(movie, newValue.doubleValue()));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieTitleLabel().setText(movie.getTitle());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getPosterImageView().setImage(posterImage);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return posterView;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex){"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void moviePosterClicked(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMainApplication.transitToMovieInfoController(movie);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void updateProgressBar(MovieInfoObject movie, double progress)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // update the progress for that movie in the array"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int index \u003d mMovies.indexOf(movie);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (index \u003e\u003d 0){"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImagesLoadingProgress[index] \u003d progress;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        double currentTotalProgress \u003d 0.0;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (double value : mImagesLoadingProgress){"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            currentTotalProgress +\u003d value;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"Current total progress: \" + currentTotalProgress);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress((currentTotalProgress / mMovies.size()));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if(currentTotalProgress \u003e\u003d mMovies.size()){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mProgressBar.setVisible(false);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mStatusLabel.setText(\"\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 254
    }
  },
  {
    "path": "src/main/java/MoviePosterController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * File: MoviePosterController.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Description: Simple controller for setting and getting the controls in the Movie Poster View"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Author: Asad Ahmed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MoviePosterController"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieTitleLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ImageView moviePosterImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieTitleLabel() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieTitleLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieTitleLabel(Label mMovieTitleLabel) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieTitleLabel \u003d mMovieTitleLabel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ImageView getPosterImageView() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return moviePosterImageView;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setPosterImageView(ImageView mPosterImageView) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mPosterImageView \u003d mPosterImageView;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 34
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhui"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhui"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * This class deals with all the exception messages."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     * to check exceptions for when user input command for schedule"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    public static void checkSchedule(String[] tokens) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        if (tokens.length !\u003d 2){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Invalid format. Please key in the command in the correct structure, e.g. schedule \u003cdate\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            checkDateFormat(tokens[1], \"☹ OOPS!!! Invalid date. Please key in the command using valid date format, e.g. schedule 1/12/2019\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     * to check exceptions for when user input command for reminder"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    public static void checkReminder(String[] tokens) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        if (tokens.length !\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Invalid format. Please key in the command in the correct structure, e.g. reminder \u003cno. of reminders\u003e \u003cstarting date\u003e\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid number. Please key in the command using numbers, e.g. reminder 3 \u003cstarting date\u003e\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            checkDateFormat(tokens[2], \"☹ OOPS!!! Invalid date. Please key in the command using valid date format, e.g. reminder \u003cno. of reminders\u003e 1/12/2019\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     * to check whether date input by user is in right format for schedule and reminder"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    public static void checkDateFormat(String s, String e) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        boolean isValid \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            sourceFormat.parse(s);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                sourceFormat.parse(s);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                isValid \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        if (!isValid) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException UNKNOWN_COMMAND \u003d new DukeException(\"☹ OOPS!!! I\u0027m sorry, \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"but I don\u0027t understand what you mean :-(\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_TODO \u003d new DukeException(\"☹ OOPS!!! The \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"description of a todo cannot be empty, e.g. todo borrow book\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! The \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"description of a deadline cannot be empty, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException INVALID_FORMAT_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! Invalid \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"format. Please key in the task in the correct structure, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! Task \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"must have a valid deadline, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! The description \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"of a event cannot be empty, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! Task \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"must have a valid time, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException INVALID_FORMAT_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! Invalid \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"format. Please key in the task in the correct structure, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException TASK_DOES_NOT_EXIST \u003d new DukeException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Task does not exist.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException TASK_NO_MISSING \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"provide a task number.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException TASK_NO_MISSING_DELETE \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"provide a task number, e.g. delete 1\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException TASK_NO_MISSING_FIND \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"provide a keyword, e.g. find eat\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_DOAFTER \u003d new DukeException(\"☹ OOPS!!! The \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"description of a \u0027do after\u0027 task cannot be empty, e.g. do return book /after Sunday\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_PERIOD \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"provide a valid time/task for the \u0027period\u0027 task, e.g. period return book between 20-05-1999 to 21-05-1999\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_DOAFTER \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"provide a valid duration for the \u0027rdo after\u0027 task, e.g. do return book /after Sunday\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_RECUR \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"provide a valid duration for the \u0027recur\u0027 task, e.g. recur return book /frequency Weekly\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_FIXED \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"provide a valid duration for the \u0027fixed\u0027 task, e.g. fixed return book /duration 2 hours\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException INVALID_FORMAT_IN_DOAFTER \u003d new DukeException(\"☹ OOPS!!! Invalid \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"format. Please key in the \u0027do after\u0027 task in the correct format, e.g. do return book /after Sunday\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException FILE_NOT_FOUND \u003d new DukeException(\"☹ OOPS!!! Unknown error \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"extracting tasks from database.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException INPUT_NOT_FOUND \u003d new DukeException(\"☹ OOPS!!! No user input found\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_EVENT_TENTATIVE \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"provide a valid time/task for the task\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException TASK_IS_NOT_TENTATIVE \u003d new DukeException(\"☹ OOPS!!! Please select a \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"tentative task.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_RECUR \u003d new DukeException(\"☹ OOPS!!! Please provide a valid \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"task.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_PERIOD \u003d new DukeException(\"☹ OOPS!!! Please provide a valid \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"task.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_FIXED \u003d new DukeException(\"☹ OOPS!!! Please provide a valid task.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    private DukeException(String message) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getError() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 66,
      "wenhui": 51
    }
  },
  {
    "path": "src/main/java/movieRequesterAPI/InfoFetcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public interface InfoFetcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void fetchedMoviesJSON(String json);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void connectionTimedOut();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 6
    }
  },
  {
    "path": "src/main/java/movieRequesterAPI/MovieInfoFetcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieInfoFetcher implements Runnable"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private URL mRequestURL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private InfoFetcher mRequestListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Construct fetcher with given URL"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param requestURL The URL for sending the HTTP request"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param listener The listener to call when the fetch completes or fails"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public MovieInfoFetcher(URL requestURL, InfoFetcher listener) throws InvalidParameterException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (requestURL \u003d\u003d null){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw new InvalidParameterException(\"NULL URL passed to fetcher.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mRequestListener \u003d listener;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mRequestURL \u003d requestURL;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Begin the data fetch asynchronously."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void run() "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String json \u003d URLRetriever.readURLAsString(mRequestURL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mRequestListener.fetchedMoviesJSON(json);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        catch (SocketTimeoutException ex)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Notify the listener that a connection timed out."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mRequestListener.connectionTimedOut();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }      "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 45
    }
  },
  {
    "path": "src/main/java/movieRequesterAPI/RequestListener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import object.MovieInfoObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public interface RequestListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestCompleted(ArrayList\u003cMovieInfoObject\u003e moviesInfo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestTimedOut();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestFailed();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 12
    }
  },
  {
    "path": "src/main/java/movieRequesterAPI/RetrieveRequest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import object.MovieInfoObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URLEncoder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class RetrieveRequest implements InfoFetcher {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private RequestListener mListener;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // API Usage constants"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String MAIN_URL \u003d \"http://api.themoviedb.org/3/\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String API_KEY \u003d \"2a888e02edd08043185889ba862cb073\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Movie Data Request URL\u0027s"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String NOW_SHOWING_URL \u003d \"movie/now_playing?api_key\u003d\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String POPULAR_URL \u003d \"movie/popular?api_key\u003d\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String TOP_RATED_URL \u003d \"movie/top_rated?api_key\u003d\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String UPCOMING_URL \u003d \"movie/upcoming?api_key\u003d\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String MOVIE_SEARCH_URL \u003d \"search/movie?api_key\u003d\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String GENRE_LIST_URL \u003d \"genre/movie/list?api_key\u003d\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String TV_SHOWS \u003d \"tv/popular?api_key\u003d\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String LIST \u003d \"/lists?api_key\u003d\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Movie Data Keys"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_RELEASE_DATE \u003d \"release_date\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_ID \u003d \"id\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_GENRES \u003d \"genre_ids\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_SUMMARY \u003d \"overview\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_RATING \u003d \"vote_average\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_BACKDROP_PATH \u003d \"backdrop_path\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_POSTER_PATH \u003d \"poster_path\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public enum MoviesRequestType {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        NOW_SHOWING,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        POPULAR,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        UPCOMING,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        TV_SHOWS,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public RetrieveRequest(RequestListener listener) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mListener \u003d listener;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Check if config is needed"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        checkIfConfigNeeded();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void beginMovieRequest(RetrieveRequest.MoviesRequestType type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String requestURL \u003d RetrieveRequest.MAIN_URL;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case NOW_SHOWING:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.NOW_SHOWING_URL + RetrieveRequest.API_KEY;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case POPULAR:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.POPULAR_URL + RetrieveRequest.API_KEY;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case UPCOMING:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.UPCOMING_URL + RetrieveRequest.API_KEY;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case TV_SHOWS:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.TV_SHOWS + RetrieveRequest.API_KEY;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        fetchJSONData(requestURL);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void beginSearchRequest(String movieTitle) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String url \u003d MAIN_URL + MOVIE_SEARCH_URL + API_KEY + \"\u0026query\u003d\" + URLEncoder.encode(movieTitle, \"UTF-8\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchJSONData(url);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void beginSearchGenre (String genre) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String url \u003d MAIN_URL + \"movie/\" + URLEncoder.encode(genre, \"UTF-8\") + LIST"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                + API_KEY + \"\u0026language\u003den-US\u0026page\u003d1\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchJSONData(url);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // JSON data was fetched by the fetcher"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void fetchedMoviesJSON(String json) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // If null string returned then there was a lack of internet connection"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (json \u003d\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestFailed();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse received movies"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONObject movieData;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieData \u003d (JSONObject) parser.parse(json);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray movies \u003d (JSONArray) movieData.get(\"results\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cMovieInfoObject\u003e parsedMovies \u003d new ArrayList(20);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c movies.size(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                parsedMovies.add(parseMovieJSON((JSONObject) movies.get(i)));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Notify Listener"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestCompleted(parsedMovies);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // The fetcher reported a connection time out. Notify the request listener."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void connectionTimedOut() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mListener.requestTimedOut();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void fetchJSONData(String URLString) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Thread fetchThread \u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchThread \u003d new Thread(new MovieInfoFetcher(new URL(URLString), this));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchThread.start();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Parses the given JSON string for a movie into a MovieInfo object"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private MovieInfoObject parseMovieJSON(JSONObject movieData) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        long ID \u003d (long) movieData.get(kMOVIE_ID);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String title \u003d (String) movieData.get(kMOVIE_TITLE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        double rating \u003d 0.0;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            rating \u003d (double) movieData.get(kMOVIE_RATING);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ClassCastException ex) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // the rating was parsed with a long value, cast to double (issue in simple json library)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Long longRating \u003d (Long) movieData.get(kMOVIE_RATING);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            rating \u003d longRating.doubleValue();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String summary \u003d (String) movieData.get(kMOVIE_SUMMARY);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse genre id array"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONArray genreIDsJsonArray \u003d (JSONArray) movieData.get(kMOVIE_GENRES);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        long[] genreIDs \u003d new long[genreIDsJsonArray.size()];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c genreIDs.length; i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            genreIDs[i] \u003d (long) genreIDsJsonArray.get(i);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse date string from json"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"YYYY-MM-DD\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date releaseDate \u003d null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String releaseDateString \u003d (String) movieData.get(kMOVIE_RELEASE_DATE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (releaseDateString !\u003d null) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                releaseDate \u003d formatter.parse(releaseDateString);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            releaseDate \u003d null;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Get poster and backdrop paths"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String posterPath \u003d (String) movieData.get(kMOVIE_POSTER_PATH);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String backdropPath \u003d (String) movieData.get(kMOVIE_BACKDROP_PATH);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieInfoObject movieInfo \u003d new MovieInfoObject(ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // If the base url was fetched and loaded, set the root path and poster size"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mImageBaseURL !\u003d null) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieInfo.setPosterRootPath(mImageBaseURL, mPosterSizes[mPosterSizes.length - 3], mBackdropSizes[mBackdropSizes.length - 1]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieInfo;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Parses the given string into a date. Returns null if the parse failed"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Date parseDateString(String dateString) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"YYYY-MM-DD\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config URL"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private final static String CONFIG_URL \u003d MAIN_URL + \"configuration?api_key\u003d\" + API_KEY;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config constants"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final int DAYS_TILL_RECACHE \u003d 5;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String CONFIG_FILE_NAME \u003d \"config.dat\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config Keys"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_BASE_URL \u003d \"base_url\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_SECURE_BASE_URL \u003d \"secure_base_url\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_BACKDROP_SIZES \u003d \"backdrop_sizes\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_POSTER_SIZES \u003d \"poster_sizes\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config values"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static Date mLastConfigCacheDate;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String mImageBaseURL;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String mImageSecureBaseURL;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String[] mPosterSizes;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String[] mBackdropSizes;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean mConfigWasRead;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Checks if API config data needs to be recached"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void checkIfConfigNeeded() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        boolean configNeeded \u003d true;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Get last cache date and reconfig if more than 5 days passed"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File configFile \u003d new File(CONFIG_FILE_NAME);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (configFile.exists() \u0026\u0026 !configFile.isDirectory()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            readConfigData();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Parse date and if more than 5 days passed, a recache is required"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Date now \u003d new Date();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int diffInDays \u003d (int) (now.getTime() - mLastConfigCacheDate.getTime()) / (1000 * 3600 * 24);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (diffInDays \u003c DAYS_TILL_RECACHE) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                configNeeded \u003d false;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (configNeeded || !mConfigWasRead) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Config recache needed\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            reCacheConfigData();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // No config needed - read cached data from config file"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Found a cache and config was not required\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            readConfigData();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Reads in the config data from disk"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void readConfigData() {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ObjectInputStream file \u003d new ObjectInputStream(new FileInputStream(CONFIG_FILE_NAME));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mLastConfigCacheDate \u003d (Date) file.readObject();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImageBaseURL \u003d file.readUTF();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImageSecureBaseURL \u003d file.readUTF();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mPosterSizes \u003d (String[]) file.readObject();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mBackdropSizes \u003d (String[]) file.readObject();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d true;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // No file found, config will be recached"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Error reading - config will be recached"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ClassNotFoundException ex) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Writes out the config data to file"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // NOTE: Only call after all config data was recached"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void writeConfigData() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ObjectOutputStream file \u003d new ObjectOutputStream(new FileOutputStream(CONFIG_FILE_NAME));"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(new Date());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeUTF(mImageBaseURL);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeUTF(mImageSecureBaseURL);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(mPosterSizes);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(mBackdropSizes);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Failed to write, data will be not be cached and will be recached on next run"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.err.println(\"Error: Unable to cache config data: \\n\" + ex.getMessage());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Re-caches the config data to the binary config file"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void reCacheConfigData() {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Download the config data and parse"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Config URL is: \" + CONFIG_URL);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String configJSON \u003d URLRetriever.readURLAsString(new URL(CONFIG_URL));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject configRootData \u003d null;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (configJSON !\u003d null) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    configRootData \u003d (JSONObject) parser.parse(configJSON);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject imageConfigData \u003d (JSONObject) configRootData.get(\"images\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Get the base url data"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mImageBaseURL \u003d (String) imageConfigData.get(kCONFIG_BASE_URL);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mImageSecureBaseURL \u003d (String) imageConfigData.get(kCONFIG_SECURE_BASE_URL);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Get the string arrays for the poster and backdrop size strings"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray posterSizesData \u003d (JSONArray) imageConfigData.get(kCONFIG_POSTER_SIZES);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray backdropSizesData \u003d (JSONArray) imageConfigData.get(kCONFIG_BACKDROP_SIZES);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mPosterSizes \u003d Arrays.copyOf(posterSizesData.toArray(), posterSizesData.toArray().length, String[].class);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mBackdropSizes \u003d Arrays.copyOf(backdropSizesData.toArray(), backdropSizesData.toArray().length, String[].class);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    writeConfigData();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Failed to parse... TODO: Call listener and notify error"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Failed to download config data..."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // TODO: Call listener and notify error"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Fetches the strings for the genres for the given move. Note: This is operation is NOT asynchronous."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param movie The movie for which the genre strings need to be fetched."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return A string array for the movie genre strings."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String[] getGenreStrings(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + GENRE_LIST_URL + API_KEY));"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject jsonData \u003d (JSONObject) parser.parse(jsonResult);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray genres \u003d (JSONArray) jsonData.get(\"genres\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] genreStrings \u003d new String[movie.getGenreIDs().length];"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c movie.getGenreIDs().length; i++) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                genreStrings[i] \u003d getGenreStringForID(movie.getGenreIDs()[i], genres);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return genreStrings;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Returns the genre string for the given genre ID using the given JSONArray of dictionaries of {ID: Genre String}"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String getGenreStringForID(long genreID, JSONArray genreList) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String genre \u003d null;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c genreList.size(); i++) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject genrePair \u003d (JSONObject) genreList.get(i);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if ((long) genrePair.get(\"id\") \u003d\u003d genreID) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                genre \u003d (String) genrePair.get(\"name\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 389
    }
  },
  {
    "path": "src/main/java/movieRequesterAPI/URLRetriever.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class URLRetriever {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String readURLAsString(URL url) throws SocketTimeoutException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            HttpURLConnection connection \u003d (HttpURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            connection.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            connection.setReadTimeout(20 * 1000);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int statusCode \u003d connection.getResponseCode();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            StringBuilder dataStr \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Status OK - get the data from the stream"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (statusCode \u003d\u003d 200) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                dataStr \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                BufferedReader input \u003d new BufferedReader(new InputStreamReader(connection.getInputStream()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                line \u003d input.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    dataStr.append(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d input.readLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return dataStr.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (SocketTimeoutException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw new SocketTimeoutException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 44
    }
  },
  {
    "path": "src/main/java/object/MovieInfoObject.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package object;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieInfoObject {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private long mID;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mTitle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Date mReleaseDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mSummary;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mPosterPath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mFullPosterPath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mBackdropPath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String mFullBackdropPath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private double mRating;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private long[] mGenreIDs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public MovieInfoObject(long ID, String title, Date date, String summary, double rating, long[] genreIDs, String posterPath, String backdropPath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mID \u003d ID;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mTitle \u003d title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mReleaseDate \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mSummary \u003d summary;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mRating \u003d rating;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mPosterPath \u003d posterPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mBackdropPath \u003d backdropPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mGenreIDs \u003d genreIDs;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setPosterRootPath(String rootPath, String posterSize, String backdropSize) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mFullPosterPath \u003d String.format(\"%s%s%s\", rootPath, posterSize, mPosterPath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mFullBackdropPath \u003d String.format(\"%s%s%s\", rootPath, posterSize, mBackdropPath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public long getID()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mID;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getTitle()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mTitle;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Date getReleaseDate()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mReleaseDate;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getSummary()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mSummary;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public double getRating()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mRating;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public long[] getGenreIDs()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mGenreIDs;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getFullPosterPath()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mFullPosterPath;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getFullBackdropPath()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mFullBackdropPath;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 74
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import task.DoAfter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Recurring;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import task.FixedDuration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Period;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import wrapper.TimeInterval;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * This class deals with making sense of the user command and doing the appropriate actions."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Takes in users\u0027 input and call the aprropriate functions to execute the right action."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static int handleCommand(String firstWord, String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        int check \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showByeMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            check \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (s.contains(\"freetime\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                getFreeSlot(s);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showError(e.getError());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (s.contains(\"get conflicts\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.getConflicts();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (s.contains(\"change date\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                changeDate(s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showError(e.getError());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (firstWord) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    listCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    doneCommand(s);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    deleteCommand(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    findCommand(s);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    todoCommand(s);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    deadlineCommand(s);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    eventCommand(s);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"do\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    doAfterCommand(s);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"fix\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    fixCommand(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"recur\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    recurCommand(s);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"reminder\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    reminderCommand(s);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"fixed\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    fixedCommand(s);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"schedule\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    scheduleCommand(s);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"period\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    periodCommand(s);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw DukeException.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showError(e.getError());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return check;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function deals when user wants to fix a tentative task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param s the whole user command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException when user did not enter task number or select wrong task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void fixCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            String message \u003d TaskList.getMessage(num - 1).substring(0,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getMessage(num - 1).indexOf(\"(at:\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            String date \u003d TaskList.getMessage(num - 1).substring("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getMessage(num - 1).indexOf(\"(at:\") + 5);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] time \u003d date.split(\" to \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            time[1] \u003d time[1].substring(0, time[1].length() - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            //System.out.println(message + date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            String type \u003d TaskList.getType(num - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(type.equals(\"?][E\"))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.TASK_IS_NOT_TENTATIVE;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            int upper \u003d num - 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            int lower \u003d num - 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            int start \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            int end \u003d TaskList.getTotalTasksNumber() - 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            while ((end \u003e\u003d 0) || (start \u003c\u003d TaskList.getTotalTasksNumber() - 1)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                String checkMessage \u003d new String();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                String checkMessage2 \u003d new String();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                if (upper - 1 \u003e\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                    checkMessage \u003d TaskList.getMessage(upper - 1).substring(0,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        TaskList.getMessage(upper - 1).indexOf(\"(at:\"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                if (lower + 1 \u003c\u003d TaskList.getTotalTasksNumber() - 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    checkMessage2 \u003d TaskList.getMessage(lower + 1).substring(0,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                        TaskList.getMessage(lower + 1).indexOf(\"(at:\"));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                //System.out.println(upper + \" \" + lower);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((upper - 1 \u003e\u003d 0) \u0026\u0026 (checkMessage.equals(message))"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 (TaskList.getType(upper - 1).equals(\"?][E\"))) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    upper -\u003d 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((lower + 1 \u003c\u003d TaskList.getTotalTasksNumber() - 1)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 (checkMessage2.equals(message))"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 (TaskList.getType(lower + 1).equals(\"?][E\"))) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    //String[] checkMessage2 \u003d TaskList.getMessage(lower).split(\"at:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                    lower +\u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                start +\u003d 1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                end -\u003d 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            //System.out.println(upper + \" \" + lower);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            while (lower \u003e\u003d upper) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.removeTask(upper);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                lower -\u003d 1;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            Event task1 \u003d new Event(message, \"E\", time[0], time[1]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            String newtodoTask1 \u003d task1.toMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            Tasks newToDo1 \u003d new Event(newtodoTask1, \"E\", time[0], time[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(newToDo1);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showEventMessage(TaskList.getType(todolistNumber), TaskList.getStatus(todolistNumber),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                newtodoTask1, todolistNumber + 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_NO_MISSING;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void getFreeSlot(String s) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        int num \u003d -1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        if (num \u003e 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeInterval freeslot \u003d TaskList.getFreeSlot(num);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showFreeTime(num, freeslot);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void changeDate(String s) throws DukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        int num \u003d -1;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            num \u003d Integer.parseInt(tokens[2]);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            Tasks temp \u003d TaskList.getList().get(num - 1);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            if (temp.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showMsg(\"Enter new start and end date\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                String inputStr \u003d scan.nextLine().trim();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] startendtime \u003d inputStr.split(\"to\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                ((Event) temp).setTime(startendtime[0], startendtime[1]);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.updateTime(temp);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (temp.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showMsg(\"Enter new deadline\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                String inputStr \u003d scan.nextLine().trim();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                ((Deadline) temp).setTime(inputStr);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.updateTime(temp);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showError(\"You cannot change the date of the task!\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new doAfter task with users\u0027 input."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints a confirmation message by calling showdoAfterMessage function under Ui class."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void doAfterCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            String doAfterTask \u003d s.substring(3, s.indexOf(\"/after\"));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            String time1 \u003d s.substring(s.indexOf(\"/after\") + 7);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((doAfterTask.isEmpty()) || (doAfterTask.equals(\" \"))) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_DOAFTER;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((time1.isEmpty()) || (time1.equals(\" \"))) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_DOAFTER;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            DoAfter task1 \u003d new DoAfter(doAfterTask, \"A\", time1);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            String newtodoTask1 \u003d task1.toMessage();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            Tasks newToDo1 \u003d new DoAfter(newtodoTask1, \"A\", time1);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(newToDo1);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showDoAfterMessage(TaskList.getStatus(todolistNumber), newtodoTask1, todolistNumber + 1);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_DOAFTER;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the list of tasks in database by calling the showListTask function under Ui class."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void listCommand() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.showListIntroMessage();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTasks\u003e userToDoList \u003d TaskList.getList();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c userToDoList.size(); i++) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (userToDoList.get(i).getType()) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((Event) userToDoList.get(i)).getDescription();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((Deadline) userToDoList.get(i)).toMessage();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((ToDo) userToDoList.get(i)).toMessage();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"R\":"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((Recurring)userToDoList.get(i)).toMessage();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"F\":"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((FixedDuration)userToDoList.get(i)).toMessage();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"P\":"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d ((Period)userToDoList.get(i)).toMessage();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d (userToDoList.get(i)).getDescription();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showListTask(userToDoList.get(i).getType(), userToDoList.get(i).getStatusIcon(),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                message, j);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "     * Mark a particular task as done."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints the confirmation message by calling showMarkAsDone function under Ui class."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, updates the database."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void doneCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.markTaskAsDone(num - 1);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            String type \u003d TaskList.getType(num - 1);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            String status \u003d TaskList.getStatus(num - 1);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            String message \u003d TaskList.getMessage(num - 1);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showMarkAsDone(type, status, message);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_NO_MISSING;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new To-Do task with users\u0027 input."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints a confirmation message by calling showToDoSuccess function under Ui class."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void todoCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber() + 1;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            String joinTokens \u003d s.substring(s.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            if (joinTokens.equals(\" \")) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            if (s.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            if (joinTokens.isEmpty()) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            Tasks newToDo \u003d new ToDo(joinTokens, \"T\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(newToDo);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showToDoSucess(TaskList.getType(todolistNumber - 1),"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getStatus(todolistNumber - 1), TaskList.getMessage(todolistNumber - 1),"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getTotalTasksNumber());"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showError(e.getError());"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Recurring Task with users input."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void recurCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber() + 1;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] token \u003d command.substring(\"recur\".length()).strip().split(\"/frequency\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_RECUR;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_RECUR;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(new Recurring(token[0].strip(), \"R\", token[1].strip()));"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showToDoSucess(TaskList.getType(todolistNumber - 1),"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getStatus(todolistNumber - 1), TaskList.getMessage(todolistNumber - 1),"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getTotalTasksNumber());"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch  (DukeException e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints tasks that have to be done within a certain period of time"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void periodCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber() + 1;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] token \u003d command.substring(\"period\".length()).strip().split(\"/duration\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] dates \u003d token[1].strip().split(\"to\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_PERIOD;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_PERIOD;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(new Period(token[0].strip(), \"P\", dates[0].strip(), dates[1].strip()));"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showToDoSucess(TaskList.getType(todolistNumber - 1),"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskList.getStatus(todolistNumber - 1), TaskList.getMessage(todolistNumber - 1),"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskList.getTotalTasksNumber());"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch  (DukeException e) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints tasks that have a fixed duration"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void fixedCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber() + 1;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] token \u003d command.substring(\"fixed\".length()).strip().split(\"/duration\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_FIXED;"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            if (token[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_FIXED;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(new FixedDuration(token[0].strip(), \"F\", token[1].strip()));"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showToDoSucess(TaskList.getType(todolistNumber - 1),"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskList.getStatus(todolistNumber - 1), TaskList.getMessage(todolistNumber - 1),"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskList.getTotalTasksNumber());"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch  (DukeException e) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints tasks that contain the keyword entered by user."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void findCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            String find \u003d s.substring(5);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            if (find.equals(\" \") || (find.equals(\"\"))) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.TASK_NO_MISSING_FIND;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showFindIntroMessage();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                String findLowerCase \u003d find.toLowerCase();"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c TaskList.getTotalTasksNumber(); i +\u003d 1) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                    String message \u003d TaskList.getMessage(i).toLowerCase();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                    String type \u003d TaskList.getType(i).toLowerCase();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                    String icon \u003d TaskList.getStatus(i);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                    if ((message.contains(findLowerCase)) || (type.contains(findLowerCase))"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                        || (icon.contains(findLowerCase))) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                        Ui.showFindTasks(TaskList.getType(i), TaskList.getStatus(i),"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                            TaskList.getMessage(i), j);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                        j +\u003d 1;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_FIND;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a particular task as entered by user."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints the confirmation message by calling showDeleteMessage function under Ui class."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, updates the database."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void deleteCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showDeleteMessage(TaskList.getType(num - 1),"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getStatus(num - 1), TaskList.getMessage(num - 1),"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getTotalTasksNumber() - 1);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.removeTask(num - 1);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new event task with users\u0027 input."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints a confirmation message by calling showEventMessage function under Ui class."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void eventCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            String todoTask1 \u003d s.substring(6, s.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "            String time1 \u003d s.substring(s.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            //Date timetemp1 \u003d TimeParser.convertStringToDate(time1);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            //time1 \u003d TimeParser.convertDateToLine(timetemp1);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "            if (todoTask1.isEmpty()) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            if (todoTask1.equals(\" \")) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time1.isEmpty()) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_EVENT;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time1.equals(\" \")) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_EVENT;"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time1.equals(\"tentative\")) {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                eventTentativeCommand(todoTask1);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] startendtime \u003d time1.split(\"to\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                Event task1 \u003d new Event(todoTask1, \"E\", startendtime[0], startendtime[1]);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                String newtodoTask1 \u003d task1.toMessage();"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                Tasks newToDo1 \u003d new Event(newtodoTask1, \"E\", startendtime[0], startendtime[1]);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.addTask(newToDo1);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showEventMessage(TaskList.getType(todolistNumber), TaskList.getStatus(todolistNumber),"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                    newtodoTask1, todolistNumber + 1);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_EVENT;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e1) {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_EVENT;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new deadline task with users\u0027 input."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, prints a confirmation message by calling showDeadlineMessage function under Ui class."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void deadlineCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "            String todoTask \u003d s.substring(9, s.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            String time \u003d s.substring(s.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            //TimeParser timeParser \u003d new TimeParser();"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            // time \u003d timeParser.convertStringToDate(time);"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            if (todoTask.isEmpty()) {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_DEADLINE;"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            if (todoTask.equals(\" \")) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_DEADLINE;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time.isEmpty()) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_DEADLINE;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time.equals(\" \")) {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_DEADLINE;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            Deadline task \u003d new Deadline(todoTask, \"D\", time);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            String newtodoTask \u003d task.toMessage();"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            //Tasks newToDo2 \u003d new Deadline(newtodoTask, \"D\", time);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList.addTask(task);"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showDeadlineMessage(TaskList.getStatus(todolistNumber), newtodoTask, todolistNumber + 1);"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_DEADLINE;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function deals when user wants to store tentative tasks."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param todoTask1 description of the task."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException when user did not/wrongly input description of task and/or date."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void eventTentativeCommand(String todoTask1) throws DukeException {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.queryForDates();"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "            Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            String time1 \u003d scan.nextLine().trim();"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time1.isEmpty()) {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT_TENTATIVE;"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            if (time1.equals(\" \")) {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT_TENTATIVE;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] diffDates \u003d time1.split(\"or\");"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c diffDates.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] startendtime \u003d diffDates[i].split(\"to\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                Event task1 \u003d new Event(todoTask1, \"?][E\", startendtime[0], startendtime[1]);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "                String newtodoTask1 \u003d task1.toMessage();"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                Tasks newToDo1 \u003d new Event(newtodoTask1, \"?][E\", startendtime[0], startendtime[1]);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.addTask(newToDo1);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                    Ui.showEventTentativeOpeningMessage();"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.showEventTentativeMessage(TaskList.getType(todolistNumber), TaskList.getStatus(todolistNumber),"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                    newtodoTask1);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.showEventTentativeCloseMessage(TaskList.getTotalTasksNumber(),"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskList.getTentativeNumber());"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.INPUT_NOT_FOUND;"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.EMPTY_TASK_IN_EVENT_TENTATIVE;"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e1) {"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DukeException.EMPTY_TASK_IN_EVENT_TENTATIVE;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "     * Find all the deadlines/events on the user specified date"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then print them out for user"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "     * Command: schedule \u003cdate\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    private static void scheduleCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] tokens \u003d s.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        DukeException.checkSchedule(tokens);"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.showScheduleIntroMessage(tokens[1]);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        tokens[1] \u003d tokens[1] + \" 00000\";"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cDate, Tasks\u003e log : TaskList.getTreeMap().entrySet()) {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            if (TimeParser.getDateOnly(log.getKey()).equals(TimeParser.convertStringToDate(tokens[1]))) {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                Ui.printScheduleTask(log);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.showScheduleFinalMessage(count);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Check for any incomplete events/deadlines since the user specified date"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "     * The number of reminders is also specified by the user"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "     * The reminders is then printed out"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "     * Command: reminder \u003cno. of reminders\u003e \u003cdate\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "wenhui"
        },
        "content": "    private static void reminderCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] tokens \u003d s.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        DukeException.checkReminder(tokens);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.showReminderIntroMessage(Integer.valueOf(tokens[1]), tokens[2]);"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        Date startDate \u003d TimeParser.convertToDate(tokens[2]);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        Date previousDate \u003d null;"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cDate, Tasks\u003e log : TaskList.getTreeMap().entrySet()) {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            Date logDate \u003d TimeParser.getDateOnly(log.getKey());"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            if (count \u003e Integer.valueOf(tokens[1])) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "            if (logDate.equals(startDate) || logDate.after(startDate)){"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!log.getValue().isDone()){"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!logDate.equals(previousDate)){"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                        Ui.printScheduleDate(TimeParser.getStringDate(logDate));"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                    Ui.printScheduleTask(log);"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                    previousDate \u003d logDate;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.showEmptyReminderMessage(count);"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 5,
      "-": 660,
      "wenhui": 4
    }
  },
  {
    "path": "src/main/java/parser/TimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhui"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * This class deals with manipulating a string into a date if it is possible to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    static Date date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Manipulate a string into an date and return it back as string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * If not, simply just return back the string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date convertStringToDate(String time) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            date \u003d formatter1.parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            // return line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat formatter2 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                date \u003d formatter2.parse(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                // return line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                SimpleDateFormat formatter3 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    date \u003d formatter3.parse(time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    return date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    //return line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (ParseException e3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    SimpleDateFormat formatter4 \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                        date \u003d formatter4.parse(time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                        return date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                        // return line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (ParseException e4) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                        SimpleDateFormat formatter5 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                            date \u003d formatter5.parse(time);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                            return date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                            //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                            // return line;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (ParseException e5) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                            SimpleDateFormat formatter6 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                                date \u003d formatter6.parse(time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                                return date;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                                //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                                // return line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                            } catch (ParseException e6) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                                SimpleDateFormat formatter7 \u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new SimpleDateFormat(\"dd\u0027st of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                    date \u003d formatter7.parse(time);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                                    return date;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                } catch (ParseException e7) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                    SimpleDateFormat formatter8 \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                        new SimpleDateFormat(\"dd\u0027nd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                                        date \u003d formatter8.parse(time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                        return date;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                                    } catch (ParseException e8) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                        SimpleDateFormat formatter9"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                                            \u003d new SimpleDateFormat(\"dd\u0027rd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                                        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                            date \u003d formatter9.parse(time);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                                            return date;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                                        } catch (ParseException e9) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                            SimpleDateFormat formatter10"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                                \u003d new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                                                date \u003d formatter10.parse(time);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                                                return date;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                            } catch (ParseException e10) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                                SimpleDateFormat formatter11 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    date \u003d formatter11.parse(time);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    return date;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                                                } catch (ParseException e11) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    return null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                                                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                                            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a date back to string and returns the string."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertDateToLine(Date date) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        calendar.setTime(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        int actualDate \u003d calendar.get(Calendar.DATE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((actualDate \u003c\u003d 3) || (actualDate \u003e\u003d 21)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            if (actualDate % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027st of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027nd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027rd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function returns difference between two dates."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public static long getDiffHours(Date date1, Date date2) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        long diff \u003d Math.abs(date1.getTime() - date2.getTime());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        long diffHours \u003d diff / (60 * 60 * 1000);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return diffHours;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function returns true if two tasks are conflicts and false otherwise."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isConflicted(Tasks t1, Tasks t2) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        if (t1 \u003d\u003d t2 || ((Event) t1).getDate().getStartDate().after(((Event) t2).getDate().getStartDate())) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            if (((Event) t2).getDate().getStartDate().before(((Event) t1).getDate().getEndDate())) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get time portion of Date object only and convert it to String"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getStringTime(Date date) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"hh:mm aaa\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetFormat.format(date);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getStringDate(Date date){"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"d/MM/yyy\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetFormat.format(date);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convert Date object to contain date only (no time)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date getDateOnly(Date date) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            return targetFormat.parse(targetFormat.format(date));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convert string of date only to Date object"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date convertToDate(String s) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            return sourceFormat.parse(s);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wenhui"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wenhui"
        },
        "content": "                return sourceFormat.parse(s);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wenhui"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 5,
      "-": 205,
      "wenhui": 6
    }
  },
  {
    "path": "src/main/java/task/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Tasks {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a task in a todolist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * A task can have description, type and whether is it done or not."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tasks(String description, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public String parseDescription(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type.equals(\"E\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d description.split(Pattern.quote(\"(at: \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return tokens[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (type.equals(\"D\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d description.split(Pattern.quote(\"(by: \"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return tokens[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 60
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import parser.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import wrapper.Pair;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import wrapper.TimeInterval;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * This class handles user\u0027s input and do the required appropriate actions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static String logo \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static String space \u003d \"    \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the confirmation message when a doAfter task had been saved into the database."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showDoAfterMessage(String status, String newtodoTask1, int i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\" + \"\\n\" + space + \" [A][\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            + status"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + newtodoTask1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (i \u003e 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + i + \" task in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the welcome message at the start when user opens the duke application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"Hello from\\n\" + logo + \"\\n\" + space + \"Hello I am \" + \"Duke.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"What can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message before the application lists out each respective task in database."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showListIntroMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a respective task when user enters list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showListTask(String type, String icon, String message, int num) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + num + \".[\" + type"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"][\" + icon"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once user enters bye."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showByeMessage() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a task has been done and updated into database."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showMarkAsDone(String type, String status, String message) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \" [\" + type"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message when a particular task has been marked as done by user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showMarkAsUnDone(String type, String status, String message) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Nice! I\u0027ve unmarked this task as done:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \" [\" + type"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showError(String message) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + message + \"\\n\" + line);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showMsg(String message) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + message + \"\\n\" + line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a To-Do task has been successfully added into database."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showToDoSucess(String type, String status, String message, int todolistNumber) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"\\n\" + space + \" [\" + type"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (todolistNumber \u003e 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Now you have \" + todolistNumber + \" tasks in the list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + todolistNumber + \" task in the list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showFindIntroMessage() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a task has been deleted from database."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showDeleteMessage(String type, String status, String message, int num) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Noted. I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"\\n\" + space + \" [\" + type"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a respective task when user enter find."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showFindTasks(String type, String status, String message, int num) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + num + \".[\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            + type + \"][\" + status"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a error message when database is empty."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"Existing database is empty!\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reads users\u0027 input."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns these input."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        String line \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        return line.trim();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message to query users for dates when user want to add a tentative task."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void queryForDates() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Please provide the tentative dates.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the opening message for tentative event schedule."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showEventTentativeOpeningMessage() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Got it. I\u0027ve added the following tasks to be tentatively scheduled :\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a event task has been successfully added into database."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showEventTentativeMessage(String type, String status, String message) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"[\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            + type + \"][\" + status + \"] \" + message);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the closing message after user have added tentative event."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param num1 which is the total number of tasks."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param num2 which is the total number of tentative only tasks."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showEventTentativeCloseMessage(int num1, int num2) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + \"Now you have \" + num1 + \" tasks in the list including \""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            + num2 + \" tentative tasks\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a tentative event task has been successfully added into database."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showEventMessage(String type, String status, String message, int num) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\" + \"\\n\" + space + \"[\""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            + type + \"][\" + status"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        if (num \u003e 1) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" task in the list.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message once a deadline task has been successfully added into database."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showDeadlineMessage(String status, String message, int num) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\" + \"\\n\" + space + \" [D][\""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            + status"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        if (num \u003e 1) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" task in the list.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function prints a message for free time."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showFreeTime(int num, TimeInterval freeslot) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"You have your free time that is at least \""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            + Integer.toString(num) + \" hours at these interval\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        if (freeslot.getStartDate().equals(freeslot.getEndDate())) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + freeslot.getStartDate() + \" onwards\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + freeslot.getStartDate() + \" to \" + freeslot.getEndDate());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function prints message for update time."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void updateTime(Tasks temp) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Great you have updated the time for the following task!\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        if (temp.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + ((Event) temp).toMessage());"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (temp.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + ((Deadline) temp).toMessage());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     * This message prints message for conflicts."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showConflicts(ArrayList\u003cPair\u003e conflicts) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        if (conflicts.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Nice! you do not have any conflicts!!\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + \"Oh No!! you have the following conflicts!!\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Pair e : conflicts) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                Tasks t1 \u003d e.getTask1();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                Tasks t2 \u003d e.getTask2();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(space + (i++) + \". \" + t1.getDescription() + \" \u0026 \" + t2.getDescription());"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message corresponding to the user request for schedule"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showScheduleIntroMessage(String s) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Here is ur schedule for \" + s + \":\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the total number of tasks in the schedule"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showScheduleFinalMessage(int count) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        if (count \u003d\u003d 2) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"\\n\" + space + space + \"*there is a total of 1 task scheduled*\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"\\n\" + space + space + \"*there is a total of \" + --count + \" tasks scheduled*\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the task according to the schedule format"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printScheduleTask(Map.Entry\u003cDate, Tasks\u003e task){"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        if (task.getValue().getType().equals(\"E\")){"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + TimeParser.getStringTime(task.getKey()) + \"\\tevent: \" + task.getValue().parseDescription());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + TimeParser.getStringTime(task.getKey()) + \"\\tdeadline: \" + task.getValue().parseDescription());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a message corresponding to the user request for reminder"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showReminderIntroMessage(int n, String date) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        if (TaskList.getTreeMap().isEmpty()) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(line + \"\\n\" + space + \"You have no upcoming tasks\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(line + \"\\n\" + space + \"Here is a reminder for your next \" + n + \" upcoming tasks from \" + date);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints a notice to tell the user when there is no upcoming tasks to be reminded of"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showEmptyReminderMessage(int count){"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        if (count \u003d\u003d 1){"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(space + space + \"*You have no upcoming tasks*\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the task according to the reminder format"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printReminder(Map.Entry\u003cDate, Tasks\u003e log, int count){"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + count + \". \" + log.getValue().getDescription());"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printScheduleDate(String date){"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(space + date + \":\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 398
    }
  },
  {
    "path": "src/main/resources/InsideMovie.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"485.0\" prefWidth\u003d\"676.0\" stylesheets\u003d\"@Main_Styles.css\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\" fx:controller\u003d\"MovieInfoController\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cHBox alignment\u003d\"BOTTOM_LEFT\" spacing\u003d\"10.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"mStatusLabel\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cProgressBar fx:id\u003d\"mProgressBar\" prefWidth\u003d\"200.0\" progress\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets bottom\u003d\"4.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"337.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cScrollPane fx:id\u003d\"movieScrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"343.0\" prefWidth\u003d\"528.0\" AnchorPane.bottomAnchor\u003d\"3.5\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"-1.0\" AnchorPane.topAnchor\u003d\"-3.5\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cVBox fx:id\u003d\"movieMainVBox\" minHeight\u003d\"167.0\" prefHeight\u003d\"343.0\" prefWidth\u003d\"520.0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cLabel id\u003d\"movieMainVBox\" fx:id\u003d\"movieTitleLabel\" text\u003d\"Movie Title\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cInsets left\u003d\"205.0\" right\u003d\"205.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cImageView id\u003d\"movieTitleLabel\" fx:id\u003d\"movieBackdropImageView\" fitHeight\u003d\"129.0\" fitWidth\u003d\"172.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"165.0\" right\u003d\"165.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cGridPane fx:id\u003d\"movieGridPane\" prefWidth\u003d\"465.0\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"movieGenresLabel\" text\u003d\"Label\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"movieReleaseDateLabel\" text\u003d\"Label\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"movieRatingLabel\" text\u003d\"Label\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"2\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"movieSummaryLabel\" text\u003d\"Label\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"3\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel text\u003d\"Genre(s)\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel text\u003d\"Release Date\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel text\u003d\"Rating\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cLabel text\u003d\"Plot Summary\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                    \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cleft\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox fx:id\u003d\"mMovieTypeVBox\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"343.0\" prefWidth\u003d\"145.0\" spacing\u003d\"8.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox fx:id\u003d\"vBox1\" minHeight\u003d\"95.0\" prefHeight\u003d\"99.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cLabel fx:id\u003d\"titleLabel\" styleClass\u003d\"titleLabel\" text\u003d\"My Preferences\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"ageText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Age: -\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"genreText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Genre: -\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"langText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Language\" /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox fx:id\u003d\"vBox2\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cLabel id\u003d\"titleLabel\" fx:id\u003d\"titleLabel2\" styleClass\u003d\"titleLabel\" text\u003d\"Upcoming Tasks\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/left\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003ctop\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cMenuBar\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cmenus\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#exitMenuItemClicked\" text\u003d\"Close\" /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#aboutMenuItemClicked\" text\u003d\"About\" /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/menus\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox prefHeight\u003d\"74.0\" prefWidth\u003d\"676.0\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cTextField fx:id\u003d\"mSearchTextField\" onAction\u003d\"#searchButtonClicked\" prefWidth\u003d\"400.0\" promptText\u003d\"Enter a command here...\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"text\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"  Welcome to Entertainment-Pro. How can I help you?\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Text\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/top\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 124
    }
  },
  {
    "path": "src/main/resources/MainPage.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"485.0\" prefWidth\u003d\"676.0\" stylesheets\u003d\"@Main_Styles.css\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\" fx:controller\u003d\"MovieHandler\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cHBox alignment\u003d\"BOTTOM_LEFT\" spacing\u003d\"10.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"mStatusLabel\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cProgressBar fx:id\u003d\"mProgressBar\" prefWidth\u003d\"200.0\" progress\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets bottom\u003d\"4.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"337.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cScrollPane fx:id\u003d\"mMoviesScrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"343.0\" prefWidth\u003d\"528.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cleft\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox fx:id\u003d\"mMovieTypeVBox\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"343.0\" prefWidth\u003d\"145.0\" spacing\u003d\"8.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox fx:id\u003d\"vBox1\" minHeight\u003d\"95.0\" prefHeight\u003d\"99.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cLabel fx:id\u003d\"titleLabel\" styleClass\u003d\"titleLabel\" text\u003d\"My Preferences\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"ageText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Age: -\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"genreText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Genre: -\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"langText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Language\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox fx:id\u003d\"vBox2\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cLabel id\u003d\"titleLabel\" fx:id\u003d\"titleLabel2\" styleClass\u003d\"titleLabel\" text\u003d\"Upcoming Tasks\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/left\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003ctop\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cMenuBar\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cmenus\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#exitMenuItemClicked\" text\u003d\"Close\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#aboutMenuItemClicked\" text\u003d\"About\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/menus\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cVBox prefHeight\u003d\"74.0\" prefWidth\u003d\"676.0\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cTextField fx:id\u003d\"mSearchTextField\" onAction\u003d\"#searchButtonClicked\" prefWidth\u003d\"400.0\" promptText\u003d\"Enter a command here...\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003cText fx:id\u003d\"text\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"  Welcome to Entertainment-Pro. How can I help you?\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        \u003c/Text\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/top\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 88
    }
  },
  {
    "path": "src/main/resources/Main_Styles.css",
    "fileType": "css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "BorderPane, ScrollPane, VBox, HBox, FlowPane, AnchorPane{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background: #1d1d1d;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-width: 0px;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ProgressBar .track{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ProgressBar .bar{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #292727;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .increment-button, ScrollPane .decrement-button{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .increment-button:hover, ScrollPane .decrement-button:hover{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .thumb {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .track{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .thumb:hover{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "Label{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ".titleLabel{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-family: Verdana;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ".subtitle{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-size: 8pt;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-family: Tahoma;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#ageText{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#langText{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-font-color:white;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#genreText{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-text-fill:white;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ToolBar{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent transparent #403F3F transparent;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background: #1d1d1d;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent transparent #403F3F transparent;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .label{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .label{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .menu-item, MenuBar .context-menu{"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .menu-item:hover, MenuBar .context-menu:hover, MenuBar .menu:hover{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .context-menu{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: #403F3F;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .context-menu{"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#text{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-padding: 6, 6, 6, 6;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "TextField{"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "TextField:focused, TextField:hover{"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ".posterPane:hover{"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-scale-x: 1.2;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-scale-y: 1.2;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "Label.colHeader{"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: #696464;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-family: Verdana;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 137
    }
  },
  {
    "path": "src/main/resources/MoviePoster.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.ToolBar?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.effect.Reflection?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.ProgressBar?\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"200.0\" prefWidth\u003d\"120.0\" styleClass\u003d\"posterPane\" stylesheets\u003d\"@Main_Styles.css\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MoviePosterController\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"120.0\" spacing\u003d\"4.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cImageView fx:id\u003d\"moviePosterImageView\" fitHeight\u003d\"179.0\" fitWidth\u003d\"122.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"movieTitleLabel\" styleClass\u003d\"subtitle\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 32
    }
  }
]
