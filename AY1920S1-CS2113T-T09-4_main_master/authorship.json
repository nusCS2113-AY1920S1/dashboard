[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "group \u0027entertainment.pro\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    implementation \u0027com.fasterxml.jackson.core:jackson-core:2.9.8\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    implementation \u0027com.fasterxml.jackson.core:jackson-annotations:2.9.8\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    implementation \u0027com.fasterxml.jackson.core:jackson-databind:2.9.8\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.2\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    compile group: \u0027info.movito\u0027, name: \u0027themoviedbapi\u0027, version:\u00271.9\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    jcenter()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    mainClassName \u003d \"entertainment.pro.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 7,
      "Pdotdeep": 4,
      "nwenhui": 4,
      "-": 41
    }
  },
  {
    "path": "src/main/java/entertainment/pro/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Start the javafx program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static WatchlistHandler tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        tasks \u003d new WatchlistHandler();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Application.launch(Main.class,args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 1,
      "Riyas97": 14
    }
  },
  {
    "path": "src/main/java/entertainment/pro/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class handles application wide tasks and services."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Stage mainWindow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Scene mainMoviesScene;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private BorderPane mainLayout;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow \u003d primaryStage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        setUp();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Display window and the root scene"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainMoviesScene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.setTitle(\"Entertainment Pro\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.setScene(mainMoviesScene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mainWindow.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function se"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * ts the scene for the window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void setUp() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(getClass().getClassLoader().getResource(\"MainPage.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mainLayout \u003d loader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // setup the controller\u0027s window and reference to this main application class"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MovieHandler controller \u003d loader.getController();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMainApplication(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setWindow(mainWindow);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //Ui.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function pass over the control to the MovieInfoController class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * To view more information on movies or tv shows."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void transitToMovieInfoController(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(getClass().getClassLoader().getResource(\"Edit.fxml\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Pane layout \u003d loader.load();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // setup controller"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MovieInfoController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setWindow(mainWindow);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMainApplication(this);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.setMovie(movie);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mainWindow.setScene(new Scene(layout));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function pass over the control to the Main class from the MovieInfoController class."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "   // public void transitionBackToMoviesController() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     //   mainWindow.setScene(mainMoviesScene);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 82
    }
  },
  {
    "path": "src/main/java/entertainment/pro/commons/PromptMessages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class PromptMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_CURRENT_MOVIES_SUCCESS \u003d \"Alright! Displaying currently showing movies...\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_UPCOMING_MOVIES_SUCCESS \u003d \"Alright! Displaying upcoming movies...\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_TRENDING_MOVIES_SUCCESS \u003d \"Alright! Displaying trending movies...\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_POPULAR_MOVIES_SUCCESS \u003d \"Alright! Displaying popular movies...\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_TOP_RATED_MOVIES_SUCCESS \u003d \"Alright! Displaying top-rated movies...\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_CURRENT_TV_SUCCESS \u003d \"Alright! Displaying currently showing TV shows...\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_UPCOMING_TV_SUCCESS \u003d \"Alright! Displaying upcoming TV shows...\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_TRENDING_TV_SUCCESS \u003d \"Alright! Displaying trending TV shows...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_POPULAR_TV_SUCCESS \u003d \"Alright! Displaying popular TV shows...\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_TOP_RATED_TV_SUCCESS \u003d \"Alright! Displaying top-rated TV shows...\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String SORT_SUCCESS \u003d \"Nice! You have successfully updated your sort preferences\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String PREFERNCES_SUCCESS \u003d \"Nice! You have successfully updated your preferences\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_BACK_SUCCESS \u003d \"Nice! Displaying your last action...\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String VIEW_BACK_FAILURE \u003d \"Sorry! I am unable to display your last action\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String AUTOCOMPLETION_PROMPT \u003d \"Did you mean this?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"☹ I\u0027m sorry, but I don\u0027t know what that means. \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \"Refer to help for command formats :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String INVALID_FORMAT \u003d \"⚡ Invalid format. Refer to help for command formats. :-(\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final String OUT_OF_BOUNDS \u003d \"⚠ Index requested is out of bounds! :-(\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static final String BLACKLIST_ADD_SUCCUESS \u003d \"Successfully added to blacklist!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static final String BLACKLIST_REMOVE_SUCCUESS \u003d \"Successfully removed from  blacklist!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static final String BLACKLIST_REMOVE_FAILURE \u003d \"Sorry could not find such an item in your blacklist\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 30,
      "Pdotdeep": 4
    }
  },
  {
    "path": "src/main/java/entertainment/pro/commons/enums/COMMANDKEYS.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.commons.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": " * Command Keywords."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public enum COMMANDKEYS {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    search ,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    movies ,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    tvshows ,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    cast ,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    none ,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    undef ,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    more ,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    help,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    view ,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    profile ,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    filters ,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    preferences ,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    watchlist ,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    yes ,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    info ,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    add ,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    blacklist ,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    showtimes ,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    set ,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    name ,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    age ,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    preference ,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    remove ,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    playlist ,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    create ,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    delete ,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    restriction ,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    clear,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    sort ,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    get,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    recommendation,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    tv,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    back,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    entry,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 3,
      "Riyas97": 4,
      "Pdotdeep": 33,
      "nwenhui": 2
    }
  },
  {
    "path": "src/main/java/entertainment/pro/commons/exceptions/EPException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class EPException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "nwenhui": 4
    }
  },
  {
    "path": "src/main/java/entertainment/pro/commons/exceptions/apiException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class apiException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/Contexts/CommandContext.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.Contexts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandContext {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static ArrayList\u003cString\u003e keywordsRoot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static ArrayList\u003cString\u003e keywordsSubRoot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void initialiseContext() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (keywordsRoot.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (Map.Entry\u003cCOMMANDKEYS, COMMANDKEYS[]\u003e e: CommandStructure.cmdStructure.entrySet()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                keywordsRoot.add(e.getKey().toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                for (COMMANDKEYS a: e.getValue()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    keywordsSubRoot.add(a.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static ArrayList\u003cString\u003e getRoot() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return keywordsRoot;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static ArrayList\u003cString\u003e getPossibilitiesRoot(String key) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (String a : keywordsRoot) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (a.toLowerCase().startsWith(key.toLowerCase())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                hints.add(a);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getPossibilitiesSubRootForRoot(String root) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (Map.Entry\u003cCOMMANDKEYS, COMMANDKEYS[]\u003e e: CommandStructure.cmdStructure.entrySet()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (e.getKey().toString().trim().equals(root.trim())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                for (COMMANDKEYS sr: e.getValue()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    hints.add(sr.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static ArrayList\u003cString\u003e getPossibilitiesSubRoot(String key) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (String a : keywordsSubRoot) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (a.toLowerCase().startsWith(key.toLowerCase())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                hints.add(a);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static Pair\u003cString, String\u003e getSpellingCheck(String key) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 32,
      "Pdotdeep": 46
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/Contexts/ContextHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.Contexts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.Blacklist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class ContextHelper {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    static String getIncompleteWords(String command , Controller controller) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String incompleteCommand \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (splitCommand.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (splitCommand.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int lastIndex \u003d splitCommand.length;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            lastIndex -\u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            incompleteCommand \u003d splitCommand[lastIndex];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            String processedCommand \u003d String.join(\" \","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    Arrays.copyOfRange(splitCommand , 2 , splitCommand.length));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String commandFlagSplit[] \u003d processedCommand.split(\"-[a-z]\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String lastinput[] \u003d commandFlagSplit[commandFlagSplit.length - 1].split(\",\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            incompleteCommand \u003d lastinput[lastinput.length - 1 ];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return incompleteCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static int subStringIndex(String a , String b) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0;; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (i \u003e\u003d a.length() || i \u003e\u003d b.length()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (!(a.charAt(i) \u003d\u003d b.charAt(i))) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static String completeCommand(ArrayList\u003cString\u003e allPossibilities, String incompleteCommand) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (allPossibilities.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int lengthOfLongestCommonSubstring \u003d allPossibilities.get(0).length();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c allPossibilities.size() - 1; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            int commonSubIndex \u003d subStringIndex(allPossibilities.get(i).toLowerCase(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    allPossibilities.get(i + 1).toLowerCase());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (commonSubIndex \u003c lengthOfLongestCommonSubstring) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                lengthOfLongestCommonSubstring \u003d commonSubIndex;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.println(allPossibilities.get(0));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.println(incompleteCommand.length());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.println(lengthOfLongestCommonSubstring);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String completed \u003d allPossibilities.get(0).substring(incompleteCommand.length(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                lengthOfLongestCommonSubstring);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return completed.trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getAllHints(String command , Controller controller) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String [] splitCommand \u003d command.toLowerCase().split(\" \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String incompleteCommand \u003d getIncompleteWords(command.toLowerCase() , controller);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (splitCommand.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return CommandContext.getRoot();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else if (splitCommand.length \u003d\u003d 1 \u0026\u0026 isRootCommandComplete(splitCommand[0])) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cString\u003e allPossibilities \u003d  CommandContext.getPossibilitiesSubRootForRoot(splitCommand[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            String update \u003d completeCommand(allPossibilities , \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ((MovieHandler) controller).updateTextField(update);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return allPossibilities;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cString\u003e allPossibilities \u003d  CommandContext.getPossibilitiesRoot(incompleteCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String update \u003d completeCommand(allPossibilities , incompleteCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) controller).updateTextField(update);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return allPossibilities;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else if (splitCommand.length \u003d\u003d 2 \u0026\u0026 isSubRootCommandComplete(splitCommand[1])) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cString\u003e hints  \u003d commandSpecificHints(splitCommand[0]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//            ((MovieHandler)controller).updateTextField(update);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            //TODO NOT COMPELTE and ROBUST"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return hints;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (splitCommand.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.println(\"I TO FIND THE WORLD\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cString\u003e allPossibilities \u003d  CommandContext.getPossibilitiesSubRoot(incompleteCommand);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String update \u003d completeCommand(allPossibilities , incompleteCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) controller).updateTextField(update);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return allPossibilities;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cString\u003e allPossibilities  \u003d commandSpecificHints(splitCommand[0], splitCommand[1] , incompleteCommand);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String update \u003d completeCommand(allPossibilities , incompleteCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) controller).updateTextField(update);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return allPossibilities;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static boolean isRootCommandComplete(String root) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (COMMANDKEYS c : CommandStructure.AllRoots) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (c.toString().equals(root)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static boolean isSubRootCommandComplete(String subRoot) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (Map.Entry\u003cCOMMANDKEYS, COMMANDKEYS[]\u003e e: CommandStructure.cmdStructure.entrySet()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (COMMANDKEYS a: e.getValue()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (a.toString().equals(subRoot)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cString\u003e commandSpecificHints(String root) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch(root.toLowerCase().trim()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case(\"blacklist\"):"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"BLACKLSITWEDM vervle\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return Blacklist.getBlackListAll();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return new ArrayList\u003cString\u003e() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                        add(\"Do you need help?? Enter (help \u003cRoot COMMAND\u003e to learn more about your command)\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                };"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cString\u003e commandSpecificHints(String root , String subRoot , String incompleteCommand) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch(root) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case(\"blacklist\"):"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                ArrayList\u003cString\u003e hints \u003d Blacklist.getBlackListHints(incompleteCommand);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (!root.equals(\"remove\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    hints.addAll(SearchResultContext.getPossibilities(incompleteCommand));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return hints;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return SearchResultContext.getPossibilities(incompleteCommand);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 87,
      "Pdotdeep": 85
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/Contexts/SearchResultContext.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.Contexts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class SearchResultContext {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    static ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    static ArrayList\u003cMovieInfoObject\u003e mMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    static ArrayList\u003cMovieInfoObject\u003e mCurrentMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseContext(String[] listOfKeys) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a:listOfKeys) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            keywords.add(a);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getPossibilities(String key) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.print(\"Getting possibilities\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a : keywords) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (a.toLowerCase().startsWith(key.toLowerCase())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                hints.add(a);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static Pair\u003cString, String\u003e getSpellingCheck(String key) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void AddKeyWord(String key) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        keywords.add(key);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void clearContext() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        keywords.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void removeKeyWords(String key) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        keywords.remove(key);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static MovieInfoObject getIndex(int i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return mCurrentMovies.get(i - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void clearResults(){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void addResults(ArrayList\u003cMovieInfoObject\u003e moviesInfo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mCurrentMovies.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject mi : moviesInfo) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            mCurrentMovies.add(mi);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (mMovies.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (MovieInfoObject mi : moviesInfo) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                mMovies.add(mi);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                keywords.add(mi.getTitle());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        HashMap\u003cLong , Integer\u003e movieDup \u003d new HashMap\u003cLong, Integer\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject a: mMovies) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            movieDup.put(a.getID() , new Integer(1));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject e: moviesInfo) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          //  System.out.println(e.getTitle());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (movieDup.get(e.getID()) \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "             //   System.out.println(e.getTitle());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                mMovies.add(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                keywords.add(e.getTitle());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cMovieInfoObject\u003e getMoviesToDisplay() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return mMovies;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 6,
      "Pdotdeep": 91
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/Execution/CommandStack.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.Execution;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandStack {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cCommandSuper\u003e myStack \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static int counter \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static long lastexec \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public static void pushCmd(CommandSuper cmd) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (cmd.getRoot() \u003d\u003d COMMANDKEYS.yes) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            executeLastCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            myStack.add(cmd);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (cmd.isExecute()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                cmd.executeCommands();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static String nextCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (myStack.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (System.currentTimeMillis() - lastexec \u003e 3000) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            counter \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            counter %\u003d myStack.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        lastexec \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return myStack.get(myStack.size() - 1 - counter).toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static CommandSuper popCmd() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        CommandSuper topCmd \u003d myStack.get(myStack.size() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        myStack.remove(myStack.size() - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return topCmd;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void topCmd() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        myStack.get(myStack.size() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void clearStack() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        myStack.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public static void executeLastCommand() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Execute Last Command\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        CommandSuper cmd \u003d myStack.get(myStack.size() - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (!cmd.isExecute()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            cmd.executeCommands();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            cmd.setExecute(true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 1,
      "Riyas97": 8,
      "Pdotdeep": 54,
      "nwenhui": 3
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/InfoFetcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public interface InfoFetcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void fetchedMoviesJSON(String json);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void connectionTimedOut();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 6
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/InfoFetcherWithPreference.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public interface InfoFetcherWithPreference {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    void fetchedMoviesJSONWithPreference(String json, ArrayList\u003cInteger\u003e genrePreference, ArrayList\u003cInteger\u003e genreRestriction);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    void connectionTimedOut();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "nwenhui": 7
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/MovieInfoFetcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieInfoFetcher implements Runnable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private URL mRequestURL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private InfoFetcher mRequestListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Construct fetcher with given URL"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param requestURL The URL for sending the HTTP request"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param listener   The listener to call when the fetch completes or fails"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public MovieInfoFetcher(URL requestURL, InfoFetcher listener) throws InvalidParameterException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (requestURL \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw new InvalidParameterException(\"NULL URL passed to fetcher.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mRequestListener \u003d listener;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mRequestURL \u003d requestURL;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Begin the data fetch asynchronously."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String json \u003d URLRetriever.readURLAsString(mRequestURL);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mRequestListener.fetchedMoviesJSON(json);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"passed\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (SocketTimeoutException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Notify the listener that a connection timed out."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mRequestListener.connectionTimedOut();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 41
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/MovieInfoFetcherWithPreference.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class MovieInfoFetcherWithPreference implements Runnable"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private URL mRequestURL;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private InfoFetcherWithPreference mRequestListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ArrayList\u003cInteger\u003e genrePreference;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ArrayList\u003cInteger\u003e genreRestriction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * Construct fetcher with given URL"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * @param requestURL The URL for sending the HTTP request"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * @param listener The listener to call when the fetch completes or fails"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public MovieInfoFetcherWithPreference(URL requestURL, InfoFetcherWithPreference listener, ArrayList\u003cInteger\u003e genrePreference, ArrayList\u003cInteger\u003e genreRestriction) throws InvalidParameterException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (requestURL \u003d\u003d null){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            throw new InvalidParameterException(\"NULL URL passed to fetcher.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mRequestListener \u003d listener;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mRequestURL \u003d requestURL;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.genrePreference \u003d genrePreference;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.genreRestriction \u003d genreRestriction;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * Begin the data fetch asynchronously."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void run() "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        try "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            String json \u003d URLRetriever.readURLAsString(mRequestURL);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            mRequestListener.fetchedMoviesJSONWithPreference(json, genrePreference, genreRestriction);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        catch (SocketTimeoutException ex)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            // Notify the listener that a connection timed out."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            mRequestListener.connectionTimedOut();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }      "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "nwenhui": 49
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/MovieResultFilter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class MovieResultFilter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    ArrayList\u003cInteger\u003e genrePreference;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    ArrayList\u003cInteger\u003e genreRestriction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public MovieResultFilter(ArrayList\u003cInteger\u003e genrePreference, ArrayList\u003cInteger\u003e genreRestriction) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.genrePreference \u003d genrePreference;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.genreRestriction \u003d genreRestriction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public boolean isFitGenrePreference(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        long[] movieGenre \u003d movie.getGenreIDs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (long log : movieGenre) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            for (Integer preferenceLog : genrePreference) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                if (log \u003d\u003d preferenceLog) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public boolean isFitGenreRestriction(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        long[] movieGenre \u003d movie.getGenreIDs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (long log : movieGenre) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            for (Integer preferenceLog : genreRestriction) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                if (log \u003d\u003d preferenceLog) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 2,
      "nwenhui": 37
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/RequestListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public interface RequestListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestCompleted(ArrayList\u003cMovieInfoObject\u003e moviesInfo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestTimedOut();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    void requestFailed();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 12
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/RetrieveRequest.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.SortProfile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URLEncoder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class RetrieveRequest implements InfoFetcher, InfoFetcherWithPreference {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private RequestListener mListener;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ArrayList\u003cMovieInfoObject\u003e p_Movies;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    MovieHandler movieHandler \u003d  new MovieHandler();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    SortProfile sortProfile \u003d movieHandler.getSortProfile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static int index \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // API Usage constants"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String MAIN_URL \u003d \"http://api.themoviedb.org/3/\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String API_KEY \u003d \"5d467eb39777ed643edb8312fb71c157\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Data Request URL\u0027s for movies"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String CURRENT_MOVIE_URL \u003d \"movie/now_playing?api_key\u003d\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String POPULAR_MOVIE_URL \u003d \"movie/popular?api_key\u003d\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String UPCOMING_MOVIE_URL \u003d \"movie/upcoming?api_key\u003d\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String MOVIE_SEARCH_URL \u003d \"search/movie?api_key\u003d\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String TRENDING_MOVIE_URL \u003d \"trending/movie/day?api_key\u003d\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String GENRE_LIST_MOVIE_URL \u003d \"genre/movie/list?api_key\u003d\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Data Request URL\u0027s for TV shows"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String TV_SEARCH_URL \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String CURRENT_TV_URL \u003d \"tv/on_the_air?api_key\u003d\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String POPULAR_TV_URL \u003d \"tv/popular?api_key\u003d\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String NEW_TV_URL \u003d \"tv/latest?api_key\u003d\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String TRENDING_TV_URL \u003d \"trending/tv/day?api_key\u003d\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String GENRE_LIST_TV_URL \u003d \"genre/tv/list?api_key\u003d\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Movie Data Keys"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kTV_TITLE \u003d \"original_name\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_RELEASE_DATE \u003d \"release_date\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_ID \u003d \"id\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_GENRES \u003d \"genre_ids\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_SUMMARY \u003d \"overview\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_RATING \u003d \"vote_average\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_BACKDROP_PATH \u003d \"backdrop_path\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_POSTER_PATH \u003d \"poster_path\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String string;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kMOVIE_CAST \u003d \"cast_id\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private static final String kADULT \u003d \"adult\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getCastStrings(MovieInfoObject mMovie) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String jsonResult \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int getMovieType \u003d mMovie.getMovieType();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (getMovieType \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"movie/\" + mMovie.getID() + \"/credits?api_key\u003d\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    RetrieveRequest.API_KEY));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (getMovieType \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"tv/\" + mMovie.getID() + \"/credits?api_key\u003d\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    RetrieveRequest.API_KEY));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject jsonData \u003d (JSONObject) parser.parse(jsonResult);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray casts \u003d (JSONArray) jsonData.get(\"cast\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String castStrings \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c casts.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //if (i \u003d\u003d 10) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //  break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONObject castPair \u003d (JSONObject) casts.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                castStrings +\u003d castPair.get(\"name\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                // if (i !\u003d casts.size() - 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (i !\u003d casts.size() - 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    castStrings +\u003d \", \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return castStrings;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getCertStrings(MovieInfoObject mMovie) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String jsonResult \u003d \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int getMovieType \u003d mMovie.getMovieType();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (getMovieType \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"movie/\" + mMovie.getID() + \"/release_dates?api_key\u003d\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    RetrieveRequest.API_KEY));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (getMovieType \u003d\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"tv/\" + mMovie.getID() + \"/content_ratings?api_key\u003d\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    RetrieveRequest.API_KEY + \"\u0026language\u003den-US\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "           // System.out.println(MAIN_URL + \"movie/\" + mMovie.getID() + \"/release_dates?api_key\u003d\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "             //   RetrieveRequest.API_KEY);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject jsonData \u003d (JSONObject) parser.parse(jsonResult);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray casts \u003d (JSONArray) jsonData.get(\"results\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"yes1\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String certStrings \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String ret \u003d \"N/A\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int i \u003d 0; i \u003c casts.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject castPair \u003d (JSONObject) casts.get(i);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (castPair.get(\"iso_3166_1\").equals(\"GB\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Map cert \u003d (Map) casts.get(i);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Iterator\u003cMap.Entry\u003e itr1 \u003d cert.entrySet().iterator();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        while (itr1.hasNext()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            Map.Entry pair \u003d itr1.next();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            if (pair.getKey().equals(\"release_dates\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                certStrings \u003d pair.getValue().toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                       // System.out.println(\"this is:\" + certStrings);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String[] getCert \u003d certStrings.strip().split(\"certification\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (getCert.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            ret \u003d getCert[1].substring(2, getCert[1].length() - 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            ret \u003d getCert[getCert.length - 1].substring(2, getCert[getCert.length - 1].length() - 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int i \u003d 0; i \u003c casts.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject castPair \u003d (JSONObject) casts.get(i);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (castPair.get(\"iso_3166_1\").equals(\"GB\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        certStrings \u003d castPair.get(\"rating\").toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        ret \u003d \"Suitable for \" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            certStrings + \" years \u0026 above\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          //  System.out.println(\"this is cert\" + ret);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return ret;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public enum MoviesRequestType {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        CURRENT_MOVIES,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        POPULAR_MOVIES,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        UPCOMING_MOVIES,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        TRENDING_MOVIES,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        CURRENT_TV,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        POPULAR_TV,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        UPCOMING_TV,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        TRENDING_TV,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        SEARCH_PEOPLE,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        POP_CAST,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        NEW_TV"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public RetrieveRequest(RequestListener listener) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mListener \u003d listener;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Check if config is needed"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        checkIfConfigNeeded();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ArrayList\u003cMovieInfoObject\u003e getParsedMovies() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return p_Movies;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void beginMovieRequest(RetrieveRequest.MoviesRequestType type, boolean isAdult) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String requestURL \u003d RetrieveRequest.MAIN_URL;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case CURRENT_MOVIES:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.CURRENT_MOVIE_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026region\u003dSG\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case POPULAR_MOVIES:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.POPULAR_MOVIE_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026region\u003dSG\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case UPCOMING_MOVIES:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.UPCOMING_MOVIE_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026region\u003dSG\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case TRENDING_MOVIES:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                requestURL +\u003d RetrieveRequest.TRENDING_MOVIE_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026region\u003dSG\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 0;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case CURRENT_TV:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.CURRENT_TV_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 1;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case POPULAR_TV:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.POPULAR_TV_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 1;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case TRENDING_TV:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                requestURL +\u003d RetrieveRequest.TRENDING_TV_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 1;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case NEW_TV:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL +\u003d RetrieveRequest.NEW_TV_URL + RetrieveRequest.API_KEY +"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"\u0026language\u003den-US\u0026page\u003d1\u0026include_adult\u003d\" + isAdult;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                index \u003d 1;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                requestURL \u003d null;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(requestURL);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        fetchJSONData(requestURL);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String getCertAdvice(int age) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (age \u003c\u003d 10) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ret \u003d \"G\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (age \u003c\u003d 13) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ret \u003d \"PG\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (age \u003c\u003d 17) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ret \u003d \"PG-13\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ret \u003d \"R\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(ret);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void beginMovieSearchRequest(String movieTitle, boolean adult) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String url \u003d \"\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            url \u003d MAIN_URL + MOVIE_SEARCH_URL + API_KEY + \"\u0026query\u003d\" + URLEncoder.encode(movieTitle, \"UTF-8\") + \"\u0026include_adult\u003d\";"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            url +\u003d adult;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchJSONData(url);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException ex) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        index \u003d 0;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "       // System.out.println(\"this is newest:\" + url);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        fetchJSONData(url);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String beginAddRequest(String movieTitle) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String url \u003d MAIN_URL + MOVIE_SEARCH_URL + API_KEY + \"\u0026query\u003d\" + URLEncoder.encode(movieTitle, \"UTF-8\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            URLRetriever retrieve \u003d new URLRetriever();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String json \u003d retrieve.readURLAsString(new URL(url));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchedMoviesJSON(json);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return p_Movies.get(0).getTitle();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException | MalformedURLException | SocketTimeoutException ex) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void beginMovieSearchRequestWithPreference(String movieTitle, ArrayList\u003cInteger\u003e genrePreference, ArrayList\u003cInteger\u003e genreRestriction, boolean adult) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            String url \u003d MAIN_URL + MOVIE_SEARCH_URL + API_KEY + \"\u0026query\u003d\" + URLEncoder.encode(movieTitle, \"UTF-8\") + \"\u0026include_adult\u003d\";"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            url +\u003d adult;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            fetchJSONDataWithPreference(url, genrePreference, genreRestriction);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException ex) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public ArrayList\u003cMovieInfoObject\u003e beginSearchGenre (String genre, boolean adult) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String url \u003d MAIN_URL + \"discover/movie?with_genres\u003d\" + URLEncoder.encode(genre, \"UTF-8\") + \"\u0026api_key\u003d\""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    + API_KEY + \"\u0026language\u003den-US\u0026page\u003d1\" + \"\u0026include_adult\u003d\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            url +\u003d adult;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            URLRetriever retrieve \u003d new URLRetriever();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String json \u003d retrieve.readURLAsString(new URL(url));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            fetchedMoviesJSON(json);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            //fetchJSONData(url);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (UnsupportedEncodingException ex) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (SocketTimeoutException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (MalformedURLException e) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return p_Movies;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String parseCastJSON(JSONObject jsonObject) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String name \u003d jsonObject.get(\"name\").toString();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void getOfflineSearch(String payload, ArrayList\u003cLong\u003e genres, boolean adult) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cMovieInfoObject\u003e parsedMovies \u003d new ArrayList(10);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int end \u003d 0;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d 200; i +\u003d 1) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray jsonArray \u003d null;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    jsonArray \u003d (JSONArray) parser.parse(new FileReader(\"data/movieDatabase/\" + i + \".json\"));"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //String file \u003d \"data/moviedatabase/\" + i + \".json\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (org.json.simple.parser.ParseException e) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (payload.equals(\"\")) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"this\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (genres.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"this\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if ((payload.equals(\"\")) \u0026\u0026 (genres.size() \u003d\u003d 0) \u0026\u0026 (adult \u003d\u003d true)) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    int movieType \u003d 0;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String release \u003d (String) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //JSONArray genreIDs \u003d (JSONArray) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray genreIDsJsonArray \u003d (JSONArray) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    long[] genreIDs \u003d new long[genreIDsJsonArray.size()];"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int a \u003d 0; a \u003c genreIDs.length; a++) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        genreIDs[a] \u003d (long) genreIDsJsonArray.get(a);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    Date releaseDate \u003d TimeParser.convertToDate(release);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (j \u003d\u003d 9) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        end \u003d 1;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if ((payload.equals(\"\")) \u0026\u0026 (genres.size() \u003d\u003d 0) \u0026\u0026 (adult \u003d\u003d false)) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"adult\").toString().equals(\"true\")) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        int movieType \u003d 0;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (parsedMovies.size() \u003d\u003d 10) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            end \u003d 1;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if ((payload.equals(\"\")) \u0026\u0026 (genres.size() !\u003d 0) \u0026\u0026 (adult \u003d\u003d false)) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"adult\").toString().equals(\"true\")) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    Set\u003cLong\u003e hashMap \u003d new HashSet\u003cLong\u003e();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    hashMap \u003d (Set\u003cLong\u003e) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int k \u003d 0; k \u003c genres.size(); k +\u003d 1) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (genres.get(k).equals(hashMap)) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            int movieType \u003d 0;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        end \u003d 1;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if ((payload.equals(\"\")) \u0026\u0026 (genres.size() !\u003d 0) \u0026\u0026 (adult \u003d\u003d true)) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    Set\u003cLong\u003e hashMap \u003d new HashSet\u003cLong\u003e();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    hashMap \u003d (Set\u003cLong\u003e) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int k \u003d 0; k \u003c genres.size(); k +\u003d 1) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (genres.get(k).equals(hashMap)) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            int movieType \u003d 0;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        end \u003d 1;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (!(payload.equals(\"\")) \u0026\u0026 (genres.size() \u003d\u003d 0) \u0026\u0026 (adult \u003d\u003d false)) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"adult\").toString().equals(\"true\")) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"title\").toString().contains(payload)) {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        int movieType \u003d 0;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        end \u003d 1;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (!(payload.equals(\"\")) \u0026\u0026 (genres.size() \u003d\u003d 0) \u0026\u0026 (adult \u003d\u003d true)) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"title\").toString().contains(payload)) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        int movieType \u003d 0;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    end \u003d 1;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (!(payload.equals(\"\")) \u0026\u0026 (genres.size() !\u003d 0) \u0026\u0026 (adult \u003d\u003d false)) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (jsonObject.get(\"adult\").toString().equals(\"true\")) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    Set\u003cLong\u003e hashMap \u003d new HashSet\u003cLong\u003e();"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    hashMap \u003d (Set\u003cLong\u003e) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int k \u003d 0; k \u003c genres.size(); k +\u003d 1) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (genres.get(k).equals(hashMap)) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            if (jsonObject.get(\"title\").toString().contains(payload)) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                int movieType \u003d 0;"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            end \u003d 1;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (!(payload.equals(\"\")) \u0026\u0026 (genres.size() !\u003d 0) \u0026\u0026 (adult \u003d\u003d true)) {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int j \u003d 0; j \u003c jsonArray.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) jsonArray.get((j));"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    Set\u003cLong\u003e hashMap \u003d new HashSet\u003cLong\u003e();"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    hashMap \u003d (Set\u003cLong\u003e) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int k \u003d 0; k \u003c genres.size(); k +\u003d 1) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (genres.get(k).equals(hashMap)) {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            if (jsonObject.get(\"title\").toString().contains(payload)) {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                int movieType \u003d 0;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                long ID \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                Date releaseDate \u003d (Date) jsonObject.get(\"release_date\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String summary \u003d (String) jsonObject.get(\"overview\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                double rating \u003d (double) jsonObject.get(\"vote_average\");"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                long[] genreIDs \u003d (long[]) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String posterPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                String backdropPath \u003d \"data/cross.png\";"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                parsedMovies.add(movieInfo);"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (parsedMovies.size() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        end \u003d 1;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (end \u003d\u003d 1) {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mListener.requestCompleted(parsedMovies);"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        p_Movies \u003d parsedMovies;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // JSON data was fetched by the fetcher"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void fetchedMoviesJSON(String json) {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // If null string returned then there was a lack of internet connection"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"so far ok0\");"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (json \u003d\u003d null) {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestFailed();"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"so far not ok\");"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"so far ok1\");"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse received movies"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONObject movieData;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieData \u003d (JSONObject) parser.parse(json);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray movies;"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (index !\u003d 2){"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movies \u003d (JSONArray) movieData.get(\"results\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movies \u003d (JSONArray) movieData.get(\"cast\");"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cMovieInfoObject\u003e parsedMovies \u003d new ArrayList(20);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c movies.size(); i++) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                parsedMovies.add(parseMovieJSON((JSONObject) movies.get(i)));"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "         /**   if (sortProfile.getAlphaOrder().equals(\"Y\")) {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Collections.sort(parsedMovies, new Comparator\u003cMovieInfoObject\u003e() {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    public int compare(MovieInfoObject v1, MovieInfoObject v2) {"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        return v1.getTitle().compareTo(v2.getTitle());"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                });"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (sortProfile.getLatestDatesOrder().equals(\"Y\")) {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Collections.sort(parsedMovies, new Comparator\u003cMovieInfoObject\u003e() {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    public int compare(MovieInfoObject v1, MovieInfoObject v2) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        return v2.getReleaseDate().compareTo(v1.getReleaseDate());"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                });"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (sortProfile.getHighestRatingOrder().equals(\"Y\")) {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Collections.sort(parsedMovies, new Comparator\u003cMovieInfoObject\u003e() {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    public int compare(MovieInfoObject v1, MovieInfoObject v2) {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        return Double.compare(v2.getRating(), v1.getRating());"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                });"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "**/"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestCompleted(parsedMovies);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            p_Movies \u003d parsedMovies;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //} else {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //}"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "           // System.out.println(\"so far ok3\");"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void fetchedMoviesJSONWithPreference(String json, ArrayList\u003cInteger\u003e genrePreference,  ArrayList\u003cInteger\u003e genreRestriction) {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // If null string returned then there was a lack of internet connection"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (json \u003d\u003d null) {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestFailed();"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse received movies"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONObject movieData;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieData \u003d (JSONObject) parser.parse(json);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray movies \u003d (JSONArray) movieData.get(\"results\");"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cMovieInfoObject\u003e parsedMovies \u003d new ArrayList(20);"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            MovieResultFilter filter \u003d new MovieResultFilter(genrePreference, genreRestriction);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c movies.size(); i++) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                MovieInfoObject newMovie \u003d parseMovieJSON((JSONObject) movies.get(i));"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                if (!genrePreference.isEmpty() \u0026\u0026 genreRestriction.isEmpty()) {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    //pref not empty, restriction empty\""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    if (filter.isFitGenrePreference(newMovie)) {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        parsedMovies.add(newMovie);"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                } else if (!genrePreference.isEmpty()) {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    //pref not empty, restriction not empty"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    if (filter.isFitGenrePreference(newMovie) \u0026\u0026 filter.isFitGenreRestriction(newMovie)) {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                        parsedMovies.add(newMovie);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                } else if (!genreRestriction.isEmpty()) {"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    //pref empty, restriction not empty\""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    if (filter.isFitGenreRestriction(newMovie)) {"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                        parsedMovies.add(newMovie);"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    //pref empty, restriction empty\""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    parsedMovies.add(newMovie);"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Notify Listener"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mListener.requestCompleted(parsedMovies);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // The fetcher reported a connection time out. Notify the request listener."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * The function is called when the fetcher reported a connection time out."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Notify the request listener."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void connectionTimedOut() {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mListener.requestTimedOut();"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void fetchJSONData(String URLString) {"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Thread fetchThread \u003d null;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchThread \u003d new Thread(new MovieInfoFetcher(new URL(URLString), this));"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchThread.start();"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"bef MovieInfoFetcher\");"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void fetchJSONDataWithPreference(String URLString, ArrayList\u003cInteger\u003e genrePreference, ArrayList\u003cInteger\u003e genreRestriction) {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Thread fetchThread \u003d null;"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            fetchThread \u003d new Thread(new MovieInfoFetcherWithPreference(new URL(URLString), this, genrePreference, genreRestriction));"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fetchThread.start();"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Logger.getLogger(RetrieveRequest.class.getName()).log(Level.SEVERE, null, ex);"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Parses the given JSON string for a movie into a MovieInfo object"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Parses the given JSON string for a movie into a MovieInfo object."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private MovieInfoObject parseMovieJSON(JSONObject movieData) {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //long ID \u003d (long) movieData.get(kMOVIE_ID);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //boolean adult \u003d (boolean) movieData.get(kADULT);"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String title \u003d \"\";"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int movieType \u003d -1;"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            title \u003d (String) movieData.get(kMOVIE_TITLE);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieType \u003d 0;"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            title \u003d (String) movieData.get(kTV_TITLE);"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieType \u003d 1;"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (index \u003d\u003d 2) {"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String identity \u003d (String)movieData.get(\"media_type\");"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (identity.equals(\"movie\")) {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                title \u003d (String) movieData.get(kMOVIE_TITLE);"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movieType \u003d 0;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                title \u003d (String) movieData.get(kTV_TITLE);"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                movieType \u003d 1;"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        long ID \u003d (long) movieData.get(kMOVIE_ID);"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        double rating \u003d 0.0;"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            rating \u003d (double) movieData.get(kMOVIE_RATING);"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ClassCastException ex) {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // the rating was parsed with a long value, cast to double (issue in simple json library)"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Long longRating \u003d (Long) movieData.get(kMOVIE_RATING);"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            rating \u003d longRating.doubleValue();"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String summary \u003d (String) movieData.get(kMOVIE_SUMMARY);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse genre id array"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONArray genreIDsJsonArray \u003d (JSONArray) movieData.get(kMOVIE_GENRES);"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        long[] genreIDs \u003d new long[genreIDsJsonArray.size()];"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c genreIDs.length; i++) {"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            genreIDs[i] \u003d (long) genreIDsJsonArray.get(i);"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Parse date string from json"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //SimpleDateFormat formatter \u003d new SimpleDateFormat(\"YYYY-MM-DD\");"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date releaseDate \u003d null;"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //try {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String releaseDateString \u003d (String) movieData.get(kMOVIE_RELEASE_DATE);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"date is\" + releaseDateString);"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (releaseDateString !\u003d null) {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                releaseDate \u003d formatter1.parse(releaseDateString);"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //System.out.println(releaseDate);"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                releaseDate \u003d null;"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Get poster and backdrop paths"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String posterPath \u003d (String) movieData.get(kMOVIE_POSTER_PATH);"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String backdropPath \u003d (String) movieData.get(kMOVIE_BACKDROP_PATH);"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieInfoObject movieInfo \u003d new MovieInfoObject(movieType, ID, title, releaseDate, summary, rating, genreIDs, posterPath, backdropPath);"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // If the base url was fetched and loaded, set the root path and poster size"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (mImageBaseURL !\u003d null) {"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieInfo.setPosterRootPath(mImageBaseURL, mPosterSizes[mPosterSizes.length - 3], mBackdropSizes[mBackdropSizes.length - 1]);"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieInfo;"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Parses the given string into a date. Returns null if the parse failed"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Date parseDateString(String dateString) {"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"YYYY-MM-DD\");"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config URL"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private final static String CONFIG_URL \u003d MAIN_URL + \"configuration?api_key\u003d\" + API_KEY;"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config constants"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final int DAYS_TILL_RECACHE \u003d 5;"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String CONFIG_FILE_NAME \u003d \"config.dat\";"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config Keys"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_BASE_URL \u003d \"base_url\";"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_SECURE_BASE_URL \u003d \"secure_base_url\";"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_BACKDROP_SIZES \u003d \"backdrop_sizes\";"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static final String kCONFIG_POSTER_SIZES \u003d \"poster_sizes\";"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Config values"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static Date mLastConfigCacheDate;"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String mImageBaseURL;"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String mImageSecureBaseURL;"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String[] mPosterSizes;"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String[] mBackdropSizes;"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean mConfigWasRead;"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Checks if API config data needs to be recached"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void checkIfConfigNeeded() {"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        boolean configNeeded \u003d true;"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Get last cache date and reconfig if more than 5 days passed"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File configFile \u003d new File(CONFIG_FILE_NAME);"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (configFile.exists() \u0026\u0026 !configFile.isDirectory()) {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            readConfigData();"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Parse date and if more than 5 days passed, a recache is required"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Date now \u003d new Date();"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int diffInDays \u003d (int) (now.getTime() - mLastConfigCacheDate.getTime()) / (1000 * 3600 * 24);"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (diffInDays \u003c DAYS_TILL_RECACHE) {"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                configNeeded \u003d false;"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (configNeeded || !mConfigWasRead) {"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Config recache needed\");"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            reCacheConfigData();"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // No config needed - read cached data from config file"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Found a cache and config was not required\");"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            readConfigData();"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Reads in the config data from disk"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void readConfigData() {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ObjectInputStream file \u003d new ObjectInputStream(new FileInputStream(CONFIG_FILE_NAME));"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mLastConfigCacheDate \u003d (Date) file.readObject();"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImageBaseURL \u003d file.readUTF();"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImageSecureBaseURL \u003d file.readUTF();"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mPosterSizes \u003d (String[]) file.readObject();"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mBackdropSizes \u003d (String[]) file.readObject();"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d true;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // No file found, config will be recached"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Error reading - config will be recached"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ClassNotFoundException ex) {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mConfigWasRead \u003d false;"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Writes out the config data to file"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // NOTE: Only call after all config data was recached"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void writeConfigData() {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ObjectOutputStream file \u003d new ObjectOutputStream(new FileOutputStream(CONFIG_FILE_NAME));"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(new Date());"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeUTF(mImageBaseURL);"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeUTF(mImageSecureBaseURL);"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(mPosterSizes);"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.writeObject(mBackdropSizes);"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Failed to write, data will be not be cached and will be recached on next run"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.err.println(\"Error: Unable to cache config data: \\n\" + ex.getMessage());"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Re-caches the config data to the binary config file"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void reCacheConfigData() {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Download the config data and parse"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"Config URL is: \" + CONFIG_URL);"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String configJSON \u003d URLRetriever.readURLAsString(new URL(CONFIG_URL));"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject configRootData \u003d null;"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (configJSON !\u003d null) {"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    configRootData \u003d (JSONObject) parser.parse(configJSON);"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject imageConfigData \u003d (JSONObject) configRootData.get(\"images\");"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Get the base url data"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mImageBaseURL \u003d (String) imageConfigData.get(kCONFIG_BASE_URL);"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mImageSecureBaseURL \u003d (String) imageConfigData.get(kCONFIG_SECURE_BASE_URL);"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Get the string arrays for the poster and backdrop size strings"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray posterSizesData \u003d (JSONArray) imageConfigData.get(kCONFIG_POSTER_SIZES);"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray backdropSizesData \u003d (JSONArray) imageConfigData.get(kCONFIG_BACKDROP_SIZES);"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mPosterSizes \u003d Arrays.copyOf(posterSizesData.toArray(), posterSizesData.toArray().length, String[].class);"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mBackdropSizes \u003d Arrays.copyOf(backdropSizesData.toArray(), backdropSizesData.toArray().length, String[].class);"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    writeConfigData();"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Failed to parse... TODO: Call listener and notify error"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Failed to download config data..."
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // TODO: Call listener and notify error"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Fetches the strings for the genres for the given move. Note: This is operation is NOT asynchronous."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param movie The movie for which the genre strings need to be fetched."
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return A string array for the movie genre strings."
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String[] getGenreStrings(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String jsonResult \u003d \"\";"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + GENRE_LIST_MOVIE_URL + API_KEY));"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + GENRE_LIST_TV_URL + API_KEY));"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject jsonData \u003d (JSONObject) parser.parse(jsonResult);"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray genres \u003d (JSONArray) jsonData.get(\"genres\");"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] genreStrings \u003d new String[movie.getGenreIDs().length];"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (int i \u003d 0; i \u003c movie.getGenreIDs().length; i++) {"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                genreStrings[i] \u003d getGenreStringForID(movie.getGenreIDs()[i], genres);"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return genreStrings;"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Returns the genre string for the given genre ID using the given JSONArray of dictionaries of {ID: Genre String}"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String getGenreStringForID(long genreID, JSONArray genreList) {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String genre \u003d null;"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c genreList.size(); i++) {"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject genrePair \u003d (JSONObject) genreList.get(i);"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if ((long) genrePair.get(\"id\") \u003d\u003d genreID) {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                genre \u003d (String) genrePair.get(\"name\");"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void getAllTheMovie() throws org.json.simple.parser.ParseException {"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String jsonResult \u003d \"\";"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int j \u003d 501;"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int b \u003d 0;"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String filename \u003d \"\";"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 250000; i \u003c 300000; i +\u003d 2) {"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int de \u003d i / 500;"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            de +\u003d 1;"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (de \u003e j) {"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                j +\u003d 1;"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                filename \u003d \"data/movieDatabase/\" + j + \".json\";"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                File oldfile \u003d new File(filename);"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                b \u003d 1;"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                filename \u003d \"data/movieDatabase/\" + j + \".json\";"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                b \u003d 0;"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(filename);"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonResult \u003d URLRetriever.readURLAsString(new URL(\"https://api.themoviedb.org/3/movie/\" +"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        i + \"?api_key\u003d\" + RetrieveRequest.API_KEY + \"\u0026language\u003den-US\"));"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                // jsonResult \u003d URLRetriever.readURLAsString(new URL(\"https://api.themoviedb.org/3/discover/movie?api_key\u003d\" +"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //       RetrieveRequest.API_KEY + \"\u0026sort_by\u003dpopularity.desc\" + \"\u0026with_genres\u003d35\u0026page\u003d\" + i));"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (SocketTimeoutException e) {"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (MalformedURLException e) {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser1 \u003d new JSONParser();"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray jsonObject1 \u003d new JSONArray();"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (b \u003d\u003d 0) {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    jsonObject1 \u003d (JSONArray) parser1.parse(new FileReader(filename));"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (org.json.simple.parser.ParseException e) {"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONObject jsonObject2 \u003d (JSONObject) parser.parse(jsonResult);"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONArray jsonArray2 \u003d new JSONArray();"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //for (int a \u003d 0; a \u003c jsonObject2.size(); a +\u003d 1) {"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //  if ()"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //}"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"backdrop_path\");"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"belongs_to_collection\");"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"budget\");"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"homepage\");"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //jsonObject2.remove(\"id\");"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"imdb_id\");"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"original_language\");"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"original_title\");"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"popularity\");"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"poster_path\");"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"production_companies\");"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"production_countries\");"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"revenue\");"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"spoken_languages\");"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"tagline\");"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"video\");"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"vote_count\");"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"status\");"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONArray xtra \u003d new JSONArray();"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONArray get \u003d (JSONArray) jsonObject2.get(\"genres\");"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int d \u003d 0; d \u003c get.size(); d +\u003d 1) {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d (JSONObject) get.get(d);"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    long num \u003d (long) jsonObject.get(\"id\");"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    xtra.add(num);"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.remove(\"genres\");"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.put(\"genres\", xtra);"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                /**JSONObject temp \u003d (JSONObject)jsonObject2.get(\"adult\");"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp2 \u003d (JSONObject)jsonObject2.get(\"genres\");"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp3 \u003d (JSONObject)jsonObject2.get(\"overview\");"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp4 \u003d (JSONObject)jsonObject2.get(\"release_date\");"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp5 \u003d (JSONObject)jsonObject2.get(\"runtime\");"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp6 \u003d (JSONObject)jsonObject2.get(\"title\");"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 JSONObject temp7 \u003d (JSONObject)jsonObject2.get(\"vote_average\");"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 //JSONArray jsonArray2 \u003d (JSONArray)jsonObject2.get(\"results\");"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp);"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp2);"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp3);"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp4);"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp5);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp6);"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 jsonArray2.add(temp7);"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                 **/"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //JSONArray addEverything \u003d new JSONArray();"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //ad.add(jsonObject1);"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"movie/\" + i + \"/credits?api_key\u003d\" +"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            RetrieveRequest.API_KEY));"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (SocketTimeoutException e) {"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (MalformedURLException e) {"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONParser newParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONObject jsonData \u003d (JSONObject) newParser.parse(jsonResult);"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONArray casts \u003d (JSONArray) jsonData.get(\"cast\");"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                JSONArray firstFiveStudentArray \u003d new JSONArray();"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                int num \u003d casts.size();"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                int index \u003d 5;"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (num \u003c 5) {"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    index \u003d num;"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int c \u003d 0; c \u003c index; c++) {"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject studentObj \u003d (JSONObject) casts.get(c);"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String name \u003d studentObj.get(\"name\").toString();"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    /**studentObj.remove(\"cast_id\");"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"character\");"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"gender\");"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"credit_id\");"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"profile_path\");"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"id\");"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     studentObj.remove(\"order\");"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                     **/"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (studentObj !\u003d null) {"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        firstFiveStudentArray.add(name);"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String ret \u003d \"N/A\";"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String jsonResult1 \u003d \"\";"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    jsonResult \u003d URLRetriever.readURLAsString(new URL(MAIN_URL + \"movie/\" + i + \"/release_dates?api_key\u003d\" +"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            RetrieveRequest.API_KEY));"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONParser parser11 \u003d new JSONParser();"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonData1 \u003d (JSONObject) parser11.parse(jsonResult);"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONArray casts1 \u003d (JSONArray) jsonData1.get(\"results\");"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //System.out.println(\"yes1\");"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String certStrings \u003d \"\";"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //String ret \u003d \"N/A\";"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    for (int e \u003d 0; e \u003c casts1.size(); e +\u003d 1) {"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        JSONObject castPair \u003d (JSONObject) casts1.get(e);"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (castPair.get(\"iso_3166_1\").equals(\"GB\")) {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            JSONArray jsonObjectify \u003d (JSONArray) castPair.get(\"release_dates\");"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            JSONObject tem \u003d (JSONObject) jsonObjectify.get(0);"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            ret \u003d tem.get(\"certification\").toString();"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (MalformedURLException ex) {"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (org.json.simple.parser.ParseException ex) {"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.put(\"cert\", ret);"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject2.put(\"cast\", firstFiveStudentArray);"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                jsonObject1.add(jsonObject2);"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                File fileToSaveJson \u003d new File(filename);"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //jsonArray2.addAll(casts)"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                byte[] jsonArray \u003d jsonObject1.toString().getBytes();"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                BufferedOutputStream bos;"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    bos \u003d new BufferedOutputStream(new FileOutputStream(fileToSaveJson));"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    bos.write(jsonArray);"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    bos.flush();"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    bos.close();"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (FileNotFoundException e4) {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e4.printStackTrace();"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    jsonArray \u003d null;"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    parser \u003d null;"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    System.gc();"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(i);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                i +\u003d 1;"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void create() {"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 200; i \u003c\u003d 1000; i +\u003d 1) {"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            File newFile \u003d new File(\"data/movieDatabase/\" + i + \".json\");"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                newFile.createNewFile();"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 12,
      "Riyas97": 1157,
      "nwenhui": 33
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/movieRequesterAPI/URLRetriever.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.movieRequesterAPI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.SocketTimeoutException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class URLRetriever {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String readURLAsString(URL url) throws SocketTimeoutException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            HttpURLConnection connection \u003d (HttpURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            connection.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            connection.setReadTimeout(20 * 1000);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int statusCode \u003d connection.getResponseCode();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            StringBuilder dataStr \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // Status OK - get the data from the stream"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (statusCode \u003d\u003d 200) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                dataStr \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                BufferedReader input \u003d new BufferedReader(new InputStreamReader(connection.getInputStream()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                line \u003d input.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    dataStr.append(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d input.readLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return dataStr.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (SocketTimeoutException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw new SocketTimeoutException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 44
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/CommandDebugger.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.CommandPair;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandDebugger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    //TODO MOVE THIS SOMEWHERE ELSE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static CommandPair commandSpellChecker(String[] undefinedCommandArr, COMMANDKEYS root, Controller controller) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.println(\"Cant find anything\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        double score \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (root \u003d\u003d COMMANDKEYS.none \u0026\u0026 undefinedCommandArr.length \u003e 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (COMMANDKEYS s : CommandStructure.AllRoots) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                double temp \u003d calculateJaccardSimilarity(s.toString(), undefinedCommandArr[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (temp \u003e score) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    root \u003d s;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    score \u003d temp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (root !\u003d COMMANDKEYS.none) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Did you mean\" + root);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        score \u003d -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        COMMANDKEYS mostSimilarSub \u003d COMMANDKEYS.none;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (root !\u003d COMMANDKEYS.none \u0026\u0026 CommandStructure.cmdStructure.get(root).length !\u003d 0 \u0026\u0026 undefinedCommandArr.length \u003e 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (COMMANDKEYS s : CommandStructure.cmdStructure.get(root)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                double temp \u003d calculateJaccardSimilarity(s.toString(), undefinedCommandArr[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (temp \u003e score) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    mostSimilarSub \u003d s;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    score \u003d temp;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.println(\"Did you mean\" + mostSimilarSub);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        CommandPair cp \u003d new CommandPair(root, mostSimilarSub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (undefinedCommandArr.length \u003c 1 \u0026\u0026 CommandStructure.cmdStructure.get(root).length !\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            cp.setValidCommand(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return cp;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static Double calculateJaccardSimilarity(CharSequence left, CharSequence right) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        Set\u003cString\u003e iset \u003d new HashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        Set\u003cString\u003e unionSet \u003d new HashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean isfilled \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        int leftLength \u003d left.length();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        int rightLength \u003d right.length();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (leftLength \u003d\u003d 0 || rightLength \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return 0d;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (int lefti \u003d 0; lefti \u003c leftLength; lefti++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            unionSet.add(String.valueOf(left.charAt(lefti)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (int righti \u003d 0; righti \u003c rightLength; righti++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (!isfilled) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    unionSet.add(String.valueOf(right.charAt(righti)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (left.charAt(lefti) \u003d\u003d right.charAt(righti)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    iset.add(String.valueOf(left.charAt(lefti)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            isfilled \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return Double.valueOf(iset.size()) / Double.valueOf(unionSet.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "Pdotdeep": 75
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.commands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Execution.CommandStack;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.CommandPair;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Entry point to command parser Class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param command command that was entered by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void parseCommands(String command , Controller UIController) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        command \u003d command.toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String commandArr[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        rootCommand(commandArr , command, UIController);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Function to get the most probable root and sub root command if there was a typo in the user command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param CommandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param Command   command that was entered by the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param UIController the controller for the UI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void processCommand(CommandPair command , String[] CommandArr , String Command , Controller UIController) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (!command.isValidCommand()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch(command.getRootCommand()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case search:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Search\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                SearchCommand sc \u003d new SearchCommand(UIController);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                sc.initCommand(CommandArr , Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(sc.getRoot());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(sc.getSubRootCommand());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(sc);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case view:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"View\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                ViewCommand vc \u003d new ViewCommand(UIController);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                vc.initCommand(CommandArr , Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(vc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case help:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Help\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                HelpCommand hc \u003d new HelpCommand(UIController);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                hc.initCommand(CommandArr, Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(hc);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case more:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"More\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                MoreCommand mc \u003d new MoreCommand(UIController);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                mc.initCommand(CommandArr, Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(mc);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case yes:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Yes\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                YesCommand yc \u003d new YesCommand(UIController);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                yc.initCommand(CommandArr, Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(yc);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Yes\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                AddCommand wc \u003d new AddCommand(UIController);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                wc.initCommand(CommandArr, Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(wc);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case set:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Set\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                SetCommand stc \u003d new SetCommand(UIController);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                stc.initCommand(CommandArr, Command , command.getSubRootCommand());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(stc);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case playlist:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Playlist\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                PlaylistCommand pc \u003d new PlaylistCommand(UIController);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                pc.initCommand(CommandArr, Command , command.getSubRootCommand());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(pc);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case preference:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Preference\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                PreferenceCommand pfc \u003d new PreferenceCommand(UIController);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                pfc.initCommand(CommandArr, Command , command.getSubRootCommand());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(pfc);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case restriction:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                System.out.println(\"Restriction\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                RestrictionCommand rc \u003d new RestrictionCommand(UIController);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                rc.initCommand(CommandArr, Command, command.getSubRootCommand());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    CommandStack.pushCmd(rc);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case blacklist:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"blacklist\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                BlacklistCommand bbc \u003d new BlacklistCommand(UIController);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                bbc.initCommand(CommandArr , Command);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (command.isValidCommand()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(bbc);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case watchlist:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"watchlist\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                WatchlistCommand wlc \u003d new WatchlistCommand(UIController);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                wlc.initCommand(CommandArr , Command);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (wlc.initCommand(CommandArr, Command)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(wlc);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                CommandPair pair \u003d CommandDebugger.commandSpellChecker(CommandArr , COMMANDKEYS.none , UIController);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                ((MovieHandler) UIController).setFeedbackText(\"Sorry we are unable to process your command. Please check help for more details!\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Function to get the Root command for the comand"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param command   command that was entered by the user."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param uicontroller the controller for the UI"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void rootCommand(String[] commandArr , String command ,  Controller uicontroller) throws IOException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.print(\"Whats happening\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch(commandArr[0]) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"search\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Search\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                SearchCommand sc \u003d new SearchCommand(uicontroller);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (sc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(sc);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"view\":"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"View\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                ViewCommand vc \u003d new ViewCommand(uicontroller);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (vc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(vc);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Help\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                HelpCommand hc \u003d new HelpCommand(uicontroller);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (hc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(hc);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"more\":"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"More\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                MoreCommand mc \u003d new MoreCommand(uicontroller);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (mc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(mc);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"yes\":"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Yes\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                YesCommand yc \u003d new YesCommand(uicontroller);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (yc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(yc);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Add\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                AddCommand wc \u003d new AddCommand(uicontroller);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (wc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(wc);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case \"set\":"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Set\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                SetCommand stc \u003d new SetCommand(uicontroller);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (stc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(stc);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case \"playlist\":"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Playlist\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                PlaylistCommand pc \u003d new PlaylistCommand(uicontroller);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (pc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(pc);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"remove\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Remove\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                RemoveCommand removec \u003d new RemoveCommand(uicontroller);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (removec.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(removec);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case \"preference\":"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"Preference\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                PreferenceCommand pfc \u003d new PreferenceCommand(uicontroller);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (pfc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(pfc);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case \"restriction\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                System.out.println(\"Restriction\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                RestrictionCommand rc \u003d new RestrictionCommand(uicontroller);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (rc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    CommandStack.pushCmd(rc);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case \"get\":"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(\"Get\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                GetCommand gc \u003d new GetCommand(uicontroller);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (gc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    CommandStack.pushCmd(gc);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case \"blacklist\":"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"blacklist\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                BlacklistCommand bbc \u003d new BlacklistCommand(uicontroller);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                bbc.initCommand(commandArr , command);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (bbc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    CommandStack.pushCmd(bbc);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case \"watchlist\":"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"watchlist\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                WatchlistCommand wlc \u003d new WatchlistCommand(uicontroller);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                wlc.initCommand(commandArr , command);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (wlc.initCommand(commandArr , command)) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandStack.pushCmd(wlc);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                CommandPair pair \u003d CommandDebugger.commandSpellChecker(commandArr , COMMANDKEYS.none, uicontroller);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (pair.getSubRootCommand() \u003d\u003d COMMANDKEYS.none) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) uicontroller).setAutoCompleteText(\"Did you mean :\"+ pair.getRootCommand());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) uicontroller).setAutoCompleteText(\"Did you mean :\"+ pair.getRootCommand() + \" \" + pair.getSubRootCommand() + \" \" + String.join(\" \", Arrays.copyOfRange(commandArr,2 , commandArr.length)));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                processCommand(pair , commandArr , command, uicontroller);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 7,
      "Riyas97": 89,
      "Pdotdeep": 167,
      "nwenhui": 10
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/CommandStructure.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandStructure {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Defining the Command structure for the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static TreeMap\u003cCOMMANDKEYS, COMMANDKEYS[]\u003e cmdStructure \u003d new TreeMap\u003cCOMMANDKEYS , COMMANDKEYS[]\u003e() {{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.search , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.movies , COMMANDKEYS.tvshows , COMMANDKEYS.cast , COMMANDKEYS.filters"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.view , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                COMMANDKEYS.profile , COMMANDKEYS.filters , COMMANDKEYS.preferences , COMMANDKEYS.watchlist , COMMANDKEYS.info , COMMANDKEYS.showtimes , COMMANDKEYS.blacklist,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                COMMANDKEYS.movies, COMMANDKEYS.tv, COMMANDKEYS.back, COMMANDKEYS.entry"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.blacklist , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.add, COMMANDKEYS.remove"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.watchlist , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.add, COMMANDKEYS.remove , COMMANDKEYS.done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        put(COMMANDKEYS.add , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//                COMMANDKEYS.blacklist, COMMANDKEYS.watchlist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        put(COMMANDKEYS.remove , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//                COMMANDKEYS.blacklist, COMMANDKEYS.watchlist"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.help , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.search , COMMANDKEYS.view , COMMANDKEYS.add , COMMANDKEYS.help , COMMANDKEYS.more , COMMANDKEYS.yes , COMMANDKEYS.set ,  COMMANDKEYS.playlist , COMMANDKEYS.yes"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        put(COMMANDKEYS.more , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//                //EMPTY"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.yes , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                //EMPTY"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.set , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.name , COMMANDKEYS.age , COMMANDKEYS.preference, COMMANDKEYS.sort"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.preference , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                COMMANDKEYS.add , COMMANDKEYS.remove , COMMANDKEYS.clear"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        put(COMMANDKEYS.playlist , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                COMMANDKEYS.create , COMMANDKEYS.delete , COMMANDKEYS.add , COMMANDKEYS.remove , COMMANDKEYS.set"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        put(COMMANDKEYS.restriction , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                COMMANDKEYS.add , COMMANDKEYS.remove , COMMANDKEYS.clear"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        put(COMMANDKEYS.get , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                COMMANDKEYS.recommendation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        put(COMMANDKEYS.watchlist , new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                COMMANDKEYS.add,  COMMANDKEYS.set,  COMMANDKEYS.delete"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }};"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static COMMANDKEYS[] AllRoots \u003d new COMMANDKEYS[]{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            COMMANDKEYS.search"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.remove"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.view"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.add"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.help"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.more"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.yes"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.set"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.playlist"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.blacklist"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.watchlist"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            , COMMANDKEYS.preference};"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 7,
      "Riyas97": 6,
      "Pdotdeep": 77,
      "nwenhui": 5
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/CommandSuper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.CommandPair;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public abstract class CommandSuper {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Controller uicontroller;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private COMMANDKEYS[] subCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private COMMANDKEYS root;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap \u003d new TreeMap\u003cString, ArrayList\u003cString\u003e\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private COMMANDKEYS subRootCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String payload;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean execute \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Function to decide if the command should be executed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * If there is a typo in the command, the command should not be executed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isExecute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return execute;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setExecute(boolean execute) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.execute \u003d execute;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public COMMANDKEYS getRoot() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return root;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public TreeMap\u003cString, ArrayList\u003cString\u003e\u003e getFlagMap() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return flagMap;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public COMMANDKEYS getSubRootCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return subRootCommand;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getPayload() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return payload;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Constructor for each Command Super class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public CommandSuper(COMMANDKEYS root , COMMANDKEYS[] subCommand , Controller uicontroller) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.uicontroller \u003d uicontroller;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.subCommand \u003d subCommand;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.root \u003d root;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Controller getUIController() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return uicontroller;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * initialise the Command values."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param command   command that was entered by the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public boolean initCommand(String[] commandArr , String command) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (!subCommand(commandArr)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        processFlags(commandArr , command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        processPayload(commandArr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        if (subCommand.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//            execute \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * initialise the Command values."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param command   command that was entered by the user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param subRootCommand the subRoot command  that was found"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void initCommand(String[] commandArr, String command, COMMANDKEYS subRootCommand) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.subRootCommand \u003d subRootCommand;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        processFlags(commandArr , command);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        processPayload(commandArr);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        setExecute(false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Find the subRoot Command of the user command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public boolean subCommand(String[] commandArr) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            subRootCommand \u003d COMMANDKEYS.none;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (CommandStructure.cmdStructure.get(root).length \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                //Supposed to have Sub root but doesnt"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                setExecute(false);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                ((MovieHandler) uicontroller).setAutoCompleteText(\"You are missing a few Arguments!!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                setExecute(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (COMMANDKEYS cmd : subCommand) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (COMMANDKEYS.valueOf(commandArr[1]) \u003d\u003d cmd) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        subRootCommand \u003d cmd;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        execute \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            //Matching Subroot command not found"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            CommandPair cmds \u003d CommandDebugger.commandSpellChecker(commandArr, root, this.uicontroller);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            subRootCommand \u003d cmds.getSubRootCommand();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            setExecute(false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ((MovieHandler) uicontroller).setAutoCompleteText(\"Did you mean :\" + root + \" \" + subRootCommand + \" \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    + String.join(\" \", Arrays.copyOfRange(commandArr, 2 , commandArr.length)));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * find flag values"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param command   command that was entered by the user."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void processFlags(String[] commandArr , String command) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String f \u003d \"\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String commandFlagSplit[] \u003d command.split(\"-[a-z,A-Z]\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cString\u003e flagOrder \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (String s :commandArr) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (s.matches(\"-[a-z,A-Z]\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                flagOrder.add(s);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (String flagValues : commandFlagSplit) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (first) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String flagsIndividualValues[] \u003d flagValues.split(\",\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ArrayList\u003cString\u003e listOfString \u003d flagMap.get(flagOrder.get(counter));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (listOfString \u003d\u003d null) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                listOfString \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (String individualFlags: flagsIndividualValues) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                listOfString.add(individualFlags.toLowerCase().trim());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            flagMap.put(flagOrder.get(counter), listOfString);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (flagOrder.size() !\u003d 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (flagMap.get(flagOrder.get(flagOrder.size() - 1)) \u003d\u003d null) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                flagMap.put(flagOrder.get(flagOrder.size() - 1) , new ArrayList\u003cString\u003e());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cString\u003e\u003e entry : flagMap.entrySet()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(\"Key: \" + entry.getKey() + \" Value: \" + entry.getValue());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * find payload of the user Command based on the interpretation by Command Parser."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void processPayload(String []commandArr) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (this.root !\u003d COMMANDKEYS.none) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (this.subRootCommand !\u003d COMMANDKEYS.none) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                payload \u003d  getThePayload(2 , commandArr);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                payload \u003d getThePayload(1 , commandArr);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            payload \u003d \"\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * find payload of the user Command."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param commandArr command that was entered by the user in split array form"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param start the start index of the payload in the user command"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getThePayload(int start, String[] commandArr) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        while (i \u003c commandArr.length \u0026\u0026 !commandArr[i].matches(\"-[a-z]\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(i + \".\" + commandArr[i]);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String payload \u003d \"\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int j \u003d start; j \u003c i; j++) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            payload +\u003d commandArr[j];"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            payload +\u003d \" \";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return payload.trim();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Print Command method."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String payload \u003d getPayload();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String flagsStr \u003d \"\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (Map.Entry\u003cString, ArrayList\u003cString\u003e\u003e entry : flagMap.entrySet()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            flagsStr +\u003d entry.getKey();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            flagsStr +\u003d \" \";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (String val : entry.getValue()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                flagsStr +\u003d val;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                flagsStr +\u003d \" , \";"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return getRoot().toString() + \" \" + getSubRootCommand().toString() + \" \"  + payload + \" \" + flagsStr;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Abstract class to be implemented for each root command class."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public abstract void executeCommands() throws IOException;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 222,
      "Pdotdeep": 55
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/TimeParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * This class deals with manipulating a string into a date if it is possible to."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    static Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Manipulate a string into an date and return it back as string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * If not, simply just return back the string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date convertStringToDate(String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            date \u003d formatter1.parse(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            // return line;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat formatter2 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                date \u003d formatter2.parse(time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                // return line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                SimpleDateFormat formatter3 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                    date \u003d formatter3.parse(time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    return date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    //return line;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (ParseException e3) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    SimpleDateFormat formatter4 \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        date \u003d formatter4.parse(time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                        return date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                        //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                        // return line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (ParseException e4) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        SimpleDateFormat formatter5 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                            date \u003d formatter5.parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                            return date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                            //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                            // return line;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (ParseException e5) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                            SimpleDateFormat formatter6 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                date \u003d formatter6.parse(time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                                return date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                                //line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                                // return line;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                            } catch (ParseException e6) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                                SimpleDateFormat formatter7 \u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                        new SimpleDateFormat(\"dd\u0027st of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                                    date \u003d formatter7.parse(time);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                                    return date;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                } catch (ParseException e7) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                    SimpleDateFormat formatter8 \u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                            new SimpleDateFormat(\"dd\u0027nd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                    try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                        date \u003d formatter8.parse(time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                        return date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                    } catch (ParseException e8) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                        SimpleDateFormat formatter9"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                                \u003d new SimpleDateFormat(\"dd\u0027rd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                                        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                            date \u003d formatter9.parse(time);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                                            return date;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                                        } catch (ParseException e9) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                                            SimpleDateFormat formatter10"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                                    \u003d new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                                date \u003d formatter10.parse(time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                                return date;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                            } catch (ParseException e10) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                                                SimpleDateFormat formatter11 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    date \u003d formatter11.parse(time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    return date;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                                } catch (ParseException e11) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    return null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                                                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                                            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a date back to string and returns the string."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertDateToLine(Date date) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        calendar.setTime(date);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        int actualDate \u003d calendar.get(Calendar.DATE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((actualDate \u003c\u003d 3) || (actualDate \u003e\u003d 21)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            if (actualDate % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027st of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027nd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027rd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function returns difference between two dates."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public static long getDiffHours(Date date1, Date date2) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        long diff \u003d Math.abs(date1.getTime() - date2.getTime());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        long diffHours \u003d diff / (60 * 60 * 1000);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        return diffHours;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get time portion of Date object only and convert it to String"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getStringTime(Date date) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"hh:mm aaa\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetFormat.format(date);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getStringDate(Date date) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"d/MM/yyy\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetFormat.format(date);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convert Date object to contain date only (no time)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date getDateOnly(Date date) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            return targetFormat.parse(targetFormat.format(date));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convert string of date only to Date object"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date convertToDate(String s) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            return sourceFormat.parse(s);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                return sourceFormat.parse(s);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 13,
      "nwenhui": 5,
      "-": 181
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Period;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class AddCommand extends CommandSuper {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public AddCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.add, CommandStructure.cmdStructure.get(COMMANDKEYS.add), uicontroller);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case watchlist:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                addToWatchList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case blacklist:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//                addToBlackList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Add items to the watchlist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void addToWatchList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String movie \u003d ((MovieHandler) this.getUIController()).getAPIRequester().beginAddRequest(getPayload());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            movie \u003d movie.toLowerCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String type \u003d this.getFlagMap().get(\"-d\").get(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \" d \":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    String endDate \u003d this.getFlagMap().get(\"-e\").get(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    Deadline deadline \u003d new Deadline(movie, \"D\", endDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    WatchlistHandler.add(deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \" p \":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    String stDate \u003d this.getFlagMap().get(\"-s\").get(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    String enDate \u003d this.getFlagMap().get(\"-e\").get(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    Period period \u003d new Period(movie, \"P\", stDate, enDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    WatchlistHandler.add(period);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            WatchlistHandler.print_list((MovieHandler) (this.getUIController()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler) (this.getUIController())).setFeedbackText(\"Please enter a valid command in the form of: \\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \"add watchlist \u003cname of movie\u003e -d \u003ctype of duke.task\u003e -s \u003cstart date only for duke.task\u003e -e \u003cend date for duke.task\u003e\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 34,
      "Riyas97": 10,
      "Pdotdeep": 18
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/BlacklistCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Contexts.SearchResultContext;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.Blacklist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class BlacklistCommand extends CommandSuper {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Constructor for each Command Super class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param uicontroller"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public BlacklistCommand (Controller uicontroller) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.blacklist, CommandStructure.cmdStructure.get(COMMANDKEYS.blacklist), uicontroller);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                addToBlackList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case remove:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                String movie \u003d getPayload();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                removeFromBlackList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                Blacklist.saveBlackList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Check if payload is an integer."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param radix the chosen radix."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param s string payload."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean isInteger(String s, int radix) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (s.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (int i \u003d 0; i \u003c s.length(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (i \u003d\u003d 0 \u0026\u0026 s.charAt(i) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (s.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (Character.digit(s.charAt(i) , radix) \u003c 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Add items to the blacklist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void addToBlackList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.print(\"HERE!!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String movie \u003d getPayload().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (getFlagMap().get(\"-k\") !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.print(\"ADDing keyword\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (isInteger(movie, 10)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                Blacklist.addToBlacklistKeyWord(SearchResultContext.getIndex(Integer.parseInt(movie)).getTitle());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                Blacklist.addToBlacklistKeyWord(movie);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.print(\"ADDing movie\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (isInteger(movie, 10)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                Blacklist.addToBlacklistMoviesID(SearchResultContext.getIndex(Integer.parseInt(movie)));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                Blacklist.addToBlacklistMovie(movie);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ((MovieHandler) this.getUIController()).setFeedbackText(Blacklist.printList());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private void removeFromBlackList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String movie \u003d getPayload();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean stat \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (getFlagMap().get(\"-k\") !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.print(\"REmoving ing keyword\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (isInteger(movie, 10)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                stat \u003d Blacklist.removeFromBlacklistKeyWord(SearchResultContext.getIndex(Integer.parseInt(movie)).getTitle());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                stat \u003d Blacklist.removeFromBlacklistKeyWord(movie);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.print(\"Removingg movie\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (isInteger(movie, 10)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                stat \u003d Blacklist.removeFromBlacklistMovies(SearchResultContext.getIndex(Integer.parseInt(movie)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                stat \u003d Blacklist.removeFromBlacklistMovieTitle(movie);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (stat) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ((MovieHandler) getUIController()).setFeedbackText(\"Successfully Removed from BlackList\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ((MovieHandler) getUIController())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    .setFeedbackText(\"Such a movie does not exist in your BlackList. Check your spelling?\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 8,
      "Pdotdeep": 121
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/GetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class GetCommand extends CommandSuper {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private int constant \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public GetCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(COMMANDKEYS.get, CommandStructure.cmdStructure.get(COMMANDKEYS.get), uicontroller);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            switch(this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case recommendation:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    ExecuteRecommendationCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler) this.getUIController()).setFeedbackText(\"file unable to be found\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * prints out a list of recommendations based on the users set preferences"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @throws IOException: file was not able to be found"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void ExecuteRecommendationCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String feedback \u003d \"Your recommended movies are: \\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        ArrayList\u003cInteger\u003e p_indices \u003d movieHandler.getUserProfile().getGenreIdPreference();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        ArrayList\u003cMovieInfoObject\u003e  movies \u003d movieHandler.getAPIRequester().beginSearchGenre(Integer.toString(p_indices.get(0)), movieHandler.getUserProfile().isAdult());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (int i \u003d 0; i \u003c constant; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            feedback +\u003d i + 1 + \". \" + movies.get(i).getTitle() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        movieHandler.setFeedbackText(feedback);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 45,
      "Riyas97": 7
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.HelpStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class HelpCommand extends CommandSuper {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public HelpCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.help, CommandStructure.cmdStructure.get(COMMANDKEYS.help), uicontroller);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        //TODO Display help options"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ((MovieHandler) this.getUIController()).setFeedbackText(getHelp());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private String getHelp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return HelpStorage.getCmdHelp().get(getSubRootCommand());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 7,
      "Pdotdeep": 19
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/MoreCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class MoreCommand extends CommandSuper {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public MoreCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.more, CommandStructure.cmdStructure.get(COMMANDKEYS.more), uicontroller);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 5,
      "Pdotdeep": 14
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/PlaylistCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.PlaylistCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class PlaylistCommand extends CommandSuper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public PlaylistCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.playlist, CommandStructure.cmdStructure.get(COMMANDKEYS.playlist) , uicontroller);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        switch (this.getSubRootCommand()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case create:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeCreatePlaylist();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeDeletePlaylist();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeAddToPlaylist();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case remove:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeRemoveFromPlaylist();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case set:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeSetToPlaylist();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case clear:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeClearPlaylist();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * create new playlist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: create"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: none"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeCreatePlaylist() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.newPlaylist(this.getPayload());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * delete playlist."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: delete"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: none"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeDeletePlaylist() throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.deletePlaylist(this.getPayload());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * add movie titles to playlist."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: add"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -m (movie number -- not movie ID)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeAddToPlaylist() throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.addToPlaylist(this.getPayload(), this.getFlagMap(), movieHandler.getmMovies());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * remove movie titles from playlist."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: remove"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -m (movie number -- not movie ID)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeRemoveFromPlaylist() throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.removeFromPlaylist(this.getPayload(), this.getFlagMap(), movieHandler.getmMovies());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * edit playlist\u0027s name and description."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: set"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -n (for new playlist name) -d (for new playlist description)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * so far can only take one worded description :/:/:/:/ D:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeSetToPlaylist() throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.setToPlaylist(this.getPayload(), this.getFlagMap());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * clear out all movies in particular playlise"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: playlist"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: clear"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: \u003cplaylist name\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: none"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeClearPlaylist() throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        PlaylistCommands command \u003d new PlaylistCommands(movieHandler.getPlaylists());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.clearPlaylist(this.getPayload());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 7,
      "nwenhui": 113,
      "Pdotdeep": 8
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/PreferenceCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.ProfileCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class PreferenceCommand extends CommandSuper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public PreferenceCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.preference, CommandStructure.cmdStructure.get(COMMANDKEYS.preference) , uicontroller);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeAddPreference();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case remove:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeRemovePreference();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case clear:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeClearPreference();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * add to user preference."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: add"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * flag: -g (genre name -- not genre ID)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeAddPreference() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        command.addPreference(this.getFlagMap());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * remove from user preference."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: remove"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * flag: -g (genre name -- not genre ID)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeRemovePreference() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        command.removePreference(this.getFlagMap());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * clear all preference that was set previously"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: clear"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID) -a (adult -- yes to allow adult content, no to restrict, set to yes by default)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeClearPreference() throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.clearPreference(this.getFlagMap());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 54,
      "Pdotdeep": 4,
      "nwenhui": 20
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/RemoveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class RemoveCommand extends CommandSuper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Constructor for each Command Super class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param uicontroller"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public RemoveCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.remove, CommandStructure.cmdStructure.get(COMMANDKEYS.remove), uicontroller);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * executes the entertainment.pro.logic.parsers.commands based on the subroot command that is passed to it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        switch(this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case watchlist:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                String mov \u003d getPayload();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(mov);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (WatchlistHandler.removeFromWatchlist(mov, (MovieHandler)(this.getUIController()))) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        ((MovieHandler) getUIController()).setFeedbackText(\"Successfully removed the movie from WatchList: \" + mov);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        ((MovieHandler) getUIController()).setFeedbackText(\"Such a movie does not exist in your WatchList. Check your spelling?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            case blacklist:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean isInteger(String s, int radix) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (s.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (int i \u003d 0; i \u003c s.length(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (i \u003d\u003d 0 \u0026\u0026 s.charAt(i) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (s.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (Character.digit(s.charAt(i) , radix) \u003c 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 10,
      "Riyas97": 8,
      "Pdotdeep": 49
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/RestrictionCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.ProfileCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class RestrictionCommand extends CommandSuper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public RestrictionCommand(Controller UIController) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        super(COMMANDKEYS.restriction, CommandStructure.cmdStructure.get(COMMANDKEYS.restriction), UIController);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        switch (this.getSubRootCommand()){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeAddRestriction();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case remove:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeRemoveRestriction();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case clear:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeClearRestriction();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * add to user preference"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: add"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeAddRestriction() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.addRestriction(this.getFlagMap());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * remove from user preference"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: remove"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeRemoveRestriction() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.removeRestriction(this.getFlagMap());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * clear all preference that was set previously"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: preference"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: clear"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID) -a (adult -- yes to allow adult content, no to restrict, set to yes by default)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeClearRestriction() throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.clearRestriction(this.getFlagMap());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 7,
      "nwenhui": 71
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/SearchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.ProfileCommands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class SearchCommand extends CommandSuper {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_CURRENT \u003d \"/current\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_UPCOMING \u003d \"/upcoming\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_TRENDING \u003d \"/trend\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_POPULAR \u003d \"/popular\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_PRE \u003d \"-p\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_NEW_GENRE_PREF \u003d \"-g\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_NEW_GENRE_RESTRICT \u003d \"-r\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_NEW_SORT \u003d \"-s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String GET_NEW_ADULT_RATING \u003d \"-a\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    ArrayList\u003cString\u003e genrePreference \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    ArrayList\u003cString\u003e genreRestriction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    boolean isAdult \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //ArrayList\u003cString\u003e genrePreference \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public SearchCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(COMMANDKEYS.search, CommandStructure.cmdStructure.get(COMMANDKEYS.search), uicontroller);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case movies:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeMovieSearch();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case tvshows:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeTvShowSearch();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * search for movie titles using keywords."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: search"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: movies"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: \u003ckeywords\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * flag: -g (genre name -- not genre ID) [-g preferences -\u003e to use user\u0027s preferred filters]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeMovieSearch() throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        TreeMap\u003cString, ArrayList\u003cString\u003e\u003e treeMap \u003d getFlagMap();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //if (getFlagMap().containsKey(GET_PREFERENCE))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (this.getFlagMap().containsKey(\"-q\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.getAllTheMovie();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (!this.getFlagMap().containsKey(\"-g\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (movieHandler.getUserProfile().isAdult()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) this.getUIController()).getAPIRequester()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                            .beginMovieSearchRequest(getPayload() ,  true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) this.getUIController()).getAPIRequester()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                            .beginMovieSearchRequest(getPayload() ,  false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                ((MovieHandler) this.getUIController()).clearSearchTextField();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                ArrayList\u003cInteger\u003e inputGenrePreference \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                ArrayList\u003cInteger\u003e inputGenreRestriction \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (String log : this.getFlagMap().get(\"-g\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (log.equalsIgnoreCase(\"preferences\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        inputGenrePreference.addAll(movieHandler.getUserProfile().getGenreIdPreference());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } else if (log.equalsIgnoreCase(\"restrictions\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        inputGenreRestriction.addAll(movieHandler.getUserProfile().getGenreIdRestriction());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        inputGenrePreference.add(command.findGenreID(log));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (movieHandler.getUserProfile().isAdult()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) this.getUIController()).getAPIRequester()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                            .beginMovieSearchRequestWithPreference(getPayload(), inputGenrePreference, inputGenreRestriction, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    ((MovieHandler) this.getUIController()).getAPIRequester()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                            .beginMovieSearchRequestWithPreference(getPayload(), inputGenrePreference, inputGenreRestriction, false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                ((MovieHandler) this.getUIController()).clearSearchTextField();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeTvShowSearch() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d new MovieHandler();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        TreeMap\u003cString, ArrayList\u003cString\u003e\u003e treeMap \u003d getFlagMap();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (treeMap.containsKey(\"-c\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.showCurrentTV();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //} else if (treeMap.containsKey(\"-[u]\")){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //  MovieHandler.showUpcomingTV();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (treeMap.containsKey(\"-t\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.showTrendTV();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (treeMap.containsKey(\"-p\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.showPopTV();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 109,
      "Pdotdeep": 8
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/SetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.ProfileCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class SetCommand extends CommandSuper {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public SetCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        super(COMMANDKEYS.set, CommandStructure.cmdStructure.get(COMMANDKEYS.set) , uicontroller);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void executeCommands() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        switch (this.getSubRootCommand()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case name:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(\"enter\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeSetName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case age:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeSetAge();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case preference:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeSetPreference();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case watchlist:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(\"enter\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                executeTaskDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case restriction:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                executeSetRestriction();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case sort:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeSort();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeSort() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String getQuery \u003d getPayload();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (getQuery.equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.setSort(true, false, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (getQuery.equals(\"2\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.setSort(false, true, false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (getQuery.equals(\"3\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            movieHandler.setSort(false, false, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * set user\u0027s name."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: name"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: \u003cuser\u0027s name\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * flag: none"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeSetName() throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        command.setName(this.getPayload());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * set user\u0027s age."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: age"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: \u003cuser\u0027s age\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * flag: none"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeSetAge() throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        command.setAge(this.getPayload());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * set user\u0027s preferences."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * sub: preference"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID) -a (adult -- yes to allow adult content, no to restrict, set to yes by default)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeSetPreference() throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler) this.getUIController());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        command.setPreference(this.getFlagMap());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set user\u0027s restrictions"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * sub: restriction"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * flag: -g (genre name -- not genre ID)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private void executeSetRestriction() throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        MovieHandler movieHandler \u003d ((MovieHandler)this.getUIController());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(movieHandler.getUserProfile());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        command.setRestriction(this.getFlagMap());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.clearSearchTextField();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        movieHandler.setLabels();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * set the duke.task on the watchlist as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * sub: watchlist"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * flag: -d (index of the element in the watchlist to be marked as done)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void executeTaskDone()  {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String index \u003d this.getFlagMap().get(\"-d\").get(0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            index \u003d index.strip();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            int i \u003d Integer.valueOf(index);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(i);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            WatchlistHandler.markAsDone(i, (MovieHandler)(this.getUIController()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler)(this.getUIController())).setFeedbackText(\"please enter a valid duke.task number\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 22,
      "Riyas97": 88,
      "Pdotdeep": 5,
      "nwenhui": 22
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.Blacklist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.PastCommandStructure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class ViewCommand extends CommandSuper {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Controller controller;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ViewCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        super(COMMANDKEYS.view, CommandStructure.cmdStructure.get(COMMANDKEYS.view), uicontroller);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case watchlist:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                WatchlistHandler.print_list((MovieHandler) (this.getUIController()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            case blacklist:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                ((MovieHandler) this.getUIController()).setFeedbackText(Blacklist.printList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case movies:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeMovieCommands();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case tv:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeTVCommands();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case back:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeBackCommands();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            case entry:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                executeEntryCommands(Integer.parseInt(getPayload()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeEntryCommands(int num) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String now \u003d formatter.format(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //String payload \u003d getPayload();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //int num \u003d Integer.parseInt(payload);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(\"this is num +\" + num);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ((MovieHandler) this.getUIController()).showMovie(num);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (!(((MovieHandler) this.getUIController()).isViewBack())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).updatePastCommands(now);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeBackCommands() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        PastCommandStructure pastCommandStructure \u003d ((MovieHandler) this.getUIController()).getPastCommands().getMap().get("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                ((MovieHandler) this.getUIController()).getPastCommands().getMap().size() - 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String command \u003d pastCommandStructure.getQuery();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String[] getStrips \u003d command.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(\"this is past command \" + command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ((MovieHandler) this.getUIController()).setViewBack(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (command.startsWith(\"view entry\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"riyazzz\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).setViewBackMoreInfo(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String pastCommand \u003d ((MovieHandler) this.getUIController()).getPastCommands().getMap().get("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    ((MovieHandler) this.getUIController()).getPastCommands().getMap().size() - 3).getQuery();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(\"this is past command \" + pastCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                CommandParser.parseCommands(pastCommand, ((MovieHandler) this.getUIController()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //executeEntryCommands(num);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                CommandParser.parseCommands(command, ((MovieHandler) this.getUIController()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeMovieCommands() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String now \u003d formatter.format(date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String payload \u003d getPayload();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (payload.equals(\"current\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //  ((MovieHandler) this.getUIController()).getAPIRequester().beginMovieRequest("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //        RetrieveRequest.MoviesRequestType.CURRENT_MOVIES,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //       ((MovieHandler) this.getUIController()).getUserProfile().isAdult()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // )"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showCurrentMovies();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"upcoming\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // ((MovieHandler) this.getUIController()).getAPIRequester().beginMovieRequest("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //       RetrieveRequest.MoviesRequestType.UPCOMING_MOVIES,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //      ((MovieHandler) this.getUIController()).getUserProfile().isAdult()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showUpcomingMovies();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"trending\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showTrendMovies();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"popular\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showPopMovies();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (!(((MovieHandler) this.getUIController()).isViewBack())) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).updatePastCommands(now);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void executeTVCommands() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String now \u003d formatter.format(date);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String payload \u003d getPayload();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (payload.equals(\"current\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showCurrentTV();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // movieHandler.setFeedbackText(DukeException.);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"upcoming\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showUpcomingTV();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"trending\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showTrendTV();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (payload.equals(\"popular\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).showPopTV();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (!(((MovieHandler) this.getUIController()).isViewBack())) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ((MovieHandler) this.getUIController()).updatePastCommands(now);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 1,
      "Riyas97": 123,
      "nwenhui": 21
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/WatchlistCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Period;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.WatchlistHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class WatchlistCommand  extends CommandSuper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public WatchlistCommand (Controller uicontroller) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(COMMANDKEYS.watchlist, CommandStructure.cmdStructure.get(COMMANDKEYS.watchlist), uicontroller);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        switch (this.getSubRootCommand()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case add:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                addToWatchList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case set:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                executeTaskDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                deleteFromWatchlist();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Add items to the watchlist."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void addToWatchList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String movie \u003d ((MovieHandler)this.getUIController()).getAPIRequester().beginAddRequest(getPayload());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            movie \u003d movie.toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String type \u003d this.getFlagMap().get(\"-t\").get(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"d\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    AddDeadlineTask(movie);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"p\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    AddPeriodTask(movie);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch(NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)(this.getUIController())).setFeedbackText(\"Please enter a valid command in the form of: \\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    \"watchlist add \u003cname of movie\u003e -d \u003ctype of task\u003e -s \u003cstart date only for task\u003e -e \u003cend date for task\u003e\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * adds a deadline task to my watchlist"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param movie: name of the movie title to be added to the watchlist"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void AddDeadlineTask(String movie) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String endDate \u003d this.getFlagMap().get(\"-e\").get(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Deadline deadline \u003d new Deadline(movie, \"D\", endDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (!WatchlistHandler.add(deadline)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)this.getUIController()).clearSearchTextField();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)this.getUIController()).setFeedbackText(\"No duplicates allowed\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            WatchlistHandler.print_list((MovieHandler)(this.getUIController()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * adds a period task to my watchlist"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param movie: name of the movie title to be added to the watchlist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void AddPeriodTask(String movie) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String stDate \u003d this.getFlagMap().get(\"-s\").get(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String enDate \u003d this.getFlagMap().get(\"-e\").get(0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Period period \u003d new Period(movie, \"P\", stDate, enDate);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (!WatchlistHandler.add(period)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)this.getUIController()).clearSearchTextField();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)this.getUIController()).setFeedbackText(\"No duplicates allowed\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            WatchlistHandler.print_list((MovieHandler)(this.getUIController()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * set the task on the watchlist as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * root: set"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * sub: watchlist"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * payload: none"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * flag: -d (index of the element in the watchlist to be marked as done)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void executeTaskDone()  {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String index \u003d this.getFlagMap().get(\"-i\").get(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            index \u003d index.strip();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            int i \u003d Integer.valueOf(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            WatchlistHandler.markAsDone(i, (MovieHandler)(this.getUIController()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler)(this.getUIController())).setFeedbackText(\"please enter a valid task number\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * removes an item from the watchlist"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private void deleteFromWatchlist() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String mov \u003d getPayload();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(mov);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (WatchlistHandler.removeFromWatchlist(mov, (MovieHandler)(this.getUIController()))) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler) getUIController()).setFeedbackText(\"Successfully removed the movie from WatchList: \" + mov);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            ((MovieHandler) getUIController()).setFeedbackText(\"Such a movie does not exist in your WatchList. Check your spelling?\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 113,
      "Riyas97": 9
    }
  },
  {
    "path": "src/main/java/entertainment/pro/logic/parsers/commands/YesCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.logic.parsers.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandSuper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class YesCommand extends CommandSuper {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public YesCommand(Controller uicontroller) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(COMMANDKEYS.yes, CommandStructure.cmdStructure.get(COMMANDKEYS.yes), uicontroller);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void executeCommands() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 18
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/CommandPair.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class CommandPair {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private COMMANDKEYS RootCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private COMMANDKEYS SubRootCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private boolean validCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public CommandPair(COMMANDKEYS rootCommand, COMMANDKEYS subRootCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        RootCommand \u003d rootCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        SubRootCommand \u003d subRootCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        validCommand \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public CommandPair(COMMANDKEYS rootCommand, COMMANDKEYS subRootCommand , boolean isValid) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        RootCommand \u003d rootCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        SubRootCommand \u003d subRootCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        validCommand \u003d isValid;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public COMMANDKEYS getRootCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return RootCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public COMMANDKEYS getSubRootCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return SubRootCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public boolean isValidCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return validCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setValidCommand(boolean validCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.validCommand \u003d validCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 2,
      "Pdotdeep": 35
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Deadline extends Tasks  {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //private String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private MyDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param description which is the description of the duke.task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param type        which is the type of the duke.task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param deadline    which is the time by which teh duke.task needs to completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Deadline(String description, String type, String deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        date \u003d new MyDate(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    //public String getDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // return deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public MyDate getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.date \u003d new MyDate(time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String toMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return description + \" (by: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public int compareTo(Deadline o) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (getDate() \u003d\u003d null || o.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return getDate().compareTo(o.getDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 9,
      "Riyas97": 29,
      "Pdotdeep": 9
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/GenreId.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * structure for GenreID object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class GenreId {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String genre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getGenre() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setGenre(String genre) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.genre \u003d genre;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 25
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/MovieInfoObject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Model class to represent a movie/tv show by storing details about it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieInfoObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private int movieType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private long movieID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String movieTitle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Date movieReleaseDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String movieSummary;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String moviePosterPath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String movieFullPosterPath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String movieBackdropPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String movieFullBackdropPath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private double movieRating;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private long[] movieGenreIDs;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private boolean adult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Construct info about a movie/tv show"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param type type of the object whether is it a movie or a tv show."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param ID ID stored in the api."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param title Title of the movie/tv show."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param date Release date of the movie/tv show."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param summary Plot summary of the movie/tv show."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param rating Rating of the movie or tv show."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param genreIDs Array of numbers that contains the genres belonging to the movie/tv show extracted from api."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param posterPath Filepath of the movie/tv show poster."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param backdropPath Filepath of the movie/tv show backdrop poster."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public MovieInfoObject(int type, long ID, String title, Date date, String summary, double rating, long[] genreIDs, String posterPath, String backdropPath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieType \u003d type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieID \u003d ID;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieTitle \u003d title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieReleaseDate \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieSummary \u003d summary;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieRating \u003d rating;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        moviePosterPath \u003d posterPath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieBackdropPath \u003d backdropPath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieGenreIDs \u003d genreIDs;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.adult \u003d adult;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function sets the root path for movie/tv shows."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param rootPath The root path of the poster."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param posterSize String that consist of number of movie/tv posters to be downloaded."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param backdropSize String that consist of number of backdrop posters to be downloaded."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setPosterRootPath(String rootPath, String posterSize, String backdropSize) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieFullPosterPath \u003d String.format(\"%s%s%s\", rootPath, posterSize, moviePosterPath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieFullBackdropPath \u003d String.format(\"%s%s%s\", rootPath, posterSize, movieBackdropPath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function returns the movie/tv show ID as per the api."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return the movie/tv show ID."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public long getID() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieID;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function returns the movie/tv show title."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return the movie/tv show title."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieTitle;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function returns the release date of the movie/tv show."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return the release date of the movie/tv show."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Date getReleaseDate() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieReleaseDate;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function returns the plot summary of the movie/tv show."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return the plot summary of the movie/tv show."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieSummary;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function returns the rating of the movie/tv show."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public double getRating()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieRating;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public long[] getGenreIDs()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieGenreIDs;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getFullPosterPath()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieFullPosterPath;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getFullBackdropPath()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieFullBackdropPath;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public int getMovieType() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieType;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public boolean isAdult() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return adult;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 118,
      "nwenhui": 5
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/MovieModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class MovieModel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private long id;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public MovieModel(long id, String title) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public long getId() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setId(long id) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "Pdotdeep": 27
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/MyDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Date wrapper class for having a date object and string date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class MyDate implements Comparable\u003cMyDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean hasEndDate \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date startdate \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date enddate \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private String startdateStr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private String enddateStr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException when fail to parse a String that is ought to have a special format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public MyDate(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startdateStr \u003d s;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.enddateStr \u003d s;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startdate \u003d TimeParser.convertStringToDate(s);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.enddate \u003d TimeParser.convertStringToDate(s);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.startdate !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            this.startdateStr \u003d TimeParser.convertDateToLine(this.startdate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.enddate !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            this.enddateStr \u003d TimeParser.convertDateToLine(this.enddate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public MyDate(String startDate,  String endDate) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        hasEndDate \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startdateStr \u003d startDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.enddateStr \u003d endDate;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.startdate \u003d TimeParser.convertStringToDate(startDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.enddate \u003d TimeParser.convertStringToDate(endDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.startdate !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.startdateStr \u003d TimeParser.convertDateToLine(this.startdate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.enddate !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            this.enddateStr \u003d TimeParser.convertDateToLine(this.enddate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the start date object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date object of the Task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.startdate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the end date object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date object of the Task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.enddate;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the start date string."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date string of the Task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStartDateStr() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.startdateStr;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the end date string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date string of the Task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEndDateStr() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.enddateStr;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        String returnStr \u003d hasEndDate ? startdateStr + \" to \" + enddateStr : startdateStr;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return returnStr;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public int compareTo(MyDate o) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (getEndDate() \u003d\u003d null || o.getEndDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return getEndDate().compareTo(o.getEndDate());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 8,
      "Riyas97": 2,
      "-": 107
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/PastCommandStructure.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class PastCommandStructure {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    String query;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public PastCommandStructure(String date, String query) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getQuery() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return query;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setQuery(String query) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 27
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/Period.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Period extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    private String end;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    private MyDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public Period(String description, String type, String start, String end) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        date \u003d new MyDate(start, end);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPeriod() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public MyDate getDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" (Period: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 22
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/Playlist.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * structure for Playlist object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Playlist {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String listName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ArrayList\u003cLong\u003e movieId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getListName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return listName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setListName(String listName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.listName \u003d listName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ArrayList\u003cLong\u003e getMovieId() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieId;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMoveId(ArrayList\u003cLong\u003e inputGenre) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieId \u003d inputGenre;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void addMovieId(ArrayList\u003cLong\u003e inputGenre) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieId.addAll(inputGenre);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void removeMovieId(ArrayList\u003cLong\u003e inputGenre) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        movieId.removeAll(inputGenre);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 44
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/SortProfile.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class SortProfile {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String alphaOrder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String latestDatesOrder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String highestRatingOrder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getAlphaOrder() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return alphaOrder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setAlphaOrder(String alphaOrder) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.alphaOrder \u003d alphaOrder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getLatestDatesOrder() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return latestDatesOrder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setLatestDatesOrder(String latestDatesOrder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.latestDatesOrder \u003d latestDatesOrder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getHighestRatingOrder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return highestRatingOrder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setHighestRatingOrder(String highestRatingOrder) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.highestRatingOrder \u003d highestRatingOrder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 33
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/Tasks.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Tasks {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Represents a duke.task in a todolist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * A duke.task can have description, type and whether is it done or not."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tasks(String description, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public String parseDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type.equals(\"E\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d description.split(Pattern.quote(\"(at: \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return tokens[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] tokens \u003d description.split(Pattern.quote(\"(by: \"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return tokens[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "nwenhui": 2,
      "-": 55
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/TimeInterval.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class TimeInterval {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public TimeInterval(Date s, Date e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        startDate \u003d s;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        endDate \u003d e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 20
    }
  },
  {
    "path": "src/main/java/entertainment/pro/model/UserProfile.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " * structure for UserProfile object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class UserProfile {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private String userName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private int userAge;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ArrayList\u003cInteger\u003e genreIdPreference \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ArrayList\u003cInteger\u003e genreIdRestriction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean adult \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean sortByAlphabetical \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean sortByLatestRelease \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isSortByAlphabetical() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return sortByAlphabetical;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setSortByAlphabetical(boolean sortByAlphabetical) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.sortByAlphabetical \u003d sortByAlphabetical;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isSortByLatestRelease() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return sortByLatestRelease;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setSortByLatestRelease(boolean sortByLatestRelease) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.sortByLatestRelease \u003d sortByLatestRelease;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isSortByHighestRAting() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return sortByHighestRAting;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setSortByHighestRAting(boolean sortByHighestRAting) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.sortByHighestRAting \u003d sortByHighestRAting;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean sortByHighestRAting \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public String getUserName(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return userName;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public int getUserAge(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return userAge;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ArrayList\u003cInteger\u003e getGenreIdPreference() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return genreIdPreference;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setUserName(String inputName) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userName \u003d inputName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setUserAge(int inputAge) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userAge \u003d inputAge;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setGenreIdPreference(ArrayList\u003cInteger\u003e inputGenre) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreIdPreference \u003d inputGenre;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addGenreIdPreference(ArrayList\u003cInteger\u003e inputGenre) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreIdPreference.addAll(inputGenre);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removeGenreIdPreference(ArrayList\u003cInteger\u003e inputGenre) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreIdPreference.removeAll(inputGenre);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public boolean isAdult() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return adult;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setAdult(boolean adult) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.adult \u003d adult;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ArrayList\u003cInteger\u003e getGenreIdRestriction() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return genreIdRestriction;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setGenreIdRestriction(ArrayList\u003cInteger\u003e genreIdRestriction) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.genreIdRestriction \u003d genreIdRestriction;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addGenreIdRestriction(ArrayList\u003cInteger\u003e inputGenre) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreIdRestriction.addAll(inputGenre);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removeGenreIdRestriction(ArrayList\u003cInteger\u003e inputGenre) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreIdRestriction.removeAll(inputGenre);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 31,
      "nwenhui": 68,
      "Pdotdeep": 1
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/user/Blacklist.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.BlacklistStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieModel;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class Blacklist {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cString\u003e  blackListKeyWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cMovieModel\u003e  blackListMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cString\u003e  blackListMoviesTitle \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseAll(ArrayList\u003cString\u003e keywords , ArrayList\u003cString\u003e movieTitles , ArrayList\u003cMovieModel\u003e movies) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        initialiseBlackListKey(keywords);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        initialiseBlackListMovieID(movies);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        initialiseBlackListMovieTitles(movieTitles);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseBlackListKey(ArrayList\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListKeyWords \u003d (ArrayList\u003cString\u003e) keywords.clone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseBlackListMovieTitles(ArrayList\u003cString\u003e movieTitles) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListMoviesTitle \u003d (ArrayList\u003cString\u003e) movieTitles.clone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseBlackListMovieID(ArrayList\u003cMovieModel\u003e movies) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel m : movies) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//            System.out.print(m.getSummary());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            blackListMovies.add(m);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Adding keywords to blacklist."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param movie command that was entered by the user in split array form"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void addToBlacklistKeyWord(String movie) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (movie.trim() \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (blackListKeyWords.contains(movie.toLowerCase())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListKeyWords.add(movie.toLowerCase());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void addToBlacklistMoviesID(MovieInfoObject mo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (mo \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel mm: blackListMovies) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (mm.getTitle().toLowerCase().trim().equals(mo.getTitle().toLowerCase().trim())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListMovies.add(new MovieModel(mo.getID() , mo.getTitle().toLowerCase()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void addToBlacklistMovie(String movie) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (movie.trim() \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (blackListMoviesTitle.contains(movie.toLowerCase().trim())) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListMoviesTitle.add(movie.toLowerCase());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void saveBlackList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            BlacklistStorage allbl \u003d new BlacklistStorage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            allbl.updateBlacklistFile(blackListKeyWords , blackListMovies , blackListMoviesTitle);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            //TODO ADD exception handling"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeFromBlacklistKeyWord(String movie)  {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (movie.trim() \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e newKeywords \u003d (ArrayList\u003cString\u003e) blackListKeyWords.clone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String mo : newKeywords) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (mo.toLowerCase().contains(movie.toLowerCase()) \u0026\u0026 blackListKeyWords.contains(mo)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                blackListKeyWords.remove(mo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeFromBlacklistMovieTitle(String movie)  {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (movie.trim() \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean statTitle \u003d removeMovieTitle(movie);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean statObj \u003d removeMovieObj(movie);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return statObj || statTitle;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeFromBlacklistMovies(MovieInfoObject movie)  {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (movie !\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean statTitle \u003d removeMovieTitle(movie.getTitle());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        boolean statObj \u003d removeMovieObjById(movie);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return statObj || statTitle;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeMovieTitle(String movie)  {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (blackListMoviesTitle.contains(movie.toLowerCase())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            blackListMoviesTitle.remove(movie.toLowerCase());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeMovieObj(String movie)  {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel mo : blackListMovies) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (mo.getTitle().toLowerCase() \u003d\u003d movie.toLowerCase()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                blackListMovies.remove(mo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static boolean removeMovieObjById(MovieInfoObject movie)  {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel mo : blackListMovies) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (mo.getId() \u003d\u003d movie.getID()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                blackListMovies.remove(mo);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static String getIndexMovie(int index) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (index \u003e\u003d blackListKeyWords.size()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return blackListKeyWords.get(index - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static String getIndexKeyWord(int index) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        if (index \u003e\u003d blackListKeyWords.size()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return blackListKeyWords.get(index - 1);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void clearBlacklist() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListMoviesTitle.clear();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListMovies.clear();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        blackListKeyWords.clear();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        saveBlackList();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static String printList() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String feedback \u003d \"Blacklisted Keywords: \\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        int i  \u003d 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String e : blackListKeyWords) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d String.valueOf(i);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \") \";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d e;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \"\\t\\t\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (i % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        feedback +\u003d \"\\nBlacklisted Movies: \\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        i  \u003d 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String e : blackListMoviesTitle) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d String.valueOf(i);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \") \";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d e;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \"\\t\\t\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (i % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel e : blackListMovies) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d String.valueOf(i);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \") \";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d e.getTitle();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \"\\t\\t\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (i % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getBlackListMovies() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return (ArrayList\u003cString\u003e) blackListKeyWords.clone();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getBlackListAll() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a: blackListKeyWords) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "             hints.add(a);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a: blackListMoviesTitle) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            hints.add(a);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel a: blackListMovies) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            hints.add(a.getTitle());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cString\u003e getBlackListHints(String keyword) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cString\u003e hints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a: blackListKeyWords) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (a.toLowerCase().startsWith(keyword)) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                hints.add(a);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String a: blackListMoviesTitle) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (a.toLowerCase().startsWith(keyword)) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                hints.add(a);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieModel a: blackListMovies) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (a.getTitle().toLowerCase().startsWith(keyword)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                hints.add(a.getTitle());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return hints;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static String printHint() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        int i  \u003d 1;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String e : blackListKeyWords) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d e;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static ArrayList\u003cMovieInfoObject\u003e filter(ArrayList\u003cMovieInfoObject\u003e mMovies) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mMovies \u003d filterByKeyword(mMovies);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mMovies \u003d filterById(mMovies);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mMovies \u003d filterByTitle(mMovies);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return mMovies;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cMovieInfoObject\u003e filterByKeyword(ArrayList\u003cMovieInfoObject\u003e mMovies) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cMovieInfoObject\u003e filteredMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject o : mMovies) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            boolean isBlacklisted \u003d false;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (String e : blackListKeyWords) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (o.getTitle().toLowerCase().contains(e.toLowerCase())) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    isBlacklisted \u003d true;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (!isBlacklisted) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                filteredMovies.add(o);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return filteredMovies;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cMovieInfoObject\u003e filterById(ArrayList\u003cMovieInfoObject\u003e mMovies) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cMovieInfoObject\u003e filteredMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject o : mMovies) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            boolean isBlacklisted \u003d false;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (MovieModel e : blackListMovies) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (o.getID() \u003d\u003d e.getId()) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    isBlacklisted \u003d true;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (!isBlacklisted) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                filteredMovies.add(o);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return filteredMovies;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static ArrayList\u003cMovieInfoObject\u003e filterByTitle(ArrayList\u003cMovieInfoObject\u003e mMovies) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        ArrayList\u003cMovieInfoObject\u003e filteredMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject o : mMovies) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            boolean isBlacklisted \u003d false;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            for (String e : blackListMoviesTitle) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (o.getTitle().toLowerCase().equals(e.toLowerCase())) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    isBlacklisted \u003d true;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            if (!isBlacklisted) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                filteredMovies.add(o);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return filteredMovies;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "Pdotdeep": 352
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/user/PlaylistCommands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieInfoObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Playlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.EditPlaylistJson;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " * class that contains all methods that deal with individual Playlist object and the list of Playlist objects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class PlaylistCommands {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ArrayList\u003cPlaylist\u003e playlists;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private EditPlaylistJson editPlaylistJson;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public PlaylistCommands(ArrayList\u003cPlaylist\u003e playlists) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editPlaylistJson \u003d new EditPlaylistJson();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.playlists \u003d playlists;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * add new Playlist object into the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void newPlaylist(String listName) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        Playlist playlist \u003d new Playlist();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        playlist.setListName(listName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        playlist.setDescription(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        playlist.setMoveId(new ArrayList\u003c\u003e(10));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editPlaylistJson.addPlaylist(playlist);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * delete particular Playlist object from list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void deletePlaylist(String listName) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editPlaylistJson.removePlaylist(listName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set name/description to particular Playlist object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setToPlaylist(String name, TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-n\") \u0026\u0026 !flagMap.containsKey(\"-d\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setPlaylistName(name, flagMap.get(\"-n\").get(0).trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-d\") \u0026\u0026 !flagMap.containsKey(\"-n\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setPlaylistDescription(name, flagMap.get(\"-d\").get(0).trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-d\") \u0026\u0026 flagMap.containsKey(\"-n\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setAll(name, flagMap.get(\"-n\").get(0), flagMap.get(\"-d\").get(0).trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * change name of particular Playlist object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setPlaylistName(String name, String newName) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.setListName(newName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * change description of particular Playlist object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setPlaylistDescription(String name, String description) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.setDescription(description);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * to allow setting of both name and description at the same time"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setAll(String name, String newName, String description) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.setDescription(description);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.setListName(newName);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * add movies to particular Playlist object"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addToPlaylist(String name, TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap, ArrayList\u003cMovieInfoObject\u003e mMovies) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cLong\u003e userMovies \u003d new ArrayList\u003c\u003e(20);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-m\")){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            int index \u003d Integer.parseInt(log.trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            System.out.println(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userMovies.add((mMovies.get(--index)).getID());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.addMovieId(userMovies);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * remove movies from particular Playlist object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removeFromPlaylist(String name, TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap, ArrayList\u003cMovieInfoObject\u003e mMovies) throws IOException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cLong\u003e userMovies \u003d new ArrayList\u003c\u003e(20);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-m\")){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            int index \u003d Integer.parseInt(log.trim());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userMovies.add((mMovies.get(--index)).getID());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.removeMovieId(userMovies);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearPlaylist(String name) throws IOException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getListName().equals(name)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.remove(log);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                log.setMoveId(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                playlists.add(log);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                editPlaylistJson.editPlaylist(playlists);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "nwenhui": 150
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/user/WatchlistHandler.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Period;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.ui.MovieHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class WatchlistHandler {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private static ArrayList\u003cTasks\u003e watch;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    protected static String space \u003d  \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public WatchlistHandler() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.watch \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * adds a duke.task to the watchlist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param t: the duke.task list to store the movies"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static boolean add(Tasks t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (Tasks i : watch) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (i.getDescription().equals(t.getDescription())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        watch.add(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Collections.sort(watch, (d1, d2) -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (d1 instanceof Deadline \u0026\u0026 d2 instanceof Deadline) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (((Deadline)(d1)).getDate().getEndDate() \u003d\u003d null || ((Deadline)(d2)).getDate().getEndDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                return ((Deadline)(d1)).getDate().getEndDate().compareTo(((Deadline)(d2)).getDate().getEndDate());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            } else if (d1 instanceof Period \u0026\u0026 d2 instanceof Period) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (((Period)(d1)).getDate().getEndDate() \u003d\u003d null || ((Period)(d2)).getDate().getEndDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                return ((Period)(d1)).getDate().getEndDate().compareTo(((Period)(d2)).getDate().getEndDate());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            } else if (d1 instanceof Period \u0026\u0026 d2 instanceof Deadline) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (((Period)(d1)).getDate().getEndDate() \u003d\u003d null || ((Deadline)(d2)).getDate().getEndDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                return ((Period)(d1)).getDate().getEndDate().compareTo(((Deadline)(d2)).getDate().getEndDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            } else if (d1 instanceof Deadline \u0026\u0026 d2 instanceof Period) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (((Deadline)(d1)).getDate().getEndDate() \u003d\u003d null || ((Period)(d2)).getDate().getEndDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                return ((Deadline)(d1)).getDate().getEndDate().compareTo(((Period)(d2)).getDate().getEndDate());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * prints the entire watchlist of the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param handle: class to retrieve the duke.ui controller to display the list on the users view"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static void print_list(MovieHandler handle) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        result +\u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (Tasks i: watch) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            switch (i.getType()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    message \u003d ((Deadline)(i)).toMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"P\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    message \u003d ((Period)(i)).toMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "           result +\u003d space + index + \".[\" + i.getType()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            + \"][\" + i.getStatusIcon() + \"] \" + message + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        handle.setFeedbackText(result);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * marks the required duke.task as done and feedbacks it to the user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param index: index of the movie to mark as done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param handle: moviehandler class to print out the completed duke.task on the users view"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static void markAsDone(int index, MovieHandler handle) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String result \u003d \"I\u0027ve marked this duke.task as Done: \\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            index--;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            Tasks t \u003d watch.get(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            watch.get(index).setDone(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (t.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                result +\u003d space + index + 1 + \".[\" + t.getType()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        + \"][\" + t.getStatusIcon() + \"] \" + ((Deadline) t).toMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                result +\u003d space + index + 1 + \".[\" + t.getType()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        + \"][\" + t.getStatusIcon() + \"] \" + ((Period) t).toMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            handle.setFeedbackText(result);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            handle.setFeedbackText(\"Please enter a valid index that is not greater than the size of the watchlist!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * removes a particular duke.task from the watchlist by its name"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param movie: name of the movie to be removed"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param handle: moviehandler class to print out the completed duke.task on the users view"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @return boolean: returns whether the movie was present in the watchlist or not"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static boolean removeFromWatchlist(String movie, MovieHandler handle) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        movie \u003d movie.toLowerCase();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (int i \u003d 0; i \u003c watch.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (watch.get(i).getDescription().equals(movie)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            watch.remove(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * return a list of possible movie titles to remove from the watchlist"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @return ArrayList\u003cString\u003e: list of movie titles currently in the watchlist"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static ArrayList\u003cString\u003e getTitles() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        ArrayList\u003cString\u003e names \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (Tasks i : watch) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            names.add(i.getDescription());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return names;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 126,
      "Riyas97": 13
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/BlacklistStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.Blacklist;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.UserProfile;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MovieModel;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * class that deals with editing the BlackList duke.storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class BlacklistStorage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private InputStream inputStream;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private TypeReference\u003cUserProfile\u003e typeReference \u003d new TypeReference\u003cUserProfile\u003e() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private enum BlacklistKeys { KEYS , MOVIES , ID};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public BlacklistStorage() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        file \u003d new File(\"EPdata/BlacklistStorage.json\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "//        this.inputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * load blacklisted movies and keywords from JSON duke.storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void load() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            FileReader reader \u003d new FileReader(\"EPdata/BlacklistStorage.json\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            JSONObject jsonObject \u003d (JSONObject) jsonParser.parse(reader);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.println(\"jsonObject\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            System.out.println(jsonObject.get(BlacklistKeys.KEYS.toString()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            Type type \u003d new TypeToken\u003cArrayList\u003cString\u003e\u003e() { }.getType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cString\u003e keyList \u003d gson.fromJson(jsonObject.get(BlacklistKeys.KEYS.toString()).toString()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    , type);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            Type type2 \u003d new TypeToken\u003cArrayList\u003cMovieModel\u003e\u003e() { }.getType();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cMovieModel\u003e movieList \u003d gson.fromJson(jsonObject.get(BlacklistKeys.ID.toString()).toString()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    , type2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            ArrayList\u003cString\u003e movieTitleList \u003d gson.fromJson(jsonObject.get(BlacklistKeys.MOVIES.toString()).toString()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    , type);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            Blacklist.initialiseAll(keyList , movieTitleList , movieList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            //TODO add exception handling"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * update json file with any changes made blacklist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param blackListKeyWords"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param blackListMovies"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param blackListMoviesTitle"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void updateBlacklistFile (ArrayList\u003cString\u003e  blackListKeyWords ,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                                    ArrayList\u003cMovieModel\u003e  blackListMovies ,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                                     ArrayList\u003cString\u003e  blackListMoviesTitle) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        JSONObject allblacklist \u003d new JSONObject();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        allblacklist.put(BlacklistKeys.KEYS , blackListKeyWords);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        allblacklist.put(BlacklistKeys.ID , blackListMovies);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        allblacklist.put(BlacklistKeys.MOVIES , blackListMoviesTitle);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        File oldFile \u003d file;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        File newFile \u003d new File(\"EPdata/tempBlacklist.json\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mapper.writeValue(newFile, allblacklist);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        oldFile.delete();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        newFile.renameTo(new File(file.getAbsolutePath()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        System.out.println(\"Successfully DONE SAVING!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 6,
      "Pdotdeep": 90
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/EditPlaylistJson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Playlist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " * class that deals with editing the Playlist.json file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class EditPlaylistJson {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private InputStream inputStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private TypeReference\u003cArrayList\u003cPlaylist\u003e\u003e typeReference \u003d new TypeReference\u003cArrayList\u003cPlaylist\u003e\u003e() {};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public EditPlaylistJson() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        file \u003d new File(\"EPdata/Playlists.json\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.inputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ArrayList\u003cPlaylist\u003e load() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return mapper.readValue(inputStream, typeReference);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * to create and add new playlist to json file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addPlaylist(Playlist playlist) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File oldFile \u003d file;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File newFile \u003d new File(\"EPdata/tempPlaylists.json\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cPlaylist\u003e playlists \u003d load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        playlists.add(playlist);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mapper.writeValue(newFile, playlists);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        oldFile.delete();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        newFile.renameTo(new File(file.getAbsolutePath()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * to delete a particular playlist from json file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removePlaylist(String playlistName) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File oldFile \u003d file;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File newFile \u003d new File(\"EPdata/tempPlaylists.json\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cPlaylist\u003e playlists \u003d load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cPlaylist\u003e newPlaylists \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Playlist log : playlists) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (!log.getListName().equals(playlistName)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                newPlaylists.add(log);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mapper.writeValue(newFile, newPlaylists);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        oldFile.delete();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        newFile.renameTo(new File(file.getAbsolutePath()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * to edit any particular playlist in json file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void editPlaylist(ArrayList\u003cPlaylist\u003e playlists) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File oldFile \u003d file;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        File newFile \u003d new File(\"EPdata/tempPlaylists.json\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mapper.writeValue(newFile, playlists);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        oldFile.delete();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        newFile.renameTo(new File(file.getAbsolutePath()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 2,
      "nwenhui": 71
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/EditProfileJson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.UserProfile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * class that deals with editing the UserProfile.json file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class EditProfileJson {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private InputStream inputStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TypeReference\u003cUserProfile\u003e typeReference \u003d new TypeReference\u003cUserProfile\u003e() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public EditProfileJson() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        file \u003d new File(\"EPdata/userProfile.json\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.inputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public UserProfile load() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mapper.readValue(inputStream, typeReference);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * update json file with any changes made to user profile"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void updateProfile(UserProfile userProfile) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File oldFile \u003d file;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File newFile \u003d new File(\"EPdata/tempUserProfile.json\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mapper.writeValue(newFile, userProfile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        oldFile.delete();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        newFile.renameTo(new File(file.getAbsolutePath()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 40
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/EditSortProfileJson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.SortProfile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class EditSortProfileJson {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static InputStream inputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TypeReference\u003cSortProfile\u003e typeReference \u003d new TypeReference\u003cSortProfile\u003e() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public EditSortProfileJson() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        file \u003d new File(\"data/userSortDetails.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.inputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void update(SortProfile sortProfile) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File newFile \u003d new File(\"data/userSortDetails.json\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mapper.writeValue(newFile, sortProfile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            inputStream.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public SortProfile load() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return mapper.readValue(inputStream, typeReference);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 35
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/HelpStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.commons.enums.COMMANDKEYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandStructure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "public class HelpStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static TreeMap\u003cCOMMANDKEYS, String\u003e cmdHelp \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static void initialiseAllHelp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (COMMANDKEYS root: CommandStructure.AllRoots) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                cmdHelp.put(root , getHelpInstructions(root.toString()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"FILE NOT FOUND\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public static TreeMap\u003cCOMMANDKEYS, String\u003e getCmdHelp() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return cmdHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    private static String getHelpInstructions(String root) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(\"helpData/\" + root.toLowerCase().trim() + \".txt\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                sb.append(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 3,
      "Pdotdeep": 45
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/PastUserCommands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.xtra.PastCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.PastCommandStructure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class PastUserCommands {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void update(PastCommands pastCommands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        JSONArray jsonArray \u003d new JSONArray();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cPastCommandStructure\u003e arrayList \u003d pastCommands.getMap();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c arrayList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            PastCommandStructure pastCommandStructure \u003d arrayList.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String date \u003d pastCommandStructure.getDate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String query \u003d pastCommandStructure.getQuery();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONObject jsonObject \u003d new JSONObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            jsonObject.put(\"date\", date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            jsonObject.put(\"query\", query);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            jsonArray.add(jsonObject);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //jsonArray.addAll(arrayList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File fileToSaveJson \u003d new File(\"data/pastCommands.json\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        byte[] storeArray \u003d jsonArray.toString().getBytes();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        BufferedOutputStream bos;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            bos \u003d new BufferedOutputStream(new FileOutputStream(fileToSaveJson));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            bos.write(storeArray);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            bos.flush();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            bos.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static ArrayList\u003cPastCommandStructure\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cPastCommandStructure\u003e arrayList \u003d new ArrayList\u003cPastCommandStructure\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            JSONArray jsonArray \u003d (JSONArray) parser.parse(new FileReader(\"data/pastCommands.json\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (jsonArray \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                System.out.println(\"thisss\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return arrayList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int i \u003d 0; i \u003c jsonArray.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    JSONObject jsonObject \u003d ((JSONObject) jsonArray.get(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String date \u003d (String) jsonObject.get(\"date\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String query \u003d (String) jsonObject.get(\"query\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    PastCommandStructure pastCommandStructure \u003d new PastCommandStructure(date, query);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    arrayList.add(pastCommandStructure);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return arrayList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 61
    }
  },
  {
    "path": "src/main/java/entertainment/pro/storage/utils/ProfileCommands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.storage.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.GenreId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.UserProfile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.EditProfileJson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " * class that contains all methods that deal with Profile object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "public class ProfileCommands {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private File genreList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private UserProfile userProfile;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private EditProfileJson editProfileJson;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ProfileCommands(UserProfile userProfile) throws FileNotFoundException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        genreList \u003d new File(\"../../../../EPdata/genreIDlist.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.userProfile \u003d userProfile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        this.editProfileJson \u003d new EditProfileJson();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * change name in profile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setName(String name) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setUserName(name);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * change age in profile"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setAge(String age) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setUserAge(Integer.parseInt(age));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set user preferences"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setPreference(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-g\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setGenrePreference(flagMap);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-a\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setAdultPreference(flagMap.get(\"-a\").get(0));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-g\") \u0026\u0026 flagMap.containsKey(\"-a\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            setAll(flagMap, flagMap.get(\"-a\").get(0));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set user preferences -- for genre"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setGenrePreference(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genrePreferences \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genrePreferences.add(findGenreID(log));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setGenreIdPreference(genrePreferences);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set user preferences -- for adult content restriction"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * yes \u003d allow adult content"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * no \u003d restrict adult content"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setAdultPreference(String value) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (value.equals(\"yes\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userProfile.setAdult(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } else if (value.equals(\"no\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userProfile.setAdult(false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * to allow setting of both genre and adult content restriction preferences at the same time"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setAll(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap, String value) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genrePreferences \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genrePreferences.add(findGenreID(log));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setGenreIdPreference(genrePreferences);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (value.equals(\"yes\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userProfile.setAdult(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } else if (value.equals(\"no\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            userProfile.setAdult(false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     * set user restrictions"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void setRestriction(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genreRestrictions \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genreRestrictions.add(findGenreID(log));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setGenreIdRestriction(genreRestrictions);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addRestriction(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genreRestrictions \u003d new ArrayList\u003c\u003e(50);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genreRestrictions.add(findGenreID(log));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.addGenreIdRestriction(genreRestrictions);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removeRestriction(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genreRestrictions \u003d new ArrayList\u003c\u003e(50);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genreRestrictions.add(findGenreID(log));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.removeGenreIdRestriction(genreRestrictions);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearRestriction(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.removeGenreIdRestriction(userProfile.getGenreIdRestriction());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void addPreference(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genrePreferences \u003d new ArrayList\u003c\u003e(50);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genrePreferences.add(findGenreID(log));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.addGenreIdPreference(genrePreferences);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void removePreference(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cInteger\u003e genrePreferences \u003d new ArrayList\u003c\u003e(50);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (String log : flagMap.get(\"-g\")){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            genrePreferences.add(findGenreID(log));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.removeGenreIdPreference(genrePreferences);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearPreference(TreeMap\u003cString, ArrayList\u003cString\u003e\u003e flagMap) throws IOException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-g\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            clearGenrePreference();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-a\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            clearAdultPreference();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (flagMap.containsKey(\"-g\") \u0026\u0026 flagMap.containsKey(\"-a\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            clearAll();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearGenrePreference() throws IOException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.removeGenreIdPreference(userProfile.getGenreIdPreference());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearAdultPreference() throws IOException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setAdult(true);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearAll() throws IOException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.removeGenreIdPreference(userProfile.getGenreIdPreference());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile.setAdult(true);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        editProfileJson.updateProfile(userProfile);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public Integer findGenreID(String genreName) throws IOException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreName \u003d genreName.trim();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        InputStream inputStream \u003d new FileInputStream(\"EPdata/GenreId.json\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        TypeReference\u003cArrayList\u003cGenreId\u003e\u003e typeReference \u003d new TypeReference\u003cArrayList\u003cGenreId\u003e\u003e() {};"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cGenreId\u003e genreIds \u003d mapper.readValue(inputStream, typeReference);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (GenreId log : genreIds){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getGenre().equalsIgnoreCase(genreName)){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                inputStream.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                return log.getId();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public String findGenreName(int ID) throws IOException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        InputStream inputStream \u003d new FileInputStream(\"EPdata/GenreId.json\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        TypeReference\u003cArrayList\u003cGenreId\u003e\u003e typeReference \u003d new TypeReference\u003cArrayList\u003cGenreId\u003e\u003e() {};"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ArrayList\u003cGenreId\u003e genreIds \u003d mapper.readValue(inputStream, typeReference);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (GenreId log : genreIds){"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (log.getId() \u003d\u003d ID){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                inputStream.close();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                return log.getGenre();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        inputStream.close();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public String convertToLabel(ArrayList\u003cInteger\u003e userList) throws IOException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        String labelText \u003d \"\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        for (Integer log : userList){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            labelText +\u003d findGenreName(log);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            labelText +\u003d \"\\n\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return labelText;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public String getAdultLabel() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (userProfile.isAdult()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            return \"allow\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            return \"restrict\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "nwenhui": 225,
      "Pdotdeep": 1
    }
  },
  {
    "path": "src/main/java/entertainment/pro/ui/Controller.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Abstract class that contains the basic parameters for controllers which is the window and application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public abstract class Controller {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected Stage mWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected Main mMainApplication;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Sets the window for this controller"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setWindow(Stage window)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mWindow \u003d window;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Sets the main application for this controller"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMainApplication(Main mainApplication)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMainApplication \u003d mainApplication;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 25,
      "Pdotdeep": 1
    }
  },
  {
    "path": "src/main/java/entertainment/pro/ui/InfoController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.ProgressBar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class InfoController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieTitleLabel;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieGenresLabel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieReleaseDateLabel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieRatingLabel;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieSummaryLabel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ImageView movieBackdropImageView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private AnchorPane anchorPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private GridPane movieGridPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieCastLabel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieCertLabel;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieTitleLabel() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieTitleLabel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieTitleLabel(Label movieTitleLabel) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieTitleLabel \u003d movieTitleLabel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieGenresLabel() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieGenresLabel;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieGenresLabel(Label movieGenresLabel) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieGenresLabel \u003d movieGenresLabel;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieReleaseDateLabel() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieReleaseDateLabel;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieReleaseDateLabel(Label movieReleaseDateLabel) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieReleaseDateLabel \u003d movieReleaseDateLabel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieRatingLabel() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieRatingLabel;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieRatingLabel(Label movieRatingLabel) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieRatingLabel \u003d movieRatingLabel;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieSummaryLabel() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieSummaryLabel;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieSummaryLabel(Label movieSummaryLabel) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieSummaryLabel \u003d movieSummaryLabel;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ImageView getMovieBackdropImageView() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieBackdropImageView;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieBackdropImageView(ImageView movieBackdropImageView) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieBackdropImageView \u003d movieBackdropImageView;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public AnchorPane getAnchorPane() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return anchorPane;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setAnchorPane(AnchorPane anchorPane) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.anchorPane \u003d anchorPane;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public GridPane getMovieGridPane() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieGridPane;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieGridPane(GridPane movieGridPane) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieGridPane \u003d movieGridPane;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieCastLabel() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieCastLabel;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieCastLabel(Label movieCastLabel) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieCastLabel \u003d movieCastLabel;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieCertLabel() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieCertLabel;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieCertLabel(Label movieCertLabel) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.movieCertLabel \u003d movieCertLabel;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 112
    }
  },
  {
    "path": "src/main/java/entertainment/pro/ui/MovieHandler.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Contexts.CommandContext;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Contexts.ContextHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Contexts.SearchResultContext;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.Execution.CommandStack;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.user.Blacklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.xtra.PastCommands;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.geometry.Orientation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.*;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "import javafx.scene.text.TextFlow;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.movieRequesterAPI.RequestListener;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.movieRequesterAPI.RetrieveRequest;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.logic.parsers.CommandParser;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.storage.utils.PastUserCommands;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This is main page of GUI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MovieHandler extends Controller implements RequestListener {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ScrollPane mMoviesScrollPane;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private VBox vbox0, vBox1, vBox2, vBox3, gneresVBox, mainVBox, searchCommandVBox, generalFeedbackVBox, autoCompleteVBox;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private HBox nameHBox, adultHBox, genresHBox, alphaSortHBox, latestDatesHBox, highestRatingHBox;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label userPreferenceLabel, userNameLabel, userAgeLabel, userAdultLabel1, userAdultLabel2,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            userGenreLabel, sortAlphaOrderLabel, sortLatestDateLabel, sortHighestRatingLabel,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            sortHighestRatingText, autoCompleteLabel, generalFeedbackLabel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Text userPreferenceText, userNameText, userAgeText, generalFeedbackText,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            sortAlphaOrderText, sortLatestDateText, autoCompleteText;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private MenuBar menuBar;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Menu fileMenu, helpMenu;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    TextFlow genreListText;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label mStatusLabel;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ProgressBar mProgressBar;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TextField mSearchTextField;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private AnchorPane movieAnchorPane;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private Label userPlaylistsLabel;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean isViewBack \u003d false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private boolean isViewBackMoreInfo \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isViewBackMoreInfo() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return isViewBackMoreInfo;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setViewBackMoreInfo(boolean viewBackMoreInfo) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        isViewBackMoreInfo \u003d viewBackMoreInfo;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setViewBack(boolean viewBack) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        isViewBack \u003d viewBack;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private AnchorPane anchorPane;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static UserProfile userProfile;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ArrayList\u003cPlaylist\u003e playlists;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private FlowPane mMoviesFlowPane;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static ArrayList\u003cMovieInfoObject\u003e mMovies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private double[] mImagesLoadingProgress;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static RetrieveRequest mMovieRequest;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private int index \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static SortProfile sortProfile;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static PastCommands pastCommands \u003d new PastCommands();;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static String command \u003d \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    Controller controller;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void updatePastCommands(String now) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        PastCommandStructure pastCommandStructure \u003d new PastCommandStructure(now, command);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cPastCommandStructure\u003e arrayList \u003d pastCommands.getMap();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        arrayList.add(pastCommandStructure);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(now + \" \" + command);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        pastCommands.setMap(arrayList);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        PastUserCommands.update(pastCommands);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    class KeyboardClick implements EventHandler\u003cKeyEvent\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        private Controller control;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        KeyboardClick(Controller control) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            this.control \u003d control;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "         * Handles user\u0027s inputs and respond appropriately."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "         *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "         * @param event consist of user\u0027s inputs."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "         */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        public void handle(KeyEvent event) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(\"You Pressing : \" + ((KeyEvent) event).getCode());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if ((event.getCode().equals(KeyCode.ENTER))) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Hello\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                command \u003d mSearchTextField.getText();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                //clickEntered(command, control);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "               try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    CommandParser.parseCommands(command, control);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                clearSearchTextField();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            } else if (event.getCode().equals(KeyCode.TAB)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"Tab presjenksjessed\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (event.getCode().equals(KeyCode.DOWN)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                mMoviesScrollPane.requestFocus();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                mMoviesFlowPane.getChildren().get(0).setStyle(\"-fx-border-color: white\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function is called when JavaFx runtime when view is loaded"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setLabels() throws IOException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        EditProfileJson editProfileJson \u003d new EditProfileJson();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userProfile \u003d editProfileJson.load();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        EditSortProfileJson editSortProfileJson \u003d new EditSortProfileJson();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortProfile \u003d editSortProfileJson.load();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            pastCommands.setMap(PastUserCommands.load());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        EditPlaylistJson editPlaylistJson \u003d new EditPlaylistJson();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        playlists \u003d editPlaylistJson.load();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        ProfileCommands command \u003d new ProfileCommands(userProfile);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userNameLabel.setText(userProfile.getUserName());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userAgeLabel.setText(Integer.toString(userProfile.getUserAge()));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(\"changed age\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        //setting adult label"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (command.getAdultLabel().equals(\"allow\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            userAdultLabel2.setStyle(\"-fx-text-fill: \\\"#48C9B0\\\";\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        if (command.getAdultLabel().equals(\"restrict\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            userAdultLabel2.setStyle(\"-fx-text-fill: \\\"#EC7063\\\";\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        userAdultLabel2.setText(command.getAdultLabel());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        //setting text for preference \u0026 restrictions"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        Text preferences \u003d new Text(command.convertToLabel(userProfile.getGenreIdPreference()));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        preferences.setFill(Paint.valueOf(\"#48C9B0\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        Text restrictions \u003d new Text(command.convertToLabel(userProfile.getGenreIdRestriction()));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        restrictions.setFill(Paint.valueOf(\"#EC7063\"));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreListText.getChildren().clear();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        genreListText.getChildren().addAll(preferences, restrictions);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortAlphaOrderLabel.setText(sortProfile.getAlphaOrder());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortLatestDateLabel.setText(sortProfile.getLatestDatesOrder());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortHighestRatingLabel.setText(sortProfile.getHighestRatingOrder());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        userPlaylistsLabel.setText(Integer.toString(playlists.size()));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void initialize() throws IOException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        setLabels();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest \u003d new RetrieveRequest(this);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        CommandContext.initialiseContext();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        BlacklistStorage bp \u003d new BlacklistStorage();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        bp.load();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        HelpStorage.initialiseAllHelp();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mSearchTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            if (event.getCode() \u003d\u003d KeyCode.TAB) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                System.out.println(\"Tab pressed\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                setAutoCompleteText(ContextHelper.getAllHints(mSearchTextField.getText(), this));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (event.getCode().equals(KeyCode.ALT_GRAPH) || event.getCode().equals(KeyCode.ALT)) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                System.out.println(\"I pressed bit\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                mSearchTextField.clear();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                String cmd \u003d CommandStack.nextCommand();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                if (cmd \u003d\u003d null) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    setAutoCompleteText(\"You dont have any commands in history!\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    mSearchTextField.clear();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                    mSearchTextField.setText(cmd);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "                mSearchTextField.positionCaret(mSearchTextField.getText().length());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.CURRENT_MOVIES, userProfile.isAdult());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String now \u003d formatter.format(date);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        PastCommandStructure pastCommandStructure \u003d new PastCommandStructure(now, \"view movies current\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cPastCommandStructure\u003e arrayList \u003d pastCommands.getMap();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        arrayList.add(pastCommandStructure);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(now + \" \" + command);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        pastCommands.setMap(arrayList);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        PastUserCommands.update(pastCommands);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        generalFeedbackText.setText(\"Welcome to Entertainment Pro. Displaying currently showing movies...\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        //Real time changes to text field"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mSearchTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            System.out.println(\"textfield changed from \" + oldValue + \" to \" + newValue);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(generalFeedbackText.getText());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        //Enter is Pressed"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mSearchTextField.setOnKeyPressed(new KeyboardClick(this));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesScrollPane.setOnKeyPressed(new EventHandler\u003cKeyEvent\u003e() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            public void handle(KeyEvent event) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (event.getCode().equals(KeyCode.UP)) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    double num \u003d (double) mMoviesScrollPane.getVvalue();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    num *\u003d 10;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mSearchTextField.requestFocus();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    mMoviesFlowPane.getChildren().get(index).setStyle(\"-fx-border-color: black\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    index \u003d 0;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else if (event.getCode().equals(KeyCode.RIGHT)) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    int size \u003d mMoviesFlowPane.getChildren().size();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if ((index + 1) !\u003d size) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index).requestFocus();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        index +\u003d 1;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (index !\u003d 0) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            mMoviesFlowPane.getChildren().get(index - 1).setStyle(\"-fx-border-color: black\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index).setStyle(\"-fx-border-color: white\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (index % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            mMoviesScrollPane.setVvalue((double)(index + 1) / size);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else if (event.getCode().equals(KeyCode.LEFT)) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    System.out.println(\"yesssx\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (index !\u003d 0) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index - 1).requestFocus();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        index -\u003d 1;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index + 1).setStyle(\"-fx-border-color: black\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index).setStyle(\"-fx-border-color: white\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        double size \u003d mMoviesFlowPane.getChildren().size();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        if (index % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            mMoviesScrollPane.setVvalue((index + 1) / size);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mSearchTextField.requestFocus();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        mMoviesFlowPane.getChildren().get(index).setStyle(\"-fx-border-color: black\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else if (event.getCode().equals(KeyCode.ENTER)) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    moviePosterClicked(mMovies.get(index));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    index \u003d 0;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function is called when data for the movies/tv shows has been fetched."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestCompleted(ArrayList\u003cMovieInfoObject\u003e moviesInfo) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Build the Movie poster views and add to the flow pane on the main thread"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.print(\"Request received\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        final ArrayList\u003cMovieInfoObject\u003e MoviesFinal \u003d Blacklist.filter(moviesInfo);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovies.clear();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(\"cleared\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (MovieInfoObject mf : MoviesFinal) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //mMovies.add(mf);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(\"yaaz\" + mf.getTitle());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.print(\"Request rsdceceived\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        SearchResultContext.addResults(MoviesFinal);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mMovies \u003d MoviesFinal;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (isViewBackMoreInfo) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Platform.runLater(new Runnable() {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // Update UI here."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            PastCommandStructure pastCommandStructure \u003d getPastCommands().getMap().get("
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    getPastCommands().getMap().size() - 2);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String command \u003d pastCommandStructure.getQuery();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] getStrips \u003d command.split(\" \");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int num \u003d 0;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (getPastCommands().getMap().get(getPastCommands().getMap().size() - 2).getQuery().startsWith(\"view entry\")) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                num \u003d Integer.parseInt(getStrips[2]);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            showMovie(num);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            isViewBackMoreInfo \u003d false;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        PastUserCommands.update(pastCommands);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        isViewBack \u003d false;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            });"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //System.out.println(\"this is size: \" + mMovies.size());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImagesLoadingProgress \u003d new double[mMovies.size()];"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            Platform.runLater(() -\u003e buildMoviesFlowPane(MoviesFinal));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (isViewBack \u003d\u003d true) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                PastUserCommands.update(pastCommands);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                isViewBack \u003d false;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void displayMovies() {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mMovies \u003d SearchResultContext.getMoviesToDisplay();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mImagesLoadingProgress \u003d new double[mMovies.size()];"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        Platform.runLater(() -\u003e buildMoviesFlowPane(SearchResultContext.getMoviesToDisplay()));"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function is called when data for the movies/tv shows failed to fetch due to timed out."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestTimedOut() {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"Request timed out\"));"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function is called when data for the movies/tv shows failed due to internet connection"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void requestFailed() {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Platform.runLater(() -\u003e showDownloadFailureAlert(\"No internet connection\"));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This funcion is called to print a message when the data for movies/tv shows is unavailable due to"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * no internet connection."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param headerText consists of the string to be printed."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void showDownloadFailureAlert(String headerText) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Alert alert \u003d new Alert(Alert.AlertType.ERROR);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setTitle(\"Failed to download\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.setContentText(\"Please ensure you have an active internet connection.\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function initalises the progress bar and extracts movie posters fro every movie."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param movies is a array containing details about every movie/tv show that is being displayed."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void buildMoviesFlowPane(ArrayList\u003cMovieInfoObject\u003e movies) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // Setup progress bar and status label"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress(0.0);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setVisible(true);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mStatusLabel.setText(\"Loading..\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane \u003d new FlowPane(Orientation.HORIZONTAL);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setHgap(4);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setVgap(10);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.setPadding(new Insets(10, 8, 4, 8));"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesFlowPane.prefWrapLengthProperty().bind(mMoviesScrollPane.widthProperty());   // bind to scroll pane width"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c movies.size(); i++) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            AnchorPane posterPane \u003d buildMoviePosterPane(movies.get(i), i + 1);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.getChildren().add(posterPane);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesScrollPane.setContent(mMoviesFlowPane);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMoviesScrollPane.setVvalue(0);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param movie a object that contains information about a movie"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param index a unique number assigned to every movie/tv show that is being displayed."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return anchorpane consisting of the movie poster, name and the unique id."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    private AnchorPane buildMoviePosterPane(MovieInfoObject movie, int index) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            loader.setLocation(getClass().getClassLoader().getResource(\"MoviePoster.fxml\"));"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterView \u003d loader.load();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //posterView.setOnScroll();"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            posterView.setOnMouseClicked((mouseEvent) -\u003e moviePosterClicked(movie));"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            // set the movie info"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            MoviePosterController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Image posterImage \u003d new Image(movie.getFullPosterPath(), true);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                posterImage.progressProperty().addListener((observable, oldValue, newValue) -\u003e updateProgressBar(movie, newValue.doubleValue()));"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                controller.getPosterImageView().setImage(posterImage);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieTitleLabel().setText(movie.getTitle());"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            controller.getMovieNumberLabel().setText(Integer.toString(index));"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return posterView;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //Ui.printLine();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This funcion updates the progress bar as the movie poster is being displayed."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param movie    Object that contains all the information about a particular movie."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param progress contains the progress value."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void updateProgressBar(MovieInfoObject movie, double progress) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        // update the progress for that movie in the array"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int index \u003d mMovies.indexOf(movie);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mImagesLoadingProgress[index] \u003d progress;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        double currentTotalProgress \u003d 0.0;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (double value : mImagesLoadingProgress) {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            currentTotalProgress +\u003d value;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"Current total progress: \" + currentTotalProgress);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mProgressBar.setProgress((currentTotalProgress / mMovies.size()));"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (currentTotalProgress \u003e\u003d mMovies.size()) {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mProgressBar.setVisible(false);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mStatusLabel.setText(\"\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (isViewBack) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                PastCommandStructure pastCommandStructure \u003d getPastCommands().getMap().get("
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        getPastCommands().getMap().size() - 2);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String command \u003d pastCommandStructure.getQuery();"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String[] getStrips \u003d command.split(\" \");"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                int num \u003d 0;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (getPastCommands().getMap().get(getPastCommands().getMap().size() - 2).getQuery().startsWith(\"view entry\")) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    num \u003d Integer.parseInt(getStrips[2]);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                showMovie(num);"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                isViewBack \u003d false;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                getPastCommands().getMap().remove(getPastCommands().getMap().size() - 1);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                PastUserCommands.update(pastCommands);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isViewBack() {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return isViewBack;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void showMovie(int num) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //System.out.println(\"this is \" + mMovies.size());"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        MovieInfoObject movie \u003d mMovies.get(num - 1);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        moviePosterClicked(movie);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(\"this is it 4\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Tis function is called when the user wants to see more information about a movie."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void moviePosterClicked(MovieInfoObject movie) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //mMainApplication.transitToMovieInfoController(movie);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.getChildren().clear();"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane \u003d new FlowPane(Orientation.HORIZONTAL);"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.setHgap(4);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.setVgap(10);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.setPadding(new Insets(10, 8, 4, 8));"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.prefWrapLengthProperty().bind(mMoviesScrollPane.widthProperty());"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            loader.setLocation(getClass().getClassLoader().getResource(\"MoreInfo.fxml\"));"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            AnchorPane posterView \u003d loader.load();"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            InfoController controller \u003d loader.getController();"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieTitleLabel().setText(movie.getTitle());"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieRatingLabel().setText(String.format(\"%.2f\", movie.getRating()));"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (movie.getReleaseDate() !\u003d null) {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Date date \u003d movie.getReleaseDate();"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                calendar.setTime(date);"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String printDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\").format(date);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                controller.getMovieReleaseDateLabel().setText(printDate);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                controller.getMovieReleaseDateLabel().setText(\"N/A\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Image posterImage \u003d new Image(movie.getFullBackdropPath(), true);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                controller.getMovieBackdropImageView().setImage(posterImage);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieSummaryLabel().setText(movie.getSummary());"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieCastLabel().setText(RetrieveRequest.getCastStrings(movie));"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieCertLabel().setText(RetrieveRequest.getCertStrings(movie));"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] genres \u003d RetrieveRequest.getGenreStrings(movie);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (String genre : genres) {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    builder.append(genre);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    System.out.println(genre + \"  \" + genres.length);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    // if not last string in array, append a ,"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if (genres.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        System.out.println(\"no genres\");"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } else if (!genres[genres.length - 1].equals(genre)) {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        builder.append(\", \");"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            controller.getMovieGenresLabel().setText(builder.toString());"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesFlowPane.getChildren().add(posterView);"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesScrollPane.setContent(mMoviesFlowPane);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMoviesScrollPane.setVvalue(0);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * This function clears the searchTextField when called."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public void clearSearchTextField() {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        mSearchTextField.setText(\"\");"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Updates the components in the SortProfile accordingly."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param isAlphaOrder    true when user have entered command to sort results in alphabetical order and otherwise false."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param isLatDatesOrder true when user have entered command to sort results based on release dates and otherwise false."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param isRatingsOrder  true when user have entered command to sort results based on ratings and otherwise false."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setSort(boolean isAlphaOrder, boolean isLatDatesOrder, boolean isRatingsOrder) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String yes \u003d \"Y\";"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String no \u003d \"N\";"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (isAlphaOrder) {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            setSortText(yes, no, no);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (isLatDatesOrder) {"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            setSortText(no, yes, no);"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else if (isRatingsOrder) {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            setSortText(no, no, yes);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Sets the updated values for the sort components."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Sets the text for the sort components in the UI."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Updates the changes into json file by calling update function in the end."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param txt1 String text to be set in sortAlphaOrderLabel."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param txt2 String text to be set in sortLatestDateLabel."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @param txt3 String text to be set in sortHighestRatingLabel."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setSortText(String txt1, String txt2, String txt3) {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortProfile.setAlphaOrder(txt1);"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortAlphaOrderLabel.setText(txt1);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortProfile.setLatestDatesOrder(txt2);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortLatestDateLabel.setText(txt2);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortProfile.setHighestRatingOrder(txt3);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        sortHighestRatingLabel.setText(txt3);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        EditSortProfileJson.update(sortProfile);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void updateTextField(String updateStr) {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mSearchTextField.setText(mSearchTextField.getText() + updateStr);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        mSearchTextField.positionCaret(mSearchTextField.getText().length());"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setFeedbackText(ArrayList\u003cString\u003e txtArr) {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String s : txtArr) {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            output +\u003d s;"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        generalFeedbackText.setText(output);"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * Prints message in UI."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     *"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     * @param txt which is the string text to be printed."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "     */"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setFeedbackText(String txt) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        generalFeedbackText.setText(txt);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setAutoCompleteText(String text) {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        autoCompleteText.setText(text);"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public void setAutoCompleteText(ArrayList\u003cString\u003e txtArr) {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        Set\u003cString\u003e hashSet \u003d new HashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String s : txtArr) {"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            hashSet.add(s);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        for (String s:hashSet) {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            output +\u003d s;"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "            output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        autoCompleteText.setText(output);"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Retrieves the RetrieveRequest class."
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * @return the RetrieveRequest class."
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "    public RetrieveRequest getAPIRequester() {"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "Pdotdeep"
        },
        "content": "        return mMovieRequest;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getCommands() {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public UserProfile getUserProfile() {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return userProfile;"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public SortProfile getSortProfile() {"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return sortProfile;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static PastCommands getPastCommands() {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return pastCommands;"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ArrayList\u003cPlaylist\u003e getPlaylists() {"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return playlists;"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    public ArrayList\u003cMovieInfoObject\u003e getmMovies() {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "        return mMovies;"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "nwenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private void clearSearchButtonClicked() {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mSearchTextField.clear();"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    // Menu item events"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void exitMenuItemClicked() {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void aboutMenuItemClicked() {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of current movies showing on cinemas."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showCurrentMovies() {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.CURRENT_MOVIES, userProfile.isAdult());"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of current tv shows showing."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showCurrentTV() {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.CURRENT_TV, userProfile.isAdult());"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of upcoming movies."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showUpcomingMovies() {"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.UPCOMING_MOVIES, userProfile.isAdult());"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of upcoming tv shows."
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showUpcomingTV() {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest( RetrieveRequest.MoviesRequestType.CURRENT_TV, userProfile.isAdult());"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of popular movies."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showPopMovies() {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest( RetrieveRequest.MoviesRequestType.POPULAR_MOVIES, userProfile.isAdult());"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of popular tv shows."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showPopTV() {"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.POPULAR_TV, userProfile.isAdult());"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of trending movies."
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showTrendMovies() {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.TRENDING_MOVIES, userProfile.isAdult());"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Displays list of trending tv shows."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showTrendTV() {"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.beginMovieRequest(RetrieveRequest.MoviesRequestType.TRENDING_TV, userProfile.isAdult());"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showSearch(String pay, ArrayList\u003cLong\u003egenres) {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        //mMovieRequest.beginMovieSearchRequest(payload, userProfile.isAdult());"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String payload \u003d \"\";"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ArrayList\u003cLong\u003e trial \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.getOfflineSearch(payload, trial, userProfile.isAdult());"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void getAllTheMovie() {"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            mMovieRequest.getAllTheMovie();"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void createFiles() {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieRequest.create();"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 627,
      "Pdotdeep": 111,
      "nwenhui": 67
    }
  },
  {
    "path": "src/main/java/entertainment/pro/ui/MoviePosterController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * Controller to get and set parameters in the MoviePoster View."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class MoviePosterController {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieTitleLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private ImageView moviePosterImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Label movieNumberLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieTitleLabel() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieTitleLabel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMovieTitleLabel(Label mMovieTitleLabel) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mMovieTitleLabel \u003d mMovieTitleLabel;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ImageView getPosterImageView() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return moviePosterImageView;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setPosterImageView(ImageView mPosterImageView) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        mPosterImageView \u003d mPosterImageView;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Label getMovieNumberLabel() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return movieNumberLabel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 39
    }
  },
  {
    "path": "src/main/java/entertainment/pro/xtra/PastCommands.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package entertainment.pro.xtra;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.PastCommandStructure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class PastCommands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    ArrayList\u003cPastCommandStructure\u003e map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ArrayList\u003cPastCommandStructure\u003e getMap() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setMap(ArrayList\u003cPastCommandStructure\u003e map) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.map \u003d map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 18
    }
  },
  {
    "path": "src/main/resources/MainPage.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.ProgressBar?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"485.0\" prefWidth\u003d\"676.0\" stylesheets\u003d\"Main_Styles.css\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\" fx:controller\u003d\"entertainment.pro.ui.MovieHandler\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003cbottom\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cHBox alignment\u003d\"BOTTOM_LEFT\" spacing\u003d\"10.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel fx:id\u003d\"mStatusLabel\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cProgressBar fx:id\u003d\"mProgressBar\" prefWidth\u003d\"200.0\" progress\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cInsets bottom\u003d\"4.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/bottom\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003ccenter\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cAnchorPane fx:id\u003d\"mainAnchorPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"337.0\" prefWidth\u003d\"500.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"mMoviesScrollPane\" hbarPolicy\u003d\"NEVER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"343.0\" prefWidth\u003d\"500.0\" vbarPolicy\u003d\"ALWAYS\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003ccontent\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cAnchorPane fx:id\u003d\"movieAnchorPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"210.0\" prefWidth\u003d\"113.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/content\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/center\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003cleft\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cVBox id\u003d\"mMovieTypeVBox\" fx:id\u003d\"vBox3\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"145.0\" spacing\u003d\"8.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox fx:id\u003d\"vBox1\" minHeight\u003d\"95.0\" prefHeight\u003d\"129.0\" prefWidth\u003d\"181.0\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cchildren\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cLabel fx:id\u003d\"userPreferenceLabel\" styleClass\u003d\"userPreferenceLabel\" text\u003d\"My Preferences\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cfont\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" fx:id\u003d\"x15\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/font\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"nameHBox\" prefHeight\u003d\"8.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText fx:id\u003d\"userNameText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Name: \" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"userNameLabel\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets left\u003d\"3.0\" fx:id\u003d\"x1\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x2\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"ageHBox\" prefHeight\u003d\"13.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText id\u003d\"ageText\" fx:id\u003d\"userAgeText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Age:\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"userAgeLabel\" text\u003d\"Label\" HBox.margin\u003d\"$x1\" /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x17\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"adultHBox\" prefHeight\u003d\"32.0\" prefWidth\u003d\"125.0\" VBox.margin\u003d\"$x2\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"adultText\" fx:id\u003d\"userAdultLabel1\" text\u003d\"Adult Content:\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"adultLabel\" fx:id\u003d\"userAdultLabel2\" text\u003d\"Label\" HBox.margin\u003d\"$x1\" /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                  \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                        \u003cText fx:id\u003d\"userPlaylistsText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Playlists: \" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                        \u003cLabel fx:id\u003d\"userPlaylistsLabel\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cVBox fx:id\u003d\"genresVBox\" prefHeight\u003d\"89.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"userGenreLabel\" text\u003d\"Genres:\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "                \u003cTextFlow fx:id\u003d\"genreListText\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x18\" /\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/children\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox id\u003d\"vBox1\" fx:id\u003d\"vBox2\" minHeight\u003d\"83.0\" prefHeight\u003d\"93.0\" prefWidth\u003d\"181.0\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cchildren\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cLabel id\u003d\"userSortLabel\" font\u003d\"$x15\" styleClass\u003d\"userSortLabel\" text\u003d\"Sort By:\" /\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"alphaSortHBox\" prefHeight\u003d\"8.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText id\u003d\"langText\" fx:id\u003d\"sortAlphaOrderText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Alphabetical Order:\" /\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"userNameLabel\" fx:id\u003d\"sortAlphaOrderLabel\" text\u003d\"N\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets left\u003d\"3.0\" fx:id\u003d\"x19\" /\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x5\" /\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"latestDatesHBox\" prefHeight\u003d\"13.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText id\u003d\"ageText\" fx:id\u003d\"sortLatestDateText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Latest Release Dates:\" /\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"userAgeLabel\" fx:id\u003d\"sortLatestDateLabel\" text\u003d\"N\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets left\u003d\"3.0\" fx:id\u003d\"x6\" /\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x7\" /\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cHBox fx:id\u003d\"highestRatingHBox\" prefHeight\u003d\"32.0\" prefWidth\u003d\"125.0\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"adultText\" fx:id\u003d\"sortHighestRatingText\" text\u003d\"Highest Rating:\" /\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel id\u003d\"adultLabel\" fx:id\u003d\"sortHighestRatingLabel\" text\u003d\"N\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets left\u003d\"3.0\" fx:id\u003d\"x8\" /\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x9\" /\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/children\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/left\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003ctop\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cVBox fx:id\u003d\"mainVBox\" prefHeight\u003d\"173.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\"\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cmenus\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            \u003cMenu fx:id\u003d\"fileMenu\" mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003citems\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" /\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/items\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/Menu\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nwenhui"
        },
        "content": "            \u003cMenu fx:id\u003d\"helpMenu\" mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003citems\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About\" /\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/items\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/Menu\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/menus\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cVBox id\u003d\"vbox0\" fx:id\u003d\"searchCommandVBox\" prefHeight\u003d\"140.0\" prefWidth\u003d\"676.0\"\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cchildren\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cTextField fx:id\u003d\"mSearchTextField\" prefHeight\u003d\"28.0\" prefWidth\u003d\"656.0\" promptText\u003d\"Enter a command here...\"\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/TextField\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cVBox fx:id\u003d\"autoCompleteVBox\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-1.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"666.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"autoCompleteLabel\" font\u003d\"$x15\" text\u003d\"Auto Completion \u0026amp; Spell Checker Feedback:\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets top\u003d\"3.0\" fx:id\u003d\"x11\" /\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText fx:id\u003d\"autoCompleteText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Start typing a command \u0026amp; press \u0027tab\u0027 to explore more...\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x12\" /\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Text\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cpadding\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets fx:id\u003d\"x3\" /\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/padding\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\" fx:id\u003d\"x20\" /\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cVBox fx:id\u003d\"generalFeedbackVBox\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-1.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"666.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cLabel fx:id\u003d\"generalFeedbackLabel\" font\u003d\"$x15\" text\u003d\"Command Feedback:\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets left\u003d\"3.0\" fx:id\u003d\"x4\" /\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cText id\u003d\"text\" fx:id\u003d\"generalFeedbackText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x14\" /\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003c/Text\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\" fx:id\u003d\"x13\" /\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "              \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/children\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/top\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 198,
      "nwenhui": 24
    }
  },
  {
    "path": "src/main/resources/Main_Styles.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "BorderPane, ScrollPane, HBox, VBox, FlowPane {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background: #1d1d1d;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#autoCompleteLabel{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-background-color: #6b6565;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#generalFeedbackLabel{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-background-color: #6b6565;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ProgressBar .track{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ProgressBar .bar{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #292727;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .increment-button, ScrollPane .decrement-button{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .increment-button:hover, ScrollPane .decrement-button:hover{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .thumb {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #7d7d7d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .track{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ScrollPane .scroll-bar:vertical .thumb:hover{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "Label{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#movieIDLabel {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " -fx-font-size: 8pt;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " -fx-font-family: Verdana;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ".subtitle{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-size: 8pt;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-font-family: Tahoma;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "ToolBar{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent transparent #403F3F transparent;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background: #1d1d1d;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: transparent transparent #403F3F transparent;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .label{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .label{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .menu-item, MenuBar .context-menu{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .menu-item:hover, MenuBar .context-menu:hover, MenuBar .menu:hover{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .context-menu{"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: #403F3F;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "MenuBar .context-menu{"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "#text{"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "-fx-padding: 6, 6, 6, 6;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "TextField{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-color: #403F3F;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-background-radius: 2em;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-radius: 2em;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "TextField:focused, TextField:hover{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ".posterPane:hover{"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-scale-x: 1.2;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    -fx-scale-y: 1.2;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 126
    }
  },
  {
    "path": "src/main/resources/MoreInfo.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"-1.0\" prefWidth\u003d\"480.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\" fx:controller\u003d\"entertainment.pro.ui.InfoController\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cLabel fx:id\u003d\"movieTitleLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"0.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"503.0\" text\u003d\"MovieName\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" AnchorPane.topAnchor\u003d\"-1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cImageView fx:id\u003d\"movieBackdropImageView\" fitHeight\u003d\"134.25\" fitWidth\u003d\"179.0\" layoutX\u003d\"27.0\" layoutY\u003d\"41.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cGridPane fx:id\u003d\"movieGridPane\" layoutX\u003d\"13.0\" layoutY\u003d\"168.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"450.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Plot Summary:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"5.0\" fx:id\u003d\"x1\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel id\u003d\"movieCastLabel\" fx:id\u003d\"movieSummaryLabel\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"300.0\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.margin\u003d\"$x1\" GridPane.rowIndex\u003d\"0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel fx:id\u003d\"movieGenresLabel\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"300.0\" text\u003d\"Label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" fx:id\u003d\"x2\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Genre(s):\" GridPane.columnIndex\u003d\"0\" GridPane.margin\u003d\"$x2\" GridPane.rowIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Cast \u0026amp; Crew:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" fx:id\u003d\"x3\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel id\u003d\"movieSummaryLabel\" fx:id\u003d\"movieCastLabel\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"2\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" fx:id\u003d\"x4\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"244.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"138.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"424.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"352.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"-1.0\" vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"10.0\" prefHeight\u003d\"-1.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cRowConstraints maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"-1.0\" vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cHBox layoutX\u003d\"215.0\" layoutY\u003d\"41.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"288.0\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Rating:\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel fx:id\u003d\"movieRatingLabel\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" fx:id\u003d\"x5\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cHBox layoutX\u003d\"215.0\" layoutY\u003d\"78.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"288.0\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Release Date:\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel id\u003d\"movieRatingLabel\" fx:id\u003d\"movieReleaseDateLabel\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" fx:id\u003d\"x5\" /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cHBox layoutX\u003d\"215.0\" layoutY\u003d\"121.0\" maxHeight\u003d\"-1.0\" maxWidth\u003d\"-1.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"288.0\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel text\u003d\"Certificate:\" /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel id\u003d\"movieRatingLabel\" fx:id\u003d\"movieCertLabel\" maxHeight\u003d\"-1.0\" maxWidth\u003d\"-1.0\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.margin\u003d\"$x5\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 82
    }
  },
  {
    "path": "src/main/resources/MoviePoster.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"210.0\" prefWidth\u003d\"113.0\" styleClass\u003d\"posterPane\" stylesheets\u003d\"Main_Styles.css\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/2.2\" fx:controller\u003d\"entertainment.pro.ui.MoviePosterController\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003cVBox alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"210.0\" prefWidth\u003d\"113.0\" spacing\u003d\"4.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cImageView fx:id\u003d\"moviePosterImageView\" fitHeight\u003d\"161.0\" fitWidth\u003d\"123.17469879518072\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel fx:id\u003d\"movieTitleLabel\" alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"subtitle\" text\u003d\"Label\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003cLabel fx:id\u003d\"movieNumberLabel\" styleClass\u003d\"subtitle\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            \u003cInsets top\u003d\"-2.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "          \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 27
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"go gym and jog /by 17/09/2019 1800(by: 17th of September 2019, 06:00 PM)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            (new Deadline(\"go gym and jog /by 17/09/2019 1800\", \"D\", \"17/09/2019 1800\")).toMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 2,
      "-": 11
    }
  },
  {
    "path": "src/test/java/duke/task/DoAfterTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DoAfterTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"eat later(after: sunday)\", (new DoAfter(\"eat later\", \"A\", \"sunday\")).toMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"eat later(after: 20/08/2018)\", (new DoAfter(\"eat later\", \"A\", \"20/08/2018\")).toMessage());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"eat later(after: I do my homework)\", (new DoAfter(\"eat later\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"A\", \"I do my homework\")).toMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 15
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"eat later /at 20/09/2019 1800(at: 20th of September 2019, \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"06:00 PM to 21st of September 2019, 06:00 PM)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            (new Event(\"eat later /at 20/09/2019 1800\", \"T\", \"20/09/2019 1800\", \"21/09/2019 1800\")).toMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 13
    }
  },
  {
    "path": "src/test/java/duke/task/FixedTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class FixedTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"borrow book (duration: 2 hours)\", new FixedDuration(\"borrow book\", \"F\", \"2 hours\").toMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 2,
      "-": 9
    }
  },
  {
    "path": "src/test/java/duke/task/PeriodTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.Period;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class PeriodTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        assertEquals(\"watch anime (Period: 11th September 2019 to 20th September 2019)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            new Period(\"watch anime\", \"P\", \"11th September 2019\", \"20th September 2019\").toMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 4,
      "-": 9
    }
  },
  {
    "path": "src/test/java/duke/task/RecurringTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class RecurringTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"borrow book (frequency: weekly)\", new Recurring(\"borrow book\", \"T\", \"weekly\").toMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 10
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[T][✘] eat later\", (new ToDo(\"eat later\", \"T\")).toMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 10
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        public void verifyCheckValue() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Parser.handleCommand(\"bye\", \"bye\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Parser.handleCommand(\"fixx\", \"fixx 2\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Parser.handleCommand(\"event\", \"event add /at tenta\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 13
    }
  },
  {
    "path": "src/test/java/parser/TimeParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import duke.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class TimeParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDateConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d TimeParser.convertDateToLine(TimeParser.convertStringToDate(\"17/09/2019\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String str2 \u003d TimeParser.convertDateToLine(TimeParser.convertStringToDate(\"17/09/2019 1800\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String str3 \u003d TimeParser.convertDateToLine(TimeParser.convertStringToDate(\"17-SEP-2019 1800\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"17th of September 2019, 12:00 AM\", str);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"17th of September 2019, 06:00 PM\", str2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"17th of September 2019, 06:00 PM\", str3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 18
    }
  },
  {
    "path": "src/test/java/wrapper/MyDatetest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wrapper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import entertainment.pro.model.MyDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class MyDatetest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        MyDate temp \u003d new MyDate(\"12/12/2019 12:30\", \"14/12/2019 19:30\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"12th of December 2019, 12:30 PM\", temp.getStartDateStr());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"14th of December 2019, 07:30 PM\", temp.getEndDateStr());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 1,
      "-": 18
    }
  }
]
