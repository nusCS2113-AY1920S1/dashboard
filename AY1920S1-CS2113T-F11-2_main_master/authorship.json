[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.8.4\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "group \u0027seedu.dolla\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    mainClassName \u003d \"dolla.Dolla\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testCompile(\"org.junit.jupiter:junit-jupiter-api:5.4.2\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    archiveBaseName \u003d \"dolla\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "jacoco {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    toolVersion \u003d \"0.8.4\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        xml.enabled true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        csv.enabled true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    jacocoReportPath \u0027build/reports/jacoco/test/jacocoTestReport.xml\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 4,
      "Weng-Kexin": 21,
      "yetong1895": 7,
      "-": 30
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "rootProject.name \u003d \u0027dolla\u0027"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/Dolla.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageRead;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Dolla is a chat-bot styled expense manager."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @author  Aik Peng"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @since   2019-07-26"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Dolla implements ModeStringList, ParserStringList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private DollaData dollaData \u003d new DollaData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Dolla() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageRead.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void verifyIsExit(String string) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (string.equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void run() throws DollaException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Reminder reminder \u003d new Reminder(MODE_DEBT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        reminder.showReminder(dollaData);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Scanner input \u003d new Scanner(System.in); // TODO: Add to Ui or MainParser instead?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String inputLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            verifyIsExit(inputLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String mode \u003d dollaData.getMode();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Command c \u003d MainParser.handleInput(mode, inputLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            c.execute(dollaData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void main(String[] args) throws DollaException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        new Dolla().run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 23,
      "Weng-Kexin": 23,
      "tatayu": 1,
      "yetong1895": 1,
      "-": 2
    }
  },
  {
    "path": "src/main/java/dolla/ModeStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public interface ModeStringList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Modes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_DOLLA \u003d \"dolla\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_SHORTCUT \u003d \"shortcut\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 6,
      "Weng-Kexin": 5
    }
  },
  {
    "path": "src/main/java/dolla/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Class handles Reminder-related methods."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Reminder implements ModeStringList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected LocalDate today;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new Reminder."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode the mode"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Reminder(String mode) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Show reminder."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData the dolla data"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void showReminder(DollaData dollaData) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        printReminder(today, recordList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print reminder."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param today   Today\u0027s date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList The list of logs of debt."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void printReminder(LocalDate today, RecordList recordList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tREMINDER!!!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate temp \u003d recordList.get().get(i).getDate(); //get the time for that log"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate check \u003d today.plusDays(2); //remind the user 2 days before"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (check.compareTo(temp) \u003e\u003d 0 \u0026\u0026 temp.compareTo(today) \u003e 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Ui.printNoReminderMsg();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 3,
      "tatayu": 54,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/Time.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns a LocalDateTime variable converted from the specified String timeStr that"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * was in the format \u0027dd/MM/yyyy\u0027."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param timeStr String to be converted into DateTimeFormatter type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return        A LocalDateTime variable that the computer can understand as time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static LocalDate readDate(String timeStr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT, Locale.ENGLISH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return LocalDate.parse(timeStr, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Converts the date from LocalDate to string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date in LocalDate format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return     dateStr in \"dd/MM/yyyy\" format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT, Locale.ENGLISH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return date.format(formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 13,
      "Weng-Kexin": 11,
      "tatayu": 7
    }
  },
  {
    "path": "src/main/java/dolla/command/ActionCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Undo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ActionCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the mode and command in this class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode to be set in this class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param command the command to be set in this class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ActionCommand(String mode, String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case UNDO:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ArrayList\u003cRecord\u003e recordList \u003d Undo.processUndoState(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (recordList !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.addToStateList(mode, dollaData.getRecordList(mode));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dollaData.setRecordList(recordList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                ActionUi.printActionMessage(UNDO);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case REDO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            recordList \u003d Redo.processRedoState(mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (recordList !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.addToStateList(mode, dollaData.getRecordList(mode));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dollaData.setRecordList(recordList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                ActionUi.printActionMessage(REDO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return command + \" in \" + mode;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "yetong1895": 56
    }
  },
  {
    "path": "src/main/java/dolla/command/AddBillCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Bill;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class AddBillCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private int people;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private ArrayList\u003cString\u003e nameList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates AddBillCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type type of debt (is bill in this case)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people number of people."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount the total amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the namelist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public AddBillCommand(String type, int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.people \u003d people;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.nameList \u003d nameList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Bill newBill \u003d new Bill(type, people, amount, nameList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        dollaData.addBillToRecordList(newBill);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtUi.printAverageAmount(people, amount, nameList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "tatayu": 40
    }
  },
  {
    "path": "src/main/java/dolla/command/AddDebtsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DebtList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class AddDebtsCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String mode \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates AddDebtsCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type type of debt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param name name of debtor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount amount of debt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param description description of debt."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date date of debt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public AddDebtsCommand(String type, String name, double amount,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                           String description, LocalDate date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        index \u003d dollaData.getRecordListObj(mode).size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        DebtList debtList \u003d (DebtList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        UndoStateList.addState(new DebtState(debtList.get()), mode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Debt newDebt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateDebtIndex \u003d debtList.findExistingRecordIndex(dollaData, newDebt, mode);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateDebtIndex)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            dollaData.addToRecordList(mode, newDebt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.echoAddRecord(newDebt);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record existingDebt \u003d debtList.getFromList(duplicateDebtIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.existingRecordPrinter(existingDebt, mode);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return type + \" \" + name + \" \" + amount + \" \" + description + \" \" + date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 8,
      "tatayu": 29,
      "Weng-Kexin": 14,
      "yetong1895": 11
    }
  },
  {
    "path": "src/main/java/dolla/command/AddEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.EntryState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.EntryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * AddEntryCommand is used to create a new Entry entity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class AddEntryCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String mode \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of AddEntryCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type Income or Expense."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount Amount of money that is earned/spent."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description Details pertaining to the entry."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date Date of income/expense."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public AddEntryCommand(String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        EntryList entryList \u003d (EntryList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        UndoStateList.addState(new EntryState(entryList.get()), mode);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateEntryIndex \u003d entryList.findExistingRecordIndex(dollaData, newEntry, mode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateEntryIndex)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            dollaData.addToRecordList(mode, newEntry);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.echoAddRecord(newEntry);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record existingEntry \u003d entryList.getFromList(duplicateEntryIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.existingRecordPrinter(existingEntry, mode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String command \u003d \"AddEntryCommand\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //return (command + \"{ type: \" + type + \", amount: \" + amount + \", description: \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + description + \", date: \" + Time.dateToString(date) + \", prevPosition: \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + prevPosition) + \" }\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (command + \"{ \" + type + \", \" + amount + \", \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + description + \", \" + Time.dateToString(date)) + \"}\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 43,
      "Weng-Kexin": 12,
      "tatayu": 2,
      "yetong1895": 8
    }
  },
  {
    "path": "src/main/java/dolla/command/AddLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.LimitState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Limit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.LimitList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.SPACE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class AddLimitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String mode \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates a new AddLimitCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type type of limit"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param amount amount of limit"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration duration of limit"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public AddLimitCommand(String type, double amount, String duration) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit newLimit \u003d new Limit(type, amount, duration);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        UndoStateList.addState(new LimitState(limitList.get()), mode);///////////////////////////////////////"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateLimitIndex \u003d limitList.findExistingRecordIndex(dollaData, newLimit, mode);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateLimitIndex)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            dollaData.addToRecordList(mode, newLimit);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.echoAddRecord(newLimit);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record existingLimit \u003d limitList.getFromList(duplicateLimitIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.existingLimitPrinter(existingLimit);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return type + SPACE + amount + SPACE + duration;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 4,
      "Weng-Kexin": 48,
      "yetong1895": 3
    }
  },
  {
    "path": "src/main/java/dolla/command/AddShortcutCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.ShortcutState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Shortcut;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.ShortcutList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class AddShortcutCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public AddShortcutCommand(String index, String mode) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e entryList \u003d dollaData.getRecordList(MODE_ENTRY);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e shortcutList \u003d dollaData.getRecordList(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ShortcutList shortcutListObj \u003d (ShortcutList) dollaData.getRecordListObj(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            UndoStateList.addState(new ShortcutState(shortcutListObj.get()), mode);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Record record \u003d entryList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Record shortcut \u003d new Shortcut(record.getType(),record.getAmount(),record.getDescription());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            dollaData.addToRecordList(MODE_SHORTCUT, shortcut);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.echoAddRecord(shortcut);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Ui.printNumberOfRecords(shortcutList.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Ui.printNumberOfRecords(entryList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String command \u003d \"create shortcut \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return command + index + \" in mode \" + mode;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 3,
      "yetong1895": 50
    }
  },
  {
    "path": "src/main/java/dolla/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Command is an abstract class which all types of command will inherit from."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public abstract class Command implements ModeStringList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * This method is called to execute the titular command after every user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @throws DollaException handle exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public abstract void execute(DollaData dollaData) throws DollaException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a string containing the data stored in the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return string containing data stored in command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract String getCommandInfo();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns an integer variable from the specified string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns 0 if the specified string is not of a number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param str String (of number) to be converted into integer type."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Integer type of the specified string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected int stringToInt(String str) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int newInt \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            newInt \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return newInt;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected Boolean recordDoesNotExist(int recordIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return (recordIndex \u003d\u003d - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true is the given index is within the recordList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordList The recordList containing the record to be modified."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if index is within the specified recordList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected boolean isIndexInList(RecordList recordList, String currMode) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (index \u003e\u003d recordList.size()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printNoRecordAssocError(index, currMode);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 46,
      "Weng-Kexin": 12,
      "yetong1895": 3
    }
  },
  {
    "path": "src/main/java/dolla/command/ErrorCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * A command that is generated if a proper command could not be produced (as a result of invalid inputs)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String errorCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return errorCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 16,
      "Weng-Kexin": 1,
      "yetong1895": 2
    }
  },
  {
    "path": "src/main/java/dolla/command/ExecuteShortcutCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * Execute a shortcut command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ExecuteShortcutCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ExecuteShortcutCommand(String index, String mode) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) throws DollaException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e entryList \u003d dollaData.getRecordList(MODE_ENTRY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e shortcutList \u003d dollaData.getRecordList(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Record shortcut \u003d entryList.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.printDateRequest();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    String inputDate \u003d input.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    LocalDate newDate \u003d Time.readDate(inputDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    Command c \u003d new AddEntryCommand(shortcut.getType(), shortcut.getAmount(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                                    shortcut.getDescription(), newDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    c.execute(dollaData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    Ui.printDateFormatError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.printNumberOfRecords(shortcutList.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String command \u003d \"execute shortcut \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return command + index + \" in mode \" + mode;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "Weng-Kexin": 1,
      "yetong1895": 56
    }
  },
  {
    "path": "src/main/java/dolla/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Command to exit the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Ui.printExitMsg();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \"Exit\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/RemoveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.EntryState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.LimitState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.ShortcutState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.RemoveUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * RemoveCommand is a Command used to remove a Task from the TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String logNumStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String mode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public RemoveCommand(String mode, String logNumStr) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.logNumStr \u003d logNumStr;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * THis method will remove the record with respect to the user input position and the mode."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param dollaData dollaData"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        int recordNumInt;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                UndoStateList.addState(new EntryState(recordList), mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                UndoStateList.addState(new DebtState(recordList), mode);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                UndoStateList.addState(new LimitState(recordList), mode);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                UndoStateList.addState(new ShortcutState(recordList), mode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            recordNumInt \u003d stringToInt(logNumStr) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Record record \u003d recordList.get(recordNumInt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.echoRemove(record.getRecordDetail(), mode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            dollaData.removeFromRecordList(mode, recordNumInt);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printNumberOfRecords(recordList.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return mode;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 4,
      "Weng-Kexin": 1,
      "yetong1895": 57
    }
  },
  {
    "path": "src/main/java/dolla/command/RemoveNameCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Bill;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class RemoveNameCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected int billNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public RemoveNameCommand(int billNum, String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.billNum \u003d billNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int check \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        recordList \u003d dollaData.getBillRecordList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int people \u003d recordList.get().get(billNum - 1).getPeople();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        double amount \u003d recordList.get().get(billNum - 1).getBillAmount();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        ArrayList\u003cString\u003e nameList \u003d recordList.get().get(billNum - 1).getNameList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c nameList.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (nameList.get(i).equals(name)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameList.remove(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                check +\u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (nameList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            dollaData.removeFromRecordList(\"bill\", billNum - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printFinishMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (check \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printNameNotFound();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printRemoveNameMessage(name, nameList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList.removeFromList(billNum - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Bill newBill \u003d new Bill(\"bill\", people, amount, nameList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList.add(newBill);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 3,
      "tatayu": 49
    }
  },
  {
    "path": "src/main/java/dolla/command/SearchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.SearchUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * SearchCommand is a command that runs when"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * the user wants to execute a search command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String component;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String searchContent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DURATION \u003d \"duration\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new SearchCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode mode Dolla is in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param component the component to be searched on (description/name/date)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the content that the user wants to search for"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public SearchCommand(String mode, String component, String searchContent) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.searchContent \u003d searchContent;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.component \u003d component;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Executes the search command according to the mode and the command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData the dolla data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @throws Exception handle exception"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) throws DollaException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (listIsEmpty) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                if (component.equals(COMPONENT_DESCRIPTION)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    SearchUi.printSearchDesc(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                } else if (component.equals(COMPONENT_DATE)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    SearchUi.printSearchDate(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                if (component.equals(COMPONENT_DESCRIPTION)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    SearchUi.printSearchDesc(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                } else if (component.equals(COMPONENT_NAME)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    SearchUi.printSearchName(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                } else if (component.equals(COMPONENT_DATE)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    SearchUi.printSearchDate(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT) \u0026\u0026 component.equals(COMPONENT_DURATION)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDuration(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT) \u0026\u0026 component.equals(COMPONENT_DESCRIPTION)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDesc(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printInvalidSearchFormat();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return component + \" \" + searchContent;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 3,
      "tatayu": 94,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/ShowBillListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * This class shows the bill list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class ShowBillListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public ShowBillListCommand(String mode) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) throws DollaException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        recordList \u003d dollaData.getBillRecordList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listIsEmpty) { // TODO: Place this in proper place"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printBillList(recordList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "tatayu": 37,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/ShowListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Display all the tasks stored in the relevant RecordList depending on mode."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ShowListCommand(String mode) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints out the logs from the specified RecordList in dollaData."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param dollaData Data to be manipulated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RecordList recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (listIsEmpty) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns the mode that Dolla is on, to show the respective records."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return mode Dolla is on"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return mode;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 32,
      "Weng-Kexin": 9,
      "yetong1895": 9
    }
  },
  {
    "path": "src/main/java/dolla/command/ShowRemainingLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static java.time.LocalDate.now;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class ShowRemainingLimitCommand extends Command implements ParserStringList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String limitType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String entryType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private RecordList entryList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private RecordList limitList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double limits;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double entries;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private int one \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private LocalDate dateToday \u003d now();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private LocalDate mondayDate \u003d dateToday;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private LocalDate sundayDate \u003d dateToday;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private YearMonth month \u003d YearMonth.from(dateToday);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private LocalDate startOfMonth \u003d month.atDay(one);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private LocalDate endOfMonth \u003d month.atEndOfMonth();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates a new ShowRemainingLimitCommand."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the limit to show."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type     Type of limit to show."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public ShowRemainingLimitCommand(String duration, String type) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        findEntryAndLimitType(type);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        getDateRanges();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList \u003d dollaData.getRecordListObj(MODE_ENTRY);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitList \u003d dollaData.getRecordListObj(MODE_LIMIT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            findLimit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            findTotalEntries();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (limits \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                throw new DollaException(DollaException.noExistingLimit(limitType));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                processRemainingLimit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (DollaException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            getCommandInfo();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void processRemainingLimit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (limitType.equals(LIMIT_TYPE_B)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            processRemainingBudget();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            processRemainingSaving();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void processRemainingSaving() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double remainingSaving \u003d limits - entries;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (remainingSaving \u003d\u003d limits) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.noSavingsPrinter();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (remainingSaving \u003e 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.remainingSavingPrinter(limits, remainingSaving, duration);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (remainingSaving \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.reachedSavingPrinter(duration);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            remainingSaving \u003d Math.abs(remainingSaving);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.exceededSavingPrinter(duration, remainingSaving);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void processRemainingBudget() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double remainingBudget \u003d limits - entries;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (remainingBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.reachedBudgetPrinter(duration);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (remainingBudget \u003c 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            remainingBudget \u003d Math.abs(remainingBudget);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.exceededBudgetPrinter(remainingBudget, duration);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.remainingBudgetPrinter(remainingBudget, limits, entries, duration);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void findLimit() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c limitList.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record limit \u003d limitList.getFromList(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String limitType \u003d limit.getType();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String limitDuration \u003d limit.getDuration();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (limitIsFound(limitType, limitDuration)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                limits \u003d limit.getAmount();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean limitIsFound(String type, String limitDuration) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return (type.equals(limitType) \u0026\u0026 limitDuration.equals(duration));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void findTotalEntries() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entries \u003d getDailyEntries();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entries \u003d getWeeklyEntries();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entries \u003d getMonthlyEntries();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double getDailyEntries() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double entries \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record entry \u003d entryList.getFromList(i);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String type \u003d entry.getType();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LocalDate date \u003d entry.getDate();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (type.equals(entryType) \u0026\u0026 date.isEqual(dateToday)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                entries +\u003d entry.getAmount();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return entries;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double getWeeklyEntries() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double entries \u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record entry \u003d entryList.getFromList(i);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String type \u003d entry.getType();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LocalDate date \u003d entry.getDate();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (type.equals(entryType) \u0026\u0026 withinRange(date, mondayDate, sundayDate)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                entries +\u003d entry.getAmount();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return entries;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double getMonthlyEntries() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double entries \u003d 0;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Record entry \u003d entryList.getFromList(i);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String type \u003d entry.getType();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LocalDate date \u003d entry.getDate();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (type.equals(entryType) \u0026\u0026 withinRange(date, startOfMonth, endOfMonth)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                entries +\u003d entry.getAmount();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return entries;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean withinRange(LocalDate currDate, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return (currDate.isAfter(startDate) \u0026\u0026 currDate.isBefore(endDate));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void getDateRanges() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        while (mondayDate.getDayOfWeek() !\u003d DayOfWeek.MONDAY) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            mondayDate \u003d mondayDate.minusDays(one);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        while (sundayDate.getDayOfWeek() !\u003d DayOfWeek.SUNDAY) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            sundayDate \u003d sundayDate.plusDays(one);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        mondayDate \u003d mondayDate.minusDays(one);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        sundayDate \u003d sundayDate.plusDays(one);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        startOfMonth \u003d startOfMonth.minusDays(one);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        endOfMonth \u003d endOfMonth.plusDays(one);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void findEntryAndLimitType(String type) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (LIMIT_TYPE_B.equals(type)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitType \u003d LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryType \u003d ENTRY_TYPE_E;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitType \u003d LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryType \u003d ENTRY_TYPE_I;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return duration + SPACE + limitType;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 197
    }
  },
  {
    "path": "src/main/java/dolla/command/SortCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortAmount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String TYPE_AMOUNT \u003d \"amount\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String TYPE_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String TYPE_DESC \u003d \"description\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String TYPE_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortCommand(String mode, String type) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        recordList \u003d dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            list \u003d recordList.getCloneList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            list.get(0); //test if list is empty"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            switch (mode) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_ENTRY:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_AMOUNT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_DATE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDate(list);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_DESC:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDescription(list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_DEBT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_AMOUNT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_DATE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDate(list);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_DESC:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDescription(list);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case TYPE_NAME:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortName(list);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (type.equals(TYPE_AMOUNT)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else if (type.equals(TYPE_DESC)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDescription(list);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String command \u003d \"sort \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return command + type + \" in \" + mode;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 4,
      "yetong1895": 90
    }
  },
  {
    "path": "src/main/java/dolla/command/SwitchModeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class SwitchModeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String newMode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public SwitchModeCommand(String newMode) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.newMode \u003d newMode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(newMode);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printModeUpdated(dollaData.getMode());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return newMode;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 21,
      "Weng-Kexin": 2
    }
  },
  {
    "path": "src/main/java/dolla/command/action/Redo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.EntryState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.RedoStateList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.State;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.LimitState;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.ShortcutState;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Redo implements ModeStringList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static State state;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the state from the RedoStateList containing all the states."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void receiveRedoState(String mode) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        state \u003d RedoStateList.getState(mode);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will add the current state to the RedoStateList containing all the states."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param currStatelist the ArrayList containing the current state."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addToStateList(String mode, ArrayList\u003cRecord\u003e currStatelist) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RedoStateList.addState(new EntryState(currStatelist), mode);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RedoStateList.addState(new DebtState(currStatelist), mode);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RedoStateList.addState(new LimitState(currStatelist), mode);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RedoStateList.addState(new ShortcutState(currStatelist), mode);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the state obtained from a state with respect to the mode."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return list the ArrayList containing the redo state."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e processRedoState(String mode) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        receiveRedoState(mode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (state !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getEntryState();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getDebtState();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getLimitState();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getShortcutState();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the clear method in RedoStateList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void clearRedoState(String mode) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.clear(mode);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 74
    }
  },
  {
    "path": "src/main/java/dolla/command/action/Undo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.EntryState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.State;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.LimitState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.ShortcutState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Undo implements ModeStringList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static State state;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the state from the UndoStateList containing all the states."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void receiveUndoState(String mode) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        state \u003d UndoStateList.getState(mode);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will add the current state to the UndoStateList containing all the states."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param currStatelist the ArrayList containing the current state."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addToStateList(String mode, ArrayList\u003cRecord\u003e currStatelist) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            UndoStateList.addState(new EntryState(currStatelist), mode);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            UndoStateList.addState(new DebtState(currStatelist), mode);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            UndoStateList.addState(new LimitState(currStatelist), mode);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            UndoStateList.addState(new ShortcutState(currStatelist), mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the state obtained from a state with respect to the mode."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return list the ArrayList containing the undo state."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e processUndoState(String mode) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        receiveUndoState(mode);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (state !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getEntryState();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getDebtState();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getLimitState();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                list \u003d state.getShortcutState();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 86
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/DebtState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class DebtState extends State {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the debtState in State class to be the input param."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param debtState The debtState to be set in State class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public DebtState(ArrayList\u003cRecord\u003e debtState) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.debtState \u003d new ArrayList\u003c\u003e(debtState);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 16
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/EntryState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class EntryState extends State {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the entryState in State class to be the input param."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param entryState The entryState to be set in State class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public EntryState(ArrayList\u003cRecord\u003e entryState) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.entryState \u003d new ArrayList\u003c\u003e(entryState);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 16
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/LimitState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class LimitState extends State {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the limitState in State class to be the input param."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param limitState The limitState to be set in State class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public LimitState(ArrayList\u003cRecord\u003e limitState) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.limitState \u003d new ArrayList\u003c\u003e(limitState);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 17
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/RedoStateList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class RedoStateList implements ModeStringList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e entryStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e debtStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e limitStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e shortcutStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the input state onto the stack of State in this class with respect to the mode."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param state the State to be pushed into the stack."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addState(State state, String mode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entryStateList.push(state);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debtStateList.push(state);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limitStateList.push(state);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcutStateList.push(state);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the State from the stack of State with respect to the mode."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return state the state."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static State getState(String mode) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String type \u003d \"redo\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return entryStateList.pop();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return debtStateList.pop();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return limitStateList.pop();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return shortcutStateList.pop();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ActionUi.printEmptyStackError(type);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will clear the stack with respect to the mode."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void clear(String mode) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entryStateList.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debtStateList.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limitStateList.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcutStateList.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the size of the Stack of states."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return the size of the stack with respect to the user mode."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static int getSize(String mode) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return entryStateList.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return debtStateList.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitStateList.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutStateList.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 89
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/ShortcutState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutState extends State {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the shortcutState in State class to be the input param."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param shortcutStateState The shortcutState to be set in State class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ShortcutState(ArrayList\u003cRecord\u003e shortcutStateState) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.shortcutState \u003d new ArrayList\u003c\u003e(shortcutStateState);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 15
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/State.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class State {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected ArrayList\u003cRecord\u003e entryState \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected ArrayList\u003cRecord\u003e debtState \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected ArrayList\u003cRecord\u003e limitState \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected ArrayList\u003cRecord\u003e shortcutState \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String mode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setShortcutState(ArrayList\u003cRecord\u003e shortcutState) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.shortcutState \u003d shortcutState;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getShortcutState() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return shortcutState;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getLimitState() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return limitState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getEntryState() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return entryState;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getDebtState() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return debtState;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 33
    }
  },
  {
    "path": "src/main/java/dolla/command/action/state/UndoStateList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.action.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class UndoStateList implements ModeStringList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e entryStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e debtStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e limitStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cState\u003e shortcutStateList \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the input state onto the stack of State in this class with respect to the mode."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param state the State to be pushed into the stack."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addState(State state, String mode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entryStateList.push(state);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debtStateList.push(state);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limitStateList.push(state);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcutStateList.push(state);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the State from the stack of State with respect to the mode."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return state the state."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static State getState(String mode) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String type \u003d \"undo\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return entryStateList.pop();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return debtStateList.pop();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return limitStateList.pop();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return shortcutStateList.pop();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ActionUi.printEmptyStackError(type);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the size of the Stack of states."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return the size of the stack with respect to the user mode."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static int getSize(String mode) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return entryStateList.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return debtStateList.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitStateList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutStateList.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 74
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/FullModifyDebtCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FullModifyDebtCommand extends ModifyDebtCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new FullModifyDebtCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of debt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param name name of debtor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount amount of debt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description of debt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date of debt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FullModifyDebtCommand(String type, String name, double amount,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                                 String description, LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        updateUndoState(dollaData);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Debt newDebt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.modifyRecordList(newDebt);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.echoModifyRecord(newDebt);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(mode);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 42
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/FullModifyEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FullModifyEntryCommand extends ModifyEntryCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new FullModifyEntryCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of entry"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FullModifyEntryCommand(String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        updateUndoState(dollaData);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.modifyRecordList(newEntry);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.echoModifyRecord(newEntry);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 38,
      "tatayu": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/FullModifyLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Limit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.LimitList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FullModifyLimitCommand extends ModifyLimitCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new FullModifyLimitCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of limit"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount amount of limit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param duration duration of limit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FullModifyLimitCommand(String type, double amount, String duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Limit newLimit \u003d new Limit(type, amount, duration);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int duplicateLimitIndex \u003d limitList.findExistingRecordIndex(dollaData, newLimit, mode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int indexToModify \u003d dollaData.getModifyIndex();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isNewLimitValid(duplicateLimitIndex, indexToModify)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            updateUndoState(dollaData);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.modifyRecordList(newLimit);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.echoModifyRecord(newLimit);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.updateMode(\"limit\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record existingLimit \u003d limitList.getFromList(duplicateLimitIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LimitUi.existingRecordPrinter(existingLimit, mode);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 50
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/InitialModifyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * InitialModifyCommand is a command that runs first when the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * user wants to execute a modify command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class InitialModifyCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public InitialModifyCommand(String indexStr) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String currMode \u003d dollaData.getMode();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isIndexInList(dollaData.getRecordListObj(currMode), currMode)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInitialModifyMsg(currMode);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.updateMode(\"modify \" + currMode);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.prepForModify(currMode, index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            //istUi.printNoRecordAssocError(index, currMode);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 35
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/ModifyDebtCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DebtList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class ModifyDebtCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String tagName \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String mode \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected void updateUndoState(DollaData dollaData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DebtList debtList \u003d (DebtList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        UndoStateList.addState(new DebtState(debtList.get()), mode);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 27
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/ModifyEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.EntryState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.EntryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class ModifyEntryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String tagName \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String mode \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected void updateUndoState(DollaData dollaData) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        EntryList entryList \u003d (EntryList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        UndoStateList.addState(new EntryState(entryList.get()), mode);///////////////////////////////////////"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 25
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/ModifyLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.LimitState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.LimitList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class ModifyLimitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String mode \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the new limit does not result in having more than one instance of"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u0027daily\u0027, \u0027weekly\u0027 and \u0027monthly\u0027 duration-based limits."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param duplicateLimitIndex the index where the duplicate limit of the same duration is found"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param indexToModify the index of the limit in dollaData to be modified"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if either recordDoesNotExist() or isSameIndex is true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected boolean isNewLimitValid(int duplicateLimitIndex, int indexToModify) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (recordDoesNotExist(duplicateLimitIndex) || isSameIndex(duplicateLimitIndex, indexToModify));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the specified duplicateLimitIndex and indexToEdit are the same."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param duplicateLimitIndex the index where the duplicate limit of the same duration is found"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param indexToModify the index of the limit in dollaData to be modified"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the 2 specified ints are the same."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected boolean isSameIndex(int duplicateLimitIndex, int indexToModify) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (duplicateLimitIndex \u003d\u003d indexToModify);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected void updateUndoState(DollaData dollaData) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        UndoStateList.addState(new LimitState(limitList.get()), mode);///////////////////////////////////////"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Redo.clearRedoState(mode);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 43
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/PartialModifyDebtCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class PartialModifyDebtCommand extends ModifyDebtCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new PartialModifyEntryCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordNum number of entry in list to modify."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of entry."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param name name of person debt is attributed to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public PartialModifyDebtCommand(int recordNum, String type, String name,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                                    double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.index \u003d recordNum - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.prepForModify(MODE_DEBT, index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isIndexInList(dollaData.getRecordListObj(MODE_DEBT), MODE_DEBT)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            updateUndoState(dollaData);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record originalDebt \u003d dollaData.getRecordFromList(MODE_DEBT, index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            overwriteComponents(originalDebt);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Debt newDebt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.modifyRecordList(newDebt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.echoModifyRecord(newDebt);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.updateMode(MODE_DEBT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void overwriteComponents(Record ogDebt) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d ogDebt.getType();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            name \u003d ogDebt.getName();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (amount \u003d\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d ogDebt.getAmount();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            description \u003d ogDebt.getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d ogDebt.getDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 71
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/PartialModifyEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class PartialModifyEntryCommand extends ModifyEntryCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new PartialModifyEntryCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordNum number of entry in list to modify."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of entry."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public PartialModifyEntryCommand(int recordNum, String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.index \u003d recordNum - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.prepForModify(MODE_ENTRY, index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isIndexInList(dollaData.getRecordListObj(MODE_ENTRY), MODE_ENTRY)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record originalEntry \u003d dollaData.getRecordFromList(MODE_ENTRY, index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            overwriteComponents(originalEntry);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            updateUndoState(dollaData);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.modifyRecordList(newEntry);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.echoModifyRecord(newEntry);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.updateMode(MODE_ENTRY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void overwriteComponents(Record ogEntry) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d ogEntry.getType();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (amount \u003d\u003d -1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d ogEntry.getAmount();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            description \u003d ogEntry.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d ogEntry.getDate();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 62,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/PartialModifyLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Limit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.LimitList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class PartialModifyLimitCommand extends ModifyLimitCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new PartialModifyLimitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordNum number of limit in list to modify."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of limit."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param duration of limit."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public PartialModifyLimitCommand(int recordNum, String type, double amount, String duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.index \u003d recordNum - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.prepForModify(MODE_LIMIT, index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isIndexInList(dollaData.getRecordListObj(MODE_LIMIT), MODE_LIMIT)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record originalLimit \u003d dollaData.getRecordFromList(MODE_LIMIT, index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            overwriteComponents(originalLimit);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Limit newLimit \u003d new Limit(type, amount, duration);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LimitList limitList \u003d (LimitList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int duplicateLimitIndex \u003d limitList.findExistingRecordIndex(dollaData, newLimit, mode);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int indexToModify \u003d dollaData.getModifyIndex();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isNewLimitValid(duplicateLimitIndex, indexToModify)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                updateUndoState(dollaData);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                dollaData.modifyRecordList(newLimit);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                ModifyUi.echoModifyRecord(newLimit);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                dollaData.updateMode(MODE_LIMIT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Record existingLimit \u003d limitList.getFromList(duplicateLimitIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.existingRecordPrinter(existingLimit, mode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void overwriteComponents(Record ogLimit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d ogLimit.getType();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (amount \u003d\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d ogLimit.getAmount();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (duration \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            duration \u003d ogLimit.getDuration();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 68
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/RevertFromModifyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class RevertFromModifyCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(dollaData.getPrevMode());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.printCancelModifyMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/ListComparatorUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "class ListComparatorUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int POSITIVE \u003d 1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int NEGATIVE \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int ZERO \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e dateComparator() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return Comparator.comparing(Record::getDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e descComparator() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return Comparator.comparing(Record::getDescription);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e nameComparator() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return Comparator.comparing(Record::getName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e amountComparator() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return (o1, o2) -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (o1.getAmount() \u003c o2.getAmount()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return NEGATIVE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (o1.getAmount() \u003e o2.getAmount()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return POSITIVE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return ZERO;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 35
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/Sort.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "class Sort {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected ArrayList\u003cRecord\u003e sortedList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList in this class to the ArrayList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * being passed in."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be set to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    Sort(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.sortedList \u003d unsortedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 18
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/SortAmount.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortAmount extends Sort {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * This method will call the AmountComparator method, sort the input ArrayList according to amount"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * and print out the sorted list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortAmount(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.amountComparator());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"amount\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 19
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/SortDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortDate extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the dateComparator method, sort the input ArrayList according to date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortDate(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.dateComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"date\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 3,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/SortDescription.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortDescription extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the descComparator method, sort the input ArrayList according to description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortDescription(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.descComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"description\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 3,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/sort/SortName.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortName extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the nameComparator method, sort the input ArrayList according to name"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortName(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.nameComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"name\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 3,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/view/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ViewUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDate cmpDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String dateStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String TODAY \u003d \"today\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String EXPENSE \u003d \"expense\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        double sum \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        RecordList entryList \u003d dollaData.getRecordListObj(MODE_ENTRY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean hasRelevantEntries \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (entryList.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printEmptyListError(MODE_ENTRY);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ViewUi.printStartLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record currEntry \u003d entryList.getFromList(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LocalDate currDate \u003d currEntry.getDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (!isSameDate(currDate, cmpDate)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            hasRelevantEntries \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double currAmount \u003d getSignedAmount(currEntry);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String currDesc \u003d currEntry.getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ViewUi.printViewSingleExpense(currAmount, currDesc);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            sum +\u003d currAmount;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (hasRelevantEntries) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ViewUi.printOverallExpense(sum, dateStr);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ViewUi.printNoRelevantExpense(dateStr);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean isSameDate(LocalDate d1, LocalDate d2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return d1.compareTo(d2) \u003d\u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double getSignedAmount(Record currEntry) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String type \u003d currEntry.getType();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        double amount \u003d currEntry.getAmount();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (type.equals(EXPENSE)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount *\u003d -1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 77
    }
  },
  {
    "path": "src/main/java/dolla/command/view/ViewDateCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ViewDateCommand extends ViewCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ViewDateCommand(LocalDate date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        cmpDate \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dateStr \u003d Time.dateToString(cmpDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 14
    }
  },
  {
    "path": "src/main/java/dolla/command/view/ViewTodayCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ViewTodayCommand extends ViewCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ViewTodayCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        cmpDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dateStr \u003d TODAY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 11
    }
  },
  {
    "path": "src/main/java/dolla/exception/DollaException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class DollaException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_AMOUNT_MSG \u003d \"\\tOOPS! The amount you have entered is invalid.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String NO_LIMIT_MSG \u003d \"\\tOOPS! There is no limit set for the duration you specified.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_LIMIT_TYPE_MSG \u003d \"\\tOOPS! Please specify the limit type: budget/saving.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_LIMIT_DURATION_MSG \u003d \"\\tOOPS! Please specify the limit duration.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_TYPE_MSG \u003d \"OOPS! The type you have input is invalid.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a non existing limit error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return Exception message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static String noExistingLimit(String type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitUi.noExistingLimitPrinter(type);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return NO_LIMIT_MSG;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an invalid amount error."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return Exception message"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static String invalidAmount() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitUi.invalidAmountPrinter();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return INVALID_AMOUNT_MSG;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an invalid limit type error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return Exception message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static String invalidLimitType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitUi.invalidLimitTypePrinter();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return INVALID_LIMIT_TYPE_MSG;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an invalid limit duration error."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return Exception message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static String invalidLimitDuration() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitUi.invalidLimitDurationPrinter();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return INVALID_LIMIT_DURATION_MSG;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns an invalid type exception."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static String invalidType() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return INVALID_TYPE_MSG;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates a new DollaException object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param message The exception message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public DollaException(String message) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 66
    }
  },
  {
    "path": "src/main/java/dolla/model/Bill.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Bill is a Class that stores an instance of the user\u0027s bill split case."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Bill extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected int people;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected ArrayList\u003cString\u003e nameList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new bill."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type Type of the debt (is bill in this case)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people The number of people."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount The total amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList The name list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Bill(String type, int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.people \u003d people;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.nameList \u003d nameList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string to with information about the bill to be displayed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of bill"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + people + \" pax] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + \"Total: $\" + amount + \"] \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + amountToMoney() + \" per person] \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + nameList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string with information about the bill to be saved."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of bill in save format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"BI\" + \" | \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + people + \" | \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount / people + \" | \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + nameString(nameList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"$\" + amount / people;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * This method changes the arraylist of name to a string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the name list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return a string that contains all the name from the nameList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String nameString(ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String nameStore \u003d nameList.get(0) + \", \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 1; i \u003c nameList.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (i \u003d\u003d nameList.size() - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameStore +\u003d nameList.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameStore +\u003d nameList.get(i) + \", \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return nameStore;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public ArrayList\u003cString\u003e getNameList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return nameList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public int getPeople() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return people;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public double getBillAmount() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 91
    }
  },
  {
    "path": "src/main/java/dolla/model/BillList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author tata"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class BillList extends RecordList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public BillList(ArrayList\u003cRecord\u003e importBillList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(importBillList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setBill(get()); //save"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setBill(get());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.list \u003d recordList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setBill(get());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 30,
      "-": 1
    }
  },
  {
    "path": "src/main/java/dolla/model/Debt.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.DEBT_COMMAND_OWE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Debt is a Class that stores an instance of the user\u0027s owe and borrow cases."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Debt extends Record {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new Debt."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type        Type of the debt (owe or borrow)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param name        Name of the person who is related to this debt."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount      Amount of money owed or borrowed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param description Description of the debt."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date        Due date of the debt."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Debt(String type, String name, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.recordType \u003d RECORD_DEBT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.userInput \u003d type + \" \" + name + \" \" + amount + \" \" + description + \" /due \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                       + Time.dateToString(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string to with information about the debt to be displayed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of debt"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + name + \"] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + description + \"] \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[/due \" + Time.dateToString(date) + \"]\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string with information about the debt to be saved."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of debt in save format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        saveType \u003d DEBT_COMMAND_OWE.equals(type) ? \"O\" : \"B\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return saveType + \" | \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + name + \" | \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + description + \" | \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + Time.dateToString(date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 82,
      "Weng-Kexin": 2
    }
  },
  {
    "path": "src/main/java/dolla/model/DebtList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Holds all the debts that have been added to Dolla."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtList extends RecordList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public DebtList(ArrayList\u003cRecord\u003e importDebtList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(importDebtList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get()); //save"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get()); //save"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.list \u003d recordList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Method to check if input debt already exists."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param inputRecord The debt being input by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode The mode the user is on (debt)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return index of the currently existing debt (is - 1 if not found)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt debt \u003d (Debt) inputRecord;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtList debtList \u003d (DebtList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c debtList.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Debt currDebt \u003d (Debt) (debtList.getFromList(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currType \u003d currDebt.type;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currName \u003d currDebt.name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            double currAmount \u003d currDebt.amount;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currDescription \u003d currDebt.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate currDate \u003d currDebt.date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (currType.equals(debt.type)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currAmount \u003d\u003d debt.amount"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currDescription.equals(debt.description)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currDate.equals(debt.date)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currName.equals(debt.name)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 69,
      "Weng-Kexin": 1,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/model/DollaData.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DebtList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.EntryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.LimitList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.BillList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.ShortcutList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getDebtsFromSave;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getEntriesFromSave;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getLimitsFromSave;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getBillsFromSave;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getShortcutsFromSave;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static dolla.storage.StorageStringList.BILL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaData implements ModeStringList {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String mode \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private EntryList entryList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private DebtList debtList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private LimitList limitList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ShortcutList shortcutList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private BillList billList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String prevMode;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private int modifyIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates an instance of DollaData to store and manipulate data."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public DollaData() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.entryList \u003d new EntryList(getEntriesFromSave()); //Import from save file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.limitList \u003d new LimitList(getLimitsFromSave());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.debtList \u003d new DebtList(getDebtsFromSave());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.shortcutList \u003d new ShortcutList(getShortcutsFromSave());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.billList \u003d new BillList(getBillsFromSave());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Returns the relevant RecordList object according to the specified mode."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode pertaining to the RecordList to be retrieved."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return The RecordList according to the specified mode."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public RecordList getRecordListObj(String mode) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return debtList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return null; // placeholder so that Dolla can compile"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * The method will get the ArrayList of Record with respect to the mode."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the program is in."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return the ArrayList of Record."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getRecordList(String mode) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return entryList.get();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return debtList.get();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitList.get();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutList.get();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns the relevant record (ie. Entry) from the specified index"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * in the relevant RecordList (ie. EntryList) according to the specified mode."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode pertaining to the Record to be retrieved."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index corresponding to the Record to be retried from the RecordList"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return The Record according to the specified mode."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Record getRecordFromList(String mode, int index) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryList.getFromList(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return debtList.getFromList(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return limitList.getFromList(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutList.getFromList(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return null; // placeholder so that Dolla can compile"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public RecordList getBillRecordList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return billList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Adds a new Record (ie. Entry) into the relevant RecordList (ie. EntryList) according to the specified mode."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode   The mode pertaining to the RecordList to be retrieved."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param newRecord The new Record to be added into the relevant RecordList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addToRecordList(String mode, Record newRecord) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList.add(newRecord);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            debtList.add(newRecord);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitList.add(newRecord);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcutList.add(newRecord);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addBillToRecordList(Record newRecord) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        billList.add(newRecord);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addNewBillToRecordList(Record newRecord) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        billList.add(newRecord);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    } //TODO: IS this still using?"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Remove from record list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode  the mode"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param index the index"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromRecordList(String mode, int index) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entryList.removeFromList(index);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debtList.removeFromList(index);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limitList.removeFromList(index);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcutList.removeFromList(index);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(BILL)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            billList.removeFromList(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Changes the content of a particular log in list to the specified one."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param newRecord the new record to replace the current item on the list."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void modifyRecordList(Record newRecord) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (prevMode) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            entryList.removeFromList(modifyIndex);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            limitList.removeFromList(modifyIndex);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            limitList.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            debtList.removeFromList(modifyIndex);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            debtList.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getMode() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return mode;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Updates Dolla\u0027s mode to the specified new mode."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param newMode the mode to update to."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void updateMode(String newMode) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        mode \u003d newMode;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prepares Dolla for modify mode by storing the previous mode and the index of the log to be modified."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param prevMode the current mode of Dolla when this method is called."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index    the index of the log to be modified."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void prepForModify(String prevMode, int index) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.prevMode \u003d prevMode;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modifyIndex \u003d index;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setModifyIndex(int index) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modifyIndex \u003d index;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public int getModifyIndex() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return modifyIndex;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * getPrevMode TODO: update."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return preMode"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getPrevMode() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return prevMode;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of Record in the object with respect to the mode."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param recordList the ArrayList of Record to be set as."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            this.entryList.setRecordList(recordList);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            this.debtList.setRecordList(recordList);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            this.limitList.setRecordList(recordList);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            this.shortcutList.setRecordList(recordList);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case BILL:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            this.billList.setRecordList(recordList);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the size of each list."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public int getListSize(String mode) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return this.entryList.size();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return this.debtList.size();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return this.limitList.size();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return this.shortcutList.size();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public double dateOverallExpense(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //return entryList.dateOverallExpense(cmpDate);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 102,
      "tatayu": 19,
      "Weng-Kexin": 46,
      "yetong1895": 106
    }
  },
  {
    "path": "src/main/java/dolla/model/Entry.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.ENTRY_TYPE_I;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Entry is a Class that stores an instance of the user\u0027s expense or income."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Entry extends Record {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected char sign; // \u0027+\u0027 for income, \u0027-\u0027 for expense"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of Entry."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type Income or Expense."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount Amount of money that is earned/spent."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description Details pertaining to the entry."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date Date of income/expense."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Entry(String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.sign \u003d (ENTRY_TYPE_I.equals(type) ? \u0027+\u0027 : \u0027-\u0027);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.recordType \u003d RECORD_ENTRY;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.userInput \u003d type + \" \" + amount + \" \" + description + \" /on \" + Time.dateToString(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a string to with information about the entry to be displayed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return String with information of entry."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"[\" + description + \"] \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + \"[/on \" + Time.dateToString(date) + \"]\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Returns a string with information about the entry to be saved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return String with information of entry in saving format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        saveType \u003d ENTRY_TYPE_I.equals(type) ? \"I\" : \"E\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return  saveType + \" | \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + description + \" | \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + Time.dateToString(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 35,
      "tatayu": 11,
      "Weng-Kexin": 11,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/model/EntryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Holds all the entries that have been added to Dolla."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class EntryList extends RecordList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public EntryList(ArrayList\u003cRecord\u003e importEntryList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(importEntryList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get()); //save"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.list \u003d recordList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method to check if input entry already exists."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param inputRecord The entry being input by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode the user is on (entry)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return index of the currently existing entry (is - 1 if not found)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Entry entry \u003d (Entry) inputRecord;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        EntryList entryList \u003d (EntryList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Entry currEntry \u003d (Entry) (entryList.getFromList(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String currType \u003d currEntry.type;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            double currAmount \u003d currEntry.amount;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String currDescription \u003d currEntry.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LocalDate currDate \u003d currEntry.date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (currType.equals(entry.type)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currAmount \u003d\u003d entry.amount"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currDescription.equals(entry.description)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currDate.equals(entry.date)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        StorageWrite.setEntries(get());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public double dateOverallExpense(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        double sum \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Record currEntry \u003d list.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LocalDate currDate \u003d currEntry.getDate();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isSameDate(currDate, cmpDate)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                double change \u003d currEntry.getAmount();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                change \u003d (currEntry.getType().equals(\"expense\") ? change*-1 : change);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                sum +\u003d change;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return sum;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean isSameDate(LocalDate d1, LocalDate d2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (d1.compareTo(d2) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 41,
      "Weng-Kexin": 32,
      "yetong1895": 19
    }
  },
  {
    "path": "src/main/java/dolla/model/Limit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Limit is a class that stores all limit related methods (savings and budgets)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Limit extends Record {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates an instance of Limit."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type Budget or Saving."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param amount Amount of money to be limited."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the limit."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Limit(String type, double amount, String duration) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.userInput \u003d type + \" \" + amount + \" \" + duration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.recordType \u003d RECORD_LIMIT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns a string to with information about the limit to be displayed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return String with information of limit."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + \"[\" + duration + \"]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        saveType \u003d LIMIT_TYPE_S.equals(type) ? \"S\" : \"BU\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return  saveType + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + duration;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 49,
      "yetong1895": 13
    }
  },
  {
    "path": "src/main/java/dolla/model/LimitList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * A class that contains methods regarding the LimitList (add, remove, check for existing limits)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitList extends RecordList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public LimitList(ArrayList\u003cRecord\u003e importLimitList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super(importLimitList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get()); //save"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get()); //save"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.list \u003d recordList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method checks to see if the input limit already exists."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param inputRecord The limit being input by user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode the user is on."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return index of the currently existing limit (is - 1 if not found)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit inputLimit \u003d (Limit) inputRecord;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordListObj(mode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit currLimit;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String currType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String currDuration;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c limitList.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currLimit \u003d (Limit) limitList.getFromList(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currType \u003d currLimit.type;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currDuration \u003d currLimit.duration;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (currType.equals(inputLimit.type) \u0026\u0026 currDuration.equals(inputLimit.duration)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 66,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/model/Record.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * A class that is inherited from all forms of recording, ie. entry, Limit and debt so that we can perform polymorphism."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public abstract class Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String recordType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected ArrayList\u003cString\u003e nameList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected int people;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static final String RECORD_SHORTCUT \u003d \"shortcut\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public abstract String getRecordDetail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public abstract String formatSave();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return recordType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDescription(String s) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d s;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setAmount(double d) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        amount \u003d d;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setType(String s) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d s;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDate(LocalDate ld) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        date \u003d ld;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public ArrayList\u003cString\u003e getNameList() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return nameList;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public int getPeople() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return people;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public double getBillAmount() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public abstract String amountToMoney();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 29,
      "tatayu": 23,
      "Weng-Kexin": 14,
      "yetong1895": 26
    }
  },
  {
    "path": "src/main/java/dolla/model/RecordList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class RecordList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public RecordList(ArrayList\u003cRecord\u003e importEntryList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.list \u003d importEntryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public ArrayList\u003cRecord\u003e get() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getCloneList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.add(newRecord);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Record getFromList(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setTypeInRecord(int index, String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setType(s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setAmountInRecord(int index, double d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setAmount(d);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDescInRecord(int index, String s) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setDescription(s);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDateInRecord(int index, LocalDate ld) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setDate(ld);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.add(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record record, String mode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setRecordList(ArrayList\u003cRecord\u003e recordList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.list \u003d recordList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return list.isEmpty();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 22,
      "Weng-Kexin": 38,
      "yetong1895": 8
    }
  },
  {
    "path": "src/main/java/dolla/model/Shortcut.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * Shortcut is a Class that stores an instance of the user\u0027s stored shortcuts of entry input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Shortcut extends Record {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Creates an instance of Shortcut."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of entry"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param amount the amount in the entry"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param description the description in the entry"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public Shortcut(String type, double amount, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.recordType \u003d RECORD_SHORTCUT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.userInput \u003d type + \" \" + amount + \" \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"[\" + \"shortcut\" + \"] \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + \"[\" + type + \"] \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + \"[\" + description + \"]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return  \"shortcut\" + \" | \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + type + \" | \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 51
    }
  },
  {
    "path": "src/main/java/dolla/model/ShortcutList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * Holds all the shortcut that have been added to Dolla."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutList extends RecordList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ShortcutList(ArrayList\u003cRecord\u003e importEntryList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(importEntryList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setShortcuts(get()); //save"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setShortcuts(get()); //save"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 26
    }
  },
  {
    "path": "src/main/java/dolla/parser/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class CommandParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //public CommandParser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract Command parse();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 13
    }
  },
  {
    "path": "src/main/java/dolla/parser/DebtsParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.PartialModifyDebtCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.InitialModifyCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ShowBillListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddDebtsCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddBillCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ActionCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.RemoveNameCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * DebtsParser is a class that handles the input command and"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * execute the command according to the command under the debt mode."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtsParser extends Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public DebtsParser(String inputLine) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (commandToRun.equals(DEBT_COMMAND_LIST)) { //show debt list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(BILL_COMMAND_LIST)) { //show bill list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new ShowBillListCommand(mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(DEBT_COMMAND_OWE) || commandToRun.equals(DEBT_COMMAND_BORROW)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyDebtCommand()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new AddDebtsCommand(commandToRun, inputArray[1], amount, description, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(BILL_COMMAND_BILL)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyAddBillCommand(nameList)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new AddBillCommand(BILL_COMMAND_BILL,Integer.parseInt(inputArray[1]), amount, nameList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(BILL_COMMAND_PAID)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            RecordList recordList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DollaData dollaData \u003d new DollaData();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getBillRecordList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (recordList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                DebtUi.printEmptyBillMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                if (verifyPaidCommand(recordList)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    return new RemoveNameCommand(Integer.parseInt(inputArray[1]), inputArray[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    DebtUi.printInvalidPaidFormatError();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    return new ErrorCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new PartialModifyDebtCommand(modifyRecordNum, type, name, amount, description, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SEARCH)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyDebtSearchCommand()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SearchCommand(mode, inputArray[1], inputArray[2]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SORT)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REDO)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                || commandToRun.equals(COMMAND_UNDO)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new ActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return invalidCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 5,
      "tatayu": 90,
      "Weng-Kexin": 7,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/parser/DollaParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddDebtsCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.AddEntryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddLimitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.view.ViewDateCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.view.ViewTodayCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ViewUi;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaParser extends Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String TODAY \u003d \"today\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public DollaParser(String inputLine) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (commandToRun.equals(DOLLA_VIEW)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyViewTodayCommand()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ViewTodayCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else if (verifyViewDateCommand()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ViewDateCommand(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(ENTRY_COMMAND_ADD)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyAddCommand()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new AddEntryCommand(inputArray[1], amount, description, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch(commandToRun) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"income\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"expense\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return new AddExpenseCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return new ErrorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(DEBT_COMMAND_OWE) || commandToRun.equals(DEBT_COMMAND_BORROW)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String type \u003d commandToRun;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String name \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double amount \u003d 0.0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LocalDate date \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                name \u003d inputArray[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] desc \u003d inputLine.split(inputArray[2] + SPACE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d dateString[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                date \u003d Time.readDate(dateString[1].trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new AddDebtsCommand(type, name, amount, description, date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_SET)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifySetCommand()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new AddLimitCommand(type, amount, duration);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.invalidSetCommandPrinter();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return invalidCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean verifyViewTodayCommand() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return inputArray[1].equals(TODAY);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ViewUi.printInvalidViewFormatError();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean verifyViewDateCommand() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d Time.readDate(inputArray[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            //ViewUi.printInvalidViewFormatError();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printDateFormatError();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ViewUi.printInvalidViewFormatError();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 105,
      "tatayu": 4,
      "Weng-Kexin": 3
    }
  },
  {
    "path": "src/main/java/dolla/parser/EntryParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ActionCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.AddShortcutCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ExecuteShortcutCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddEntryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.InitialModifyCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.PartialModifyEntryCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.SearchUi;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class EntryParser extends Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public EntryParser(String inputLine) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (commandToRun.equals(ENTRY_COMMAND_LIST)) { //show entry list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(ENTRY_COMMAND_ADD)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyAddCommand()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new AddEntryCommand(inputArray[1], amount, description, date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new PartialModifyEntryCommand(modifyRecordNum, type, amount, description, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SORT)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SEARCH)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyEntrySearchCommand()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SearchCommand(mode, inputArray[1], inputArray[2]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REDO)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                || commandToRun.equals(COMMAND_UNDO)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new ActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(SHORTCUT_COMMAND_CREATE)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyShortcut()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new AddShortcutCommand(inputArray[1], mode);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(SHORTCUT_COMMAND_EXECUTE)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyShortcut()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ExecuteShortcutCommand(inputArray[1], mode);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(SHORTCUT_COMMAND_LIST)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new ShowListCommand(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "omupenguin": 32,
      "Weng-Kexin": 8,
      "tatayu": 13,
      "yetong1895": 31
    }
  },
  {
    "path": "src/main/java/dolla/parser/LimitParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddLimitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.InitialModifyCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowRemainingLimitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ActionCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.PartialModifyLimitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitParser extends Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected LimitParser(String inputLine) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.mode \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_LIST)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_REMAINING)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyShowRemainingLimitCommand()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ShowRemainingLimitCommand(duration, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                LimitUi.invalidShowRemainingLimitPrinter();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_SET)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifySetCommand()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new AddLimitCommand(type, amount, duration);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                LimitUi.invalidSetCommandPrinter();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new PartialModifyLimitCommand(modifyRecordNum, type, amount, duration);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.COMMAND_SEARCH)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyLimitSearchCommand()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new SearchCommand(mode, inputArray[1], inputArray[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REDO)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || commandToRun.equals(COMMAND_UNDO)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new ActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean verifyShowRemainingLimitCommand() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            duration \u003d verifyLimitDuration(inputArray[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            type \u003d verifyLimitType(inputArray[2]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (IndexOutOfBoundsException | DollaException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static String verifyLimitType(String limitType) throws DollaException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (limitType.equals(LIMIT_TYPE_S) || limitType.equals(LIMIT_TYPE_B)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return limitType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            throw new DollaException(DollaException.invalidLimitType());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static String verifyLimitDuration(String limitDuration) throws DollaException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (limitDuration.equals(LIMIT_DURATION_D)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            || limitDuration.equals(LIMIT_DURATION_W)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            || limitDuration.equals(LIMIT_DURATION_M)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return limitDuration;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            throw new DollaException(DollaException.invalidLimitDuration());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 3,
      "Weng-Kexin": 92,
      "yetong1895": 4
    }
  },
  {
    "path": "src/main/java/dolla/parser/MainParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.SwitchModeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * MainParser directs the program to the appropriate parser depending on the current mode and the user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class MainParser implements ParserStringList, ModeStringList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns a command corresponding to the user input by directing the input to the relevant parser."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode Dolla is currently on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return a command corresponding to the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static Command handleInput(String mode, String inputLine) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        inputLine \u003d inputLine.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (inputLine.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String[] inputArray \u003d inputLine.split(SPACE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String command \u003d inputArray[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean isExitCommand \u003d isExitCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean isSwitchMode \u003d isSwitchModeCommand(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (isExitCommand) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (isSwitchMode) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new SwitchModeCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DOLLA:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return dollaParser.parseInput();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryParser entryParser \u003d new EntryParser(inputLine);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryParser.parseInput();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return debtsParser.parseInput();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitParser limitParser \u003d new LimitParser(inputLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return limitParser.parseInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return shortcutParser.parseInput();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_ENTRY:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_LIMIT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_DEBT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_SHORTCUT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyParser modifyParser \u003d new ModifyParser(mode, inputLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return modifyParser.parseInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static boolean isExitCommand(String command) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return command.equals(COMMAND_BYE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static boolean isSwitchModeCommand(String command) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return command.equalsIgnoreCase(MODE_DOLLA) || command.equalsIgnoreCase(MODE_ENTRY)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || command.equalsIgnoreCase(MODE_LIMIT) || command.equalsIgnoreCase(MODE_DEBT)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || command.equalsIgnoreCase(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * This method will exit the entire program after printing a goodbye message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Ui.printExitMsg();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 44,
      "Weng-Kexin": 34,
      "tatayu": 4,
      "yetong1895": 4
    }
  },
  {
    "path": "src/main/java/dolla/parser/ModifyParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.FullModifyDebtCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.FullModifyEntryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.FullModifyLimitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.RevertFromModifyCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ModifyParser extends Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String modeToModify;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static final String CANCEL_MODIFY \u003d \"CANCEL\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ModifyParser(String mode, String inputLine) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (checkCancellation()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new RevertFromModifyCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        getModeToModify();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (modeToModify) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyAddCommand()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new FullModifyEntryCommand(inputArray[1], amount, inputArray[3], date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // need to compress"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String type \u003d commandToRun;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double amount;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                name \u003d inputArray[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] desc \u003d inputLine.split(inputArray[2] + \" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d dateString[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                date \u003d Time.readDate(dateString[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new FullModifyDebtCommand(type, name, amount, description, date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifySetCommand()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String typeStr \u003d inputArray[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String durationStr \u003d inputArray[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new FullModifyLimitCommand(typeStr, this.amount, durationStr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.invalidSetCommandPrinter();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean checkCancellation() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return inputLine.equals(CANCEL_MODIFY);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void getModeToModify() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modeToModify \u003d mode.split(\" \")[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 83
    }
  },
  {
    "path": "src/main/java/dolla/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.SearchUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.EntryUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.RemoveUi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ShortcutUi;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.LimitParser.verifyLimitType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.LimitParser.verifyLimitDuration;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Parser is an abstract class that loads the appropriate command according to the user\u0027s input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * It also ensures that the user\u0027s input for the command is valid, such as by checking the format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * of the input, and the utilisation of correct terms."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class Parser implements ParserStringList, ModeStringList {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String mode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static String inputLine;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static String[] inputArray;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String tagName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String commandToRun;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected int modifyRecordNum;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static int maxAmount \u003d 1000000;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static int appropriateDecimalPlace \u003d 2;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String TYPE_OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String TYPE_BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of a parser."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param inputLine The entire string containing the user\u0027s input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Parser(String inputLine) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.inputLine \u003d inputLine;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.inputArray \u003d inputLine.split(SPACE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.commandToRun \u003d inputArray[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract Command parseInput() throws DollaException;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static String getInputLine() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Splits the input from the user and assigns the relevant data into description and date variables."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * If the incorrect format is given in the input, the corresponding alert will be printed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void extractDescTime() throws Exception {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        // dataArray[0] is command, amount and description, dataArray[1] is time and tag"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String[] dataArray \u003d inputLine.split(\" /on \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String dateString \u003d (dataArray[1].split(\" /tag\"))[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d dataArray[0].split(inputArray[2] + \" \")[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d Time.readDate(dateString.trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO: Shouldn\u0027t happen anymore, need to test if this will happen still"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(\"Please add \u0027/at \u003cdate\u003e\u0027 after your task to specify the entry date.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new DollaException(INVALID_DATE_EXCEPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printDateFormatError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new DollaException(INVALID_DATE_EXCEPTION);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static Boolean amountIsInvalid(double amount) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (amount \u003c\u003d 0 || amount \u003e\u003d maxAmount || BigDecimal.valueOf(amount).scale() \u003e appropriateDecimalPlace);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a double variable from the specified string."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Returns 0 if the specified string is not of a number."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Mainly used for using the specified string for calculations in the command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     IE. Accessing arrays."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param str String (of number) to be converted into integer type."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Integer type of the specified string."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static double stringToDouble(String str) throws Exception {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        double newDouble;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            newDouble \u003d Double.parseDouble(str);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            boolean amountIsInvalid \u003d amountIsInvalid(newDouble);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (amountIsInvalid) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                throw new DollaException(DollaException.invalidAmount());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new NumberFormatException(INVALID_AMOUNT_EXCEPTION);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return newDouble;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Alerts the user that the input is invalid, and returns an ErrorCommand."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return an ErrorCommand"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command invalidCommand() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new ErrorCommand();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Checks if the first word after \u0027add\u0027 is either \u0027income\u0027 or \u0027expense\u0027."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param s String to be analysed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Either \u0027expense\u0027 or \u0027income\u0027 if either are passed in."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @throws Exception ???"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static String verifyAddType(String s) throws Exception {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (s.equals(\"income\") || s.equals(\"expense\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryUi.printInvalidEntryType();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new DollaException(DollaException.invalidType());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if no error occurs while creating the required variables for \u0027addEntryCommand\u0027."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also splits description and time components in the process."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if no error occurs."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean verifyAddCommand() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d verifyAddType(inputArray[1]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            extractDescTime();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryUi.printInvalidEntryFormatError();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false; // If error occurs, stop the method!"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    //@@author tatayu"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns true if no error occurs while creating the required variables for \u0027addDebtCommand\u0027."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Also splits name, description components in the process."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if no error occurs."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public boolean verifyDebtCommand() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                DebtUi.printInvalidNameMessage();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } catch (Exception ignored) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                //do nothing"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String[] desc \u003d inputLine.split(inputArray[2] + SPACE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            description \u003d dateString[0];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return checkTag(dateString[1]);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    //@@author tatayu"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns true if no error occurs while creating the date for \u0027addDebtCommand\u0027."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dateString the string that contains date and tag."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if no error occurs."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private boolean checkTag(String dateString) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (inputLine.contains(COMPONENT_TAG)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String[] dateAndTag \u003d dateString.split(COMPONENT_TAG);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                date \u003d Time.readDate(dateAndTag[0].trim());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                Ui.printDateFormatError();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                date \u003d Time.readDate(dateString.trim());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                Ui.printDateFormatError();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns true if the only element in the input that follows \u0027modify\u0027 is a number."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the only element in the input that follows \u0027modify\u0027 is a number."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public boolean verifyFullModifyCommand() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ModifyUi.printInvalidFullModifyFormatError();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will check if the input is a valid sort command."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return true if the command is a valid sort command or false otherwise."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean verifySort() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            switch (mode) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_ENTRY:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_AMOUNT)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DATE)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DESC)) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_DEBT:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_AMOUNT)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DATE)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DESC)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_NAME)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_AMOUNT)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        || inputArray[1].equals(SORT_TYPE_DESC)) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * The method will check if the user have entered a valid remove command."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return true if the command is valid or false otherwise."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean verifyRemove() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printInvalidRemoveMessage();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (Integer.parseInt(inputArray[1]) \u003c 1) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                RemoveUi.printInvalidRemoveMessage();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printInvalidRemoveMessage();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will check if t he user have entered a valid shorcut command."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return true if the command is valid or false otherwise."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean verifyShortcut() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ShortcutUi.printInvalidShortcutMessage();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (Integer.parseInt(inputArray[1]) \u003c 1) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                ShortcutUi.printInvalidShortcutMessage();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ShortcutUi.printInvalidShortcutMessage();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //@@author omupenguin"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the input has no formatting issues."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also designates the correct information to the relevant variables."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the input has no formatting issues."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean verifyPartialModifyCommand() {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //ArrayList\u003cString\u003e errorList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d null;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        amount \u003d -1;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d null;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        duration \u003d null;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        name \u003d null;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tagName \u003d null;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            modifyRecordNum \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInvalidFullModifyFormatError();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean hasComponents \u003d findComponents();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (!hasComponents) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInvalidPartialModifyFormatError();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the input contains a component to be edited in the current mode,"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * demarcated with strings like \"/type\", and the entered data is valid."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also designates the correct information to the relevant variables."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the input contains a component to be edited in the current mode, and is followed"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *         by valid data relevant to the component."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean findComponents() {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean hasComponents;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        hasComponents \u003d false;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c inputArray.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String currStr \u003d inputArray[i];"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isComponent(currStr)) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    String nextStr \u003d inputArray[i + 1];"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    switch (mode) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case MODE_ENTRY:"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        verifyEntryComponents(currStr, nextStr, i);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case MODE_LIMIT:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        verifyLimitComponents(currStr, nextStr);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case MODE_DEBT:"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        verifyDebtComponents(currStr, nextStr, i);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    ModifyUi.printMissingComponentInfoError(currStr);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Ui.printDateFormatError();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                hasComponents \u003d true;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return hasComponents;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Checks if the string from input (currStr) represents a component of limit. If so, verify and assign"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * the components of limit with the new data (nextStr)."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param currStr to be checked if it\u0027s a component (ie. /type)."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param nextStr the new data to be used for the specified component."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @throws Exception when the nextStr is not a valid input for component from currStr."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void verifyLimitComponents(String currStr, String nextStr) throws Exception {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (currStr) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d verifyLimitType(nextStr);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d stringToDouble(nextStr);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case COMPONENT_DURATION:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            duration \u003d verifyLimitDuration(nextStr);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Checks if the first word after \u0027add\u0027 is either \u0027income\u0027 or \u0027expense\u0027."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param s String to be analysed."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Either \u0027expense\u0027 or \u0027income\u0027 if either are passed in."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @throws Exception ???"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static String verifyDebtType(String s) throws Exception {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (s.equals(TYPE_OWE) || s.equals(TYPE_BORROW)) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            DebtUi.printInvalidDebtType();"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new DollaException(DollaException.invalidType());"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void verifyDebtComponents(String currStr, String nextStr, int index) throws Exception {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (currStr) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                type \u003d verifyDebtType(nextStr);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_NAME:"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                name \u003d parseDesc(index + 1);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(nextStr);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DESC:"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d parseDesc(index + 1);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DATE:"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                date \u003d Time.readDate(nextStr);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TAG:"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Checks if the string from input (currStr) represents a component of entry. If so, verify and assign"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * the components of entry with the new data (nextStr)."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param currStr to be checked if it\u0027s a component (ie. /type)."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param nextStr the new data to be used for the specified component."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index the index of currStr in the input array."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @throws Exception when the nextStr is not a valid input for component from currStr."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void verifyEntryComponents(String currStr, String nextStr, int index) throws Exception {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (currStr) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                type \u003d verifyAddType(nextStr);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(nextStr);"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DESC:"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d parseDesc(index + 1);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DATE:"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                date \u003d Time.readDate(nextStr);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the specified string is a editable component for the current mode."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param s the string to be checked."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the specified string is a editable component for the current mode."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean isComponent(String s) {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DESC:"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DATE:"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TAG:"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DURATION:"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TAG:"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_NAME:"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DESC:"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DATE:"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TAG:"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        */"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Extracts and returns a string containing the new description of the record to be modified."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index The index of element in inputArray to start extracting from."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return string containing the new description of the record to be modified."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String parseDesc(int index) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String tempStr \u003d EMPTY_STR;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d index; i \u003c inputArray.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isComponent(inputArray[i])) {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            tempStr \u003d tempStr.concat(inputArray[i] + SPACE);"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tempStr \u003d tempStr.substring(0, tempStr.length() - 1);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return tempStr;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    //@@author tatayu"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the component is valid."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param s string at the component position."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if it is a valid component."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyDebtSearchComponent(String s) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return s.equals(SEARCH_DESCRIPTION) || s.equals(SEARCH_DATE) || s.equals(SEARCH_NAME);"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *check if the people and amount is valid."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if they are valid."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyPaidNumberAndName() {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (inputArray[2] \u003d\u003d null) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    //@@author tatayu"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the number is valid."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList the list that records all the bill."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if it is a valid number."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyPaidCommand(RecordList recordList) {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (verifyPaidNumberAndName()) {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (Integer.parseInt(inputArray[1]) \u003c\u003d recordList.size() \u0026\u0026 Integer.parseInt(inputArray[1]) \u003e 0) {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                DebtUi.printInvalidBillNumberError();"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the search command for debt is valid."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the command is valid."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyDebtSearchCommand() {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyDebtSearchComponent(inputArray[1]) \u0026\u0026 inputArray[2] !\u003d null) {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printInvalidSearchFormat();"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the search command for entry is valid."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the command is valid."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyEntrySearchCommand() {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyEntrySearchComponent(inputArray[1]) \u0026\u0026 inputArray[2] !\u003d null) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printInvalidEntrySearchComponent();"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printInvalidSearchFormat();"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the search command for limit is valid."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the command is valid."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyLimitSearchCommand() {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyLimitSearchComponent(inputArray[1]) \u0026\u0026 inputArray[2] !\u003d null) {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printInvalidLimitSearchComponent();"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printInvalidSearchFormat();"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the search command for shortcut is valid."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the command is valid."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyShortcutSearchCommand() {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyShortcutSearchComponent(inputArray[1]) \u0026\u0026 inputArray[2] !\u003d null) {"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printInvalidShortcutSearchComponent();"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printInvalidSearchFormat();"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the component is valid."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param s string at the component position."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if it is a valid component."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyEntrySearchComponent(String s) {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return s.equals(SEARCH_DESCRIPTION) || s.equals(SEARCH_DATE);"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Check if the component is valid."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param s string at the component position."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if it is a valid component."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyLimitSearchComponent(String s) {"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return s.equals(SEARCH_DURATION);"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * check if the component is valid."
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param s string at the component position."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if it is a valid component."
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyShortcutSearchComponent(String s) {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return s.equals(SEARCH_DESCRIPTION);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *check if the people and amount is valid."
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if they are valid."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyBillPeopleAndAmount() {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printInvalidBillFormatError();"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * check if the add bill command is valid."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the array list to store the names."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return true if the command is valid."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected Boolean verifyAddBillCommand(ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyBillPeopleAndAmount()) {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                for (int i \u003d 3; i \u003c 3 + Integer.parseInt(inputArray[1]); i++) {"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    String name \u003d inputArray[i];"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    nameList.add(name);"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printWrongPeopleNumberMessage(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    //@@author Weng-Kexin"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected Boolean verifySetCommand() {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            type \u003d verifyLimitType(inputArray[1]);"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            duration \u003d verifyLimitDuration(inputArray[3]);"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 404,
      "Weng-Kexin": 20,
      "tatayu": 260,
      "yetong1895": 93
    }
  },
  {
    "path": "src/main/java/dolla/parser/ParserStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public interface ParserStringList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Modify specific modes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_ENTRY \u003d \"modify entry\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_LIMIT \u003d \"modify limit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_DEBT \u003d \"modify debt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_SHORTCUT \u003d \"modify shortcut\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Dolla mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DOLLA_VIEW_TODAY \u003d \"view today\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DOLLA_VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Entry mode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_COMMAND_LIST \u003d \"entries\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_TYPE_E \u003d \"expense\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_TYPE_I \u003d \"income\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Limit mode"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_COMMAND_LIST \u003d \"limits\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_COMMAND_SET \u003d \"set\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_COMMAND_REMAINING \u003d \"remaining\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_TYPE_S \u003d \"saving\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_TYPE_B \u003d \"budget\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_D \u003d \"daily\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_W \u003d \"weekly\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_M \u003d \"monthly\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Debt mode"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_LIST \u003d \"debts\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String BILL_COMMAND_BILL \u003d \"bill\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String BILL_COMMAND_LIST \u003d \"bills\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String BILL_COMMAND_PAID \u003d \"paid\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Commands specific to shortcut"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SHORTCUT_COMMAND_CREATE \u003d \"cs\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SHORTCUT_COMMAND_EXECUTE \u003d \"es\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SHORTCUT_COMMAND_LIST \u003d \"shortcuts\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Shared Commands"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_MODIFY \u003d \"modify\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_SORT \u003d \"sort\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_SEARCH \u003d \"search\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_REMOVE \u003d \"remove\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Components used in modify"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_TYPE \u003d \"/type\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_DESC \u003d \"/desc\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_AMOUNT \u003d \"/amount\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_DATE \u003d \"/on\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_TAG \u003d \"/tag\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_DURATION \u003d \"/duration\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_NAME \u003d \"/name\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Components used in sort"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_AMOUNT \u003d \"amount\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_DESC \u003d \"description\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Search Components"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SEARCH_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SEARCH_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SEARCH_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SEARCH_DURATION \u003d \"duration\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Components used in Action"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Commons"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String EMPTY_STR \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String INVALID_AMOUNT_EXCEPTION \u003d \"Invalid amount exception\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String INVALID_DATE_EXCEPTION \u003d \"Invalid date exception\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 86
    }
  },
  {
    "path": "src/main/java/dolla/parser/ShortcutParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddShortcutCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ExecuteShortcutCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.ActionCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutParser extends Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Creates an instance of a parser."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param inputLine The entire string containing the user\u0027s input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ShortcutParser(String inputLine) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d MODE_SHORTCUT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (commandToRun) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case SHORTCUT_COMMAND_LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case ENTRY_COMMAND_LIST:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new ShowListCommand(MODE_ENTRY);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case COMMAND_REMOVE:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case SHORTCUT_COMMAND_CREATE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyShortcut()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new AddShortcutCommand(inputArray[1], mode);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case SHORTCUT_COMMAND_EXECUTE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyShortcut()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ExecuteShortcutCommand(inputArray[1], mode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case COMMAND_REDO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case COMMAND_UNDO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new ActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case COMMAND_SORT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case COMMAND_SEARCH:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyShortcutSearchCommand()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new SearchCommand(mode, inputArray[1], inputArray[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 7,
      "yetong1895": 62
    }
  },
  {
    "path": "src/main/java/dolla/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * duke.Storage handles the saving and loading of data from ./data/duke.txt,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * as well as creating a new save file if it does not exist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Storage implements StorageStringList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e entries \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e limits \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e debts \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e shortcuts \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e bills \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e storage \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static double stringToDouble(String str) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        double newDouble \u003d 0.0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            newDouble \u003d Double.parseDouble(str);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return newDouble;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the entries."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the entries."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getEntriesFromSave() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return entries;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the limits."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return limits the ArrayList containing all the limits."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getLimitsFromSave() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return limits;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the debts."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the debts."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getDebtsFromSave() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return debts;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the debts."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return bills the ArrayList containing all the bills."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getBillsFromSave() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return bills;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the shortcuts."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the shortcuts."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getShortcutsFromSave() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return shortcuts;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will clear the data in the save file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void clearStorage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            FileWriter file \u003d new FileWriter(PATH,false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            file.flush();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 86
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageRead.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Limit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Bill;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.StorageUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Shortcut;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageRead extends Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will extract the data from the save file and load into the respective ArrayList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void load() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        BufferedReader inStream;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            File f \u003d new File(DATA);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                InputStream inputStream \u003d StorageRead.class.getResourceAsStream(PRELOAD_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                InputStreamReader isReader \u003d new InputStreamReader(inputStream);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                inStream \u003d new BufferedReader(isReader);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                f.mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                FileReader inFile \u003d new FileReader(PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                inStream \u003d new BufferedReader(inFile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printStorageLoadMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            String inLine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            while ((inLine \u003d inStream.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String[] inArray \u003d inLine.split(DELIMITER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                int numOfElements \u003d inArray.length;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String type \u003d inArray[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Record newRecord \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case INCOME_TYPE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Entry(INCOME, stringToDouble(inArray[1]), inArray[2],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[3])); //income [AMOUNT] [DESCRIPTION] /on [DATE]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case EXPENSE_TYPE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Entry(EXPENSE, stringToDouble(inArray[1]), inArray[2],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[3])); //expense [AMOUNT] [DESCRIPTION] /on [DATE]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case BUDGET_TYPE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Limit(BUDGET,stringToDouble(inArray[1]), inArray[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case SAVING_TYPE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Limit(SAVING, stringToDouble(inArray[1]), inArray[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case OWE_TYPE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Debt(OWE, inArray[1], stringToDouble(inArray[2]), inArray[3],"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[4]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case BORROW_TYPE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Debt(BORROW, inArray[1], stringToDouble(inArray[2]), inArray[3],"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[4]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case SHORTCUT:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Shortcut(inArray[1], stringToDouble(inArray[2]),inArray[3]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case BILL_TYPE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    ArrayList\u003cString\u003e temp \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    String [] names \u003d inArray[4].split(\", \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    for (int i \u003d 0; i \u003c names.length; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        temp.add(names[i]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Bill(BILL, Integer.parseInt(inArray[1]),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                            stringToDouble(inArray[2]), temp);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    StorageUi.printErrorReadingSaveMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                addToList(type, newRecord);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageWrite.save();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printCreateFolderMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printErrorReadingSaveMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            MainParser.exit(); // TODO: Find out what is supposed to happen here"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static void addToList(String type, Record newRecord) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (type.equals(INCOME_TYPE) || type.equals((EXPENSE_TYPE))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                || type.equals(RECURRING_INCOME_TYPE) || type.equals(RECURRING_EXPENSE_TYPE)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entries.add(newRecord);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(BUDGET_TYPE) || type.equals(SAVING_TYPE)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limits.add(newRecord);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(OWE_TYPE) || type.equals(BORROW_TYPE)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debts.add(newRecord);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(SHORTCUT)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcuts.add(newRecord);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(BILL_TYPE)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            bills.add(newRecord);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 6,
      "yetong1895": 114
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public interface StorageStringList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String PATH \u003d \"./data/dolla.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DATA \u003d \"data\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String PRELOAD_PATH \u003d \"/dolla-preload.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String INCOME_TYPE \u003d \"I\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String EXPENSE_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BUDGET_TYPE \u003d \"BU\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SAVING_TYPE \u003d \"S\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String OWE_TYPE \u003d \"O\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BORROW_TYPE \u003d \"B\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String RECURRING_INCOME_TYPE \u003d \"RI\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String RECURRING_EXPENSE_TYPE \u003d \"RE\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BILL_TYPE \u003d \"BI\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SHORTCUT \u003d \"shortcut\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String INCOME \u003d \"income\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String EXPENSE \u003d \"expense\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BUDGET \u003d \"budget\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SAVING \u003d \"saving\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BILL \u003d \"bill\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 28
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageWrite.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.StorageUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageWrite extends Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of entries in this class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param entries the ArrayList this method going to set to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setEntries(ArrayList\u003cRecord\u003e entries) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.entries \u003d entries;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of limits in this class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param limits the ArrayList this method going to set to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setLimits(ArrayList\u003cRecord\u003e limits) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.limits \u003d limits;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of debts in this class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param debts the ArrayList this method is going to set to."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setDebts(ArrayList\u003cRecord\u003e debts) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.debts \u003d debts;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of bills in this class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param bills the ArrayList this method is going to set to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setBill(ArrayList\u003cRecord\u003e bills) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.bills \u003d bills;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of debts in this class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param shortcuts the ArrayList this method going to set to."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setShortcuts(ArrayList\u003cRecord\u003e shortcuts) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.shortcuts \u003d shortcuts;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will save all the ArrayList into an external text file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static void save() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(PATH)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(entries);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(debts);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(limits);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(shortcuts);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(bills);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            for (Record currSave : storage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String fileContent \u003d currSave.formatSave();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                file.write(fileContent);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                file.write(System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printErrorWritingSaveMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 79
    }
  },
  {
    "path": "src/main/java/dolla/ui/ActionUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ActionUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message for empty stack."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of action command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printEmptyStackError(String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (type !\u003d null \u0026\u0026 type.equals(\"undo\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tSorry, you do not have any command to undo.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type !\u003d null \u0026\u0026 type.equals(\"redo\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tSorry, you do not have any command to redo.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the message of successfully executed an action command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of action command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printActionMessage(String type) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (type !\u003d null \u0026\u0026 type.equals(\"undo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tI have undone the command for you!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type !\u003d null \u0026\u0026 type.equals(\"redo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tI have redone the command for you!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 33
    }
  },
  {
    "path": "src/main/java/dolla/ui/DebtUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtUi extends Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print invalid debt format error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidDebtFormatError() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"\u0027owe(/borrow) [NAME] [AMOUNT] [DESCRIPTION] /due [DURATION]\u0027\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the echo message after adding a bill."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people The number of people."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount The total amount."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList THe name list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printAverageAmount(int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println((line));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tGot it! Total amount: $\" + amount + \" Number of people: \" + people);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the bill per person after splitting: \" + \"$\" + amount / people);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the name list: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c people; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + nameList.get(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the bill list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList the list that stores all the bill added by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printBillList(RecordList recordList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the list of bills you have added:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print error message for invalid bill input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidBillFormatError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"\u0027bill [NUMBER OF PEOPLE] [TOTAL AMOUNT] [NAME 1] [NAME 2]...[NAME NUMBER OF PEOPLE]\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print message after deleting a name."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param name name of the person who paid the bill."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the name list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printRemoveNameMessage(String name, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tGot it! \" + name + \" has paid the bill.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the updated name list: \" + nameList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print invalid paid format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidPaidFormatError() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease follow the format: paid [LIST NUMBER] [NAME]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print invalid bill number message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidBillNumberError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease input a valid bill number.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print message to notify a bill that has been paid by everyone."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printFinishMessage() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tOne bill has cleared\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print empty bill message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printEmptyBillMessage() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tYou don\u0027t have any bills yet.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * print wrong number of people for bill message."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printWrongPeopleNumberMessage(int people) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease enter \" + people + \" names.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print invalid name message."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidNameMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease input a valid name.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * print name not found message."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printNameNotFound() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tThis name is not found in the list.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    //@@ author: omupenguin"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Prints an error message informing the user that the type of debt entered is invalid."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidDebtType() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tThe type can only be \u0027owe\u0027 or \u0027borrow\u0027.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 142
    }
  },
  {
    "path": "src/main/java/dolla/ui/EntryUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryUi extends Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when the user did not properly specify the type of entry to add."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidEntryType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPlease specify the type of entry you want to add: income or expense.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when user tries to add income/expense, but inputs the wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidEntryFormatError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPlease follow the format \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\u0027add income(/expense) [AMOUNT] [DESCRIPTION] /on [DATE]\u0027\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 24
    }
  },
  {
    "path": "src/main/java/dolla/ui/LimitUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.SPACE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitUi extends Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_FORMAT_MSG \u003d \"\\tOOPS! Please follow the format:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String SET_FORMAT_MSG \u003d \"\\t\u0027set [limitType] [AMOUNT] [DURATION]\u0027 to set a new limit.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String SHOW_FORMAT_MSG \u003d \"\\t\u0027remaining [DURATION] [limitType]\u0027 to view your limit goals!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_LIMIT_TYPE_MSG \u003d \"\\tOOPS! Please specify the limit type: budget/saving.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_LIMIT_DURATION_MSG \u003d \"\\tOOPS! Please specify the limit duration: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                                                           + \"daily/weekly/monthly.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String DUPLICATE_LIMITS_MSG \u003d \"\\tOOPS! There can only be one budget/saving for each duration.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXISTING_LIMIT_MSG \u003d \"\\tOOPS! You already have a \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String NO_BUDGET_MSG \u003d \"\\tOOPS! There is no budget set for the duration you specified\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String NO_SAVING_MSG \u003d \"\\tOOPS! There is no saving set for the duration you specified\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_DS_MSG \u003d \"\\tCongratulations! You have reached your daily saving goal!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_WS_MSG \u003d \"\\tCongratulations! You have reached your weekly saving goal!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_MS_MSG \u003d \"\\tCongratulations! You have reached your monthly saving goal!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String WELL_DONE_MSG \u003d \"\\tKeep up the good work!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_DB_MSG \u003d \"\\tOh no! You have reached your daily budget. Time to cut down!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_WB_MSG \u003d \"\\tOh no! You have reached your weekly budget. Time to cut down!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REACHED_MB_MSG \u003d \"\\tOh no! You have reached your monthly budget. Time to cut down!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String NO_ACHIEVED_SAVINGS_MSG \u003d \"\\tOh no! You have not saved any money. Work harder!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_DB_MSG \u003d \"\\tOh no! You have exceeded your daily budget by: $\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_WB_MSG \u003d \"\\tOh no! You have exceeded your weekly budget by: $\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_MB_MSG \u003d \"\\tOh no! You have exceeded your monthly budget by: $\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_DS_MSG \u003d \"\\tCongratulations! You have exceeded your daily saving goal by $\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_WS_MSG \u003d \"\\tCongratulations! You have exceeded your weekly saving goal by $\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXCEEDED_MS_MSG \u003d \"\\tCongratulations! You have exceeded your monthly saving goal by $\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_AMOUNT_MSG \u003d \"\\tYou still have $\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_DS_MSG \u003d \" more to go before you reach your daily saving goal. Keep it up!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_WS_MSG \u003d \" more to go before you reach your weekly saving goal. Keep it up!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_MS_MSG \u003d \" more to go before you reach your monthly saving goal. Keep it up!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_DB_MSG \u003d \"\\tYour remaining daily budget is: $\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_WB_MSG \u003d \"\\tYour remaining weekly budget is: $\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String REMAINING_MB_MSG \u003d \"\\tYour remaining monthly budget is: $\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String VISUAL_REPRESENTATION_MSG \u003d \"\\tHere is a visual representation of your current goal:\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String X \u003d \"x\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String LEFT_BRACKET \u003d \"[\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String RIGHT_BRACKET \u003d \"]\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid limitType Printer."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidLimitTypePrinter() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_LIMIT_TYPE_MSG);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid Limit Duration Printer."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidLimitDurationPrinter() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_LIMIT_DURATION_MSG);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid set command printer."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidSetCommandPrinter() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_FORMAT_MSG);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(SET_FORMAT_MSG);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid Show Remaining Limit Command Printer."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidShowRemainingLimitPrinter() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_FORMAT_MSG);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(SHOW_FORMAT_MSG);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a message with the related details about an existing limit."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param existingLimit The existing limit."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void existingLimitPrinter(Record existingLimit) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String limitType \u003d existingLimit.getType();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String limitDuration \u003d existingLimit.getDuration();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(EXISTING_LIMIT_MSG + limitDuration + SPACE + limitType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + existingLimit.getRecordDetail());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(DUPLICATE_LIMITS_MSG);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_MODIFY);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a message notifying user about a non-existing limit for the specified duration."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type      Type of limit"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void noExistingLimitPrinter(String type) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (type.equals(ParserStringList.LIMIT_TYPE_B)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(NO_BUDGET_MSG);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(NO_SAVING_MSG);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints exceeded budget message."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param budget   Budget exceeded"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the budget"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void exceededBudgetPrinter(double budget, String duration) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_DB_MSG + budget);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_WB_MSG + budget);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_MB_MSG + budget);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints reached budget message."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the budget"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void reachedBudgetPrinter(String duration) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_DB_MSG);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_WB_MSG);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_MB_MSG);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints out message informing user of no savings reached."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void noSavingsPrinter() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(NO_ACHIEVED_SAVINGS_MSG);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints message informing user of their achieved saving goal for the duration specified."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration The duration in which they have achieved their saving goal."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void reachedSavingPrinter(String duration) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_DS_MSG);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_WS_MSG);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REACHED_MS_MSG);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(WELL_DONE_MSG);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints message informing user of exceeded saving goal of the input amount for the given duration."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the saving goal."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param amount   Amount exceeded."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void exceededSavingPrinter(String duration, double amount) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_DS_MSG + amount);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_WS_MSG + amount);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXCEEDED_MS_MSG + amount);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(WELL_DONE_MSG);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a graphical representation of the achieved limit goal."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param total       Total limit goal."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param remaining   Remaining limit amount to reach/cut down."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static void barGraphPrinter(double total, double remaining) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int ratio \u003d (int) Math.ceil((remaining / total) * 58);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(VISUAL_REPRESENTATION_MSG);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.print(\"\\t\" + LEFT_BRACKET);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c ratio; i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.print(X);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d ratio; i \u003c 58; i++) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.print(SPACE);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(RIGHT_BRACKET);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints the remaining budget with a bar graph representation."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param remainingBudget  Remaining budget"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param budget           Initial budget"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param expenses         Expenses of the duration"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration         Duration of the budget"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void remainingBudgetPrinter(double remainingBudget, double budget, double expenses, String duration) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_DB_MSG + remainingBudget);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_WB_MSG + remainingBudget);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_MB_MSG + remainingBudget);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        barGraphPrinter(budget, expenses);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(WELL_DONE_MSG);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints the remaining saving goal with a bar graph representation."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param total            Total saving set"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param remaining        Remaining saving to achieve"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration         Duration of the saving"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void remainingSavingPrinter(double total, double remaining, String duration) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (duration.equals(ParserStringList.LIMIT_DURATION_D)) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_AMOUNT_MSG + remaining + REMAINING_DS_MSG);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (duration.equals(ParserStringList.LIMIT_DURATION_W)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_AMOUNT_MSG + remaining + REMAINING_WS_MSG);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(REMAINING_AMOUNT_MSG + remaining + REMAINING_MS_MSG);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        barGraphPrinter(total, remaining);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(WELL_DONE_MSG);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 258
    }
  },
  {
    "path": "src/main/java/dolla/ui/ListUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ListUi extends Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out a list depending on the mode where \u0027list\u0027 is called."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode    The mode that is used when \u0027list\u0027 is input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordList The RecordList containing the data of the list to be printed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printList(String mode, RecordList recordList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tHere is the list of \" + mode + \"(s) you have added:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when user wants to list down items in the specific list but it\u0027s empty."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode that is used when the \u0027list\u0027 is input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printEmptyListError(String mode) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tYou haven\u0027t added any \" + mode + \" yet!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when LogNum is not associated to a task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index The Record number that does not exist in the specific list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode  The mode where the list is to be accessed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printNoRecordAssocError(int index, String mode) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\t\" + mode + \" number \" + (index + 1) + \" doesn\u0027t seem to exist in my records!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tTry looking through the list of \" + mode + \"again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 48
    }
  },
  {
    "path": "src/main/java/dolla/ui/ModifyUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ModifyUi extends Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out error message when the user inputs the wrong format for \u0027full modify\u0027 command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidFullModifyFormatError() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\u0027modify [LIST NUM]\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out error message when the user inputs the wrong format for \u0027partial modify\u0027 command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidPartialModifyFormatError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tFor quick modify, please follow the format \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\\n\\t\u0027modify [LIST NUM] {/type [TYPE]} {/amount [AMOUNT]} {/desc [DESCRIPTION]} {/on [DATE]}\u0027\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\\n\\tinclude the fields for whatever component you want to change :)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message asking what the user wants to modify the selected log to."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInitialModifyMsg(String mode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tWhat would you want to change this \" + mode + \" to?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPS: You can cancel the modifying of the record by entering \u0027CANCEL\u0027.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to alert the user that the modify command has been cancelled."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printCancelModifyMsg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tOkay, modify command is cancelled! Sorry for the troubles!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints the details of the specified record and is typically called when a is modified,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * so that the user can check the details of the edited record."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param currRecord record to be printed, can be an entry, limit or debt."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void echoModifyRecord(Record currRecord) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve modified this \" + currRecord.getRecordType() + \": \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\t\" + currRecord.getRecordDetail());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to alert user that they did not add the new information that they want to"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * use after indicating the component they want to change."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param component The component that expects a string after it"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printMissingComponentInfoError(String component) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tHey! You forgot to tell me what you want to modify \" + component +  \" to!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 72
    }
  },
  {
    "path": "src/main/java/dolla/ui/RemoveUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class RemoveUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * The method will print the message of the removal of a user defined record."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param record the record to be removed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode dolla is on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void echoRemove(String record, String mode) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this \" + mode + \": \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\t\" + record);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if user have enter an invalid number to be removed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidRemoveMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tPlease enter a valid number to be removed.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 25
    }
  },
  {
    "path": "src/main/java/dolla/ui/SearchUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class SearchUi extends Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the log list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDesc(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode + \":\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d recordList.get().get(i).getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"No results are found :(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by name."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the log list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchName(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode + \":\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d recordList.get().get(i).getName();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\tNo results are found :(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the record list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDate(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode + \":\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d Time.dateToString(recordList.get().get(i).getDate());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\tNo results are found :(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by duration (for limit mode only)."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode the mode"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList the record list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDuration(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode + \":\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d recordList.get().get(i).getDuration();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\tNo results are found :(\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print error message when the search command is invalid."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidSearchFormat() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"\u0027search [COMPONENT] [CONTENT]\u0027\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Prints error message when the user did not properly specify the component to search from."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidDebtSearchComponent() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease specify the component to search from: description, date, name.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Prints error message when the user did not properly specify the component to search from."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidEntrySearchComponent() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease specify the component to search from: description, date.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Prints error message when the user did not properly specify the component to search from."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidLimitSearchComponent() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease specify the component to search from: duration.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Prints error message when the user did not properly specify the component to search from."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidShortcutSearchComponent() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tPlease specify the component to search from: description.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 148
    }
  },
  {
    "path": "src/main/java/dolla/ui/ShortcutUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if user have enter an invalid number."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidShortcutMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tPlease enter a valid shortcut command.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 12
    }
  },
  {
    "path": "src/main/java/dolla/ui/SortUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortUi extends Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static String outputStringTest;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print sorted list according to the type to be sorted."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param list the list to be printed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of input of the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printSortedList(ArrayList\u003cRecord\u003e list, String type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        outputStringTest \u003d line + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            typewriter(\"\\tsorting date.........\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            outputStringTest +\u003d \"\\tsorting date.........\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"description\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            typewriter(\"\\tsorting description.........\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            outputStringTest +\u003d \"\\tsorting description.........\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            typewriter(\"\\tsorting name.........\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            outputStringTest +\u003d \"\\tsorting name.........\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"amount\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            typewriter(\"\\tsorting amount.........\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            outputStringTest +\u003d \"\\tsorting amount.........\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + list.get(i).getRecordDetail());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            outputStringTest +\u003d \"\\t\" + listNum + \". \" + list.get(i).getRecordDetail() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        outputStringTest +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the invalid message for invalid sort type."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidSort(String mode) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tYou have enter a invalid sort command!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"entry\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount/date/description].\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"debt\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount/date/description/name].\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"limit\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount].\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "yetong1895": 71
    }
  },
  {
    "path": "src/main/java/dolla/ui/StorageUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the message for successfully loading the save."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printStorageLoadMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tYour save data has been loaded :)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the message after creating a folder if the folder needed is not found."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printCreateFolderMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tLooks like it\u0027s your first time, let me create a save file for you :)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if reading the save file fail."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printErrorReadingSaveMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"*** there was an error reading dolla.txt ***\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message of writing to save file fail."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printErrorWritingSaveMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"***Error writing to dolla.txt***\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 1,
      "yetong1895": 38
    }
  },
  {
    "path": "src/main/java/dolla/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.ModeStringList.MODE_SHORTCUT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * duke.Ui is a class that handles all interactions to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public abstract class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String MSG_MODIFY \u003d \"\\tPlease use the format \u0027modify [LIST NUM]\u0027 if you wish to modify it.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXISTING_RECORD_MSG \u003d \"\\tOOPS! You already have the following \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_AMOUNT_MSG \u003d \"\\tOOPS! The amount you have entered is invalid.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String VALID_AMOUNT_MSG \u003d \"\\tPlease key in a non-zero positive value with an appropriate \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                                                  + \"decimal point that is less than 1,000,000.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXECUTE_SHORTCUT_MSG \u003d \"\\tYou can execute \u0027shortcuts\u0027 to view your list of shortcuts!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_DATE_MSG \u003d \"\\tPlease use the format \u0027DD/MM/YYYY\u0027!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_NUMBER_MSG \u003d \" is not a number. Please use a number instead!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String INVALID_COMMAND_MSG \u003d \"\\tOOPS! The command is invalid. Please enter a valid command!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String NO_REMINDERS_MSG \u003d \"\\tThere are no reminders :)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String EXIT_MSG \u003d \"\\tBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String newLogo \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t /$$$$$$$            /$$ /$$  \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$__  $$          | $$| $$   \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$  \\\\ $$  /$$$$$$ | $$| $$  /$$$$$$ \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$  | $$ /$$__  $$| $$| $$ |____  $$\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$  | $$| $$  \\\\ $$| $$| $$  /$$$$$$$\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$  | $$| $$  | $$| $$| $$ /$$__  $$\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t| $$$$$$$/|  $$$$$$/| $$| $$|  $$$$$$$\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "          + \"\\t|_______/  \\\\______/ |__/|__/ \\\\_______/\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String line \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String version \u003d \"\\tVersion 1.4\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static String welcomeMsg \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        \"\\tHello from\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        + newLogo"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + version"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + line"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + \"\\n\\tI help keep track of your finance!\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + \"\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //private static String dollaMode \u003d ANSI_CYAN + \"\\t\\n°º¤ø,¸¸,ø¤º°`°º¤ø,¸ MODE: DOLLA \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //        + \"  ¸,ø¤°º¤ø,¸¸,ø¤º°`°º¤ø,¸\\n\" + ANSI_RESET;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String dollaMode \u003d ANSI_CYAN + \"\\n\\t( o_o)O ~~ MODE: DOLLA \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            + \" ~~ \\n\" + ANSI_RESET;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints DOLLA logo and welcome message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(welcomeMsg);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(dollaMode);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints Dolla\u0027s new mode after being updated."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param newMode The new mode to be switched."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printModeUpdated(String newMode) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tGot it! Mode changed to \" + newMode + \"!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //System.out.println(ANSI_CYAN + \"\\t°º¤ø,¸¸,ø¤º°`°º¤ø,¸ MODE:  \" + newMode.toUpperCase()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + \"  ¸,ø¤°º¤ø,¸¸,ø¤º°`°º¤ø,¸\\n\" + ANSI_RESET);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(ANSI_CYAN + \"\\t( *_*)O ~~ MODE:  \" + newMode.toUpperCase()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"  \\n\" + ANSI_RESET);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * This method prints the strings of text from \u0027s\u0027 with the proper format. Each element"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * from \u0027s\u0027 is a line of text to be printed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param s containing the messages to be printed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printMsg(String... s) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        final StringBuilder messageAccumulator \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (String str : s) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            messageAccumulator.append(str);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + messageAccumulator);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints the details of the specified record and is typically called when a new record is entered,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * so that the user can check the details of the created record."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param currRecord record to be printed, can be an entry, limit or debt."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void echoAddRecord(Record currRecord) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this \" + currRecord.getRecordType() + \": \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + currRecord.getRecordDetail());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (currRecord.getRecordType().equals(MODE_SHORTCUT)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(EXECUTE_SHORTCUT_MSG);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an error message when date in not in the format \u0027DD/MM/YYYY\u0027."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printDateFormatError() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_DATE_MSG);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints error message when string parsed is not an integer."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param str to be parsed to an integer"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printInvalidNumberError(String str) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + str + INVALID_NUMBER_MSG);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints error message when command given is invalid."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidCommandError() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(INVALID_COMMAND_MSG);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Print no reminder msg."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printNoReminderMsg() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(NO_REMINDERS_MSG);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Print exit msg."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printExitMsg() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(EXIT_MSG);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to inform user that the command is not implemented yet."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printUpcomingFeature() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tSorry, I can\u0027t do that yet. Stay tuned for a later version and maybe my creators\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"will teach me how to do that. :(\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will let the thread sleep for the \"time\" amount of time."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param time the time for the thread to sleep"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void sleep(int time) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Thread.sleep(time);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Thread.currentThread().interrupt();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print input String in typewriter style."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param message the message to print in typewriter style."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void typewriter(String message) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for (int i \u003d 0; i \u003c message.length(); i++) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.printf(\"%c\",message.charAt(i));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            sleep(10);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if user is trying trying to remove a non-existing record."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param number the total number of record."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printNumberOfRecords(int number) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tSorry, you only have \" + number + \" record(s).\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printDateRequest() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tPlease enter your new entry date in the format \u0027DD/MM/YYYY\u0027\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Prints a message with the related details about an existing record."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param record The existing record."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode   The mode Dolla is on."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void existingRecordPrinter(Record record, String mode) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(EXISTING_RECORD_MSG + mode + \":\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\t\" + record.getRecordDetail());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(MSG_MODIFY);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Prints a message reminding user to input a valid amount."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void invalidAmountPrinter() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(INVALID_AMOUNT_MSG);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(VALID_AMOUNT_MSG);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printSingleOverview(double todayOverview) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Prints a message to alert user that the list to be iterated through is empty."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode record name to be used"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printEmptyListError(String mode) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tI\u0027m sorry, but there doesn\u0027t seem to be anything in \""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + mode + \"for me to through. \");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"Try adding a new \" + mode + \"and try again!\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 63,
      "Weng-Kexin": 91,
      "tatayu": 9,
      "yetong1895": 95,
      "-": 1
    }
  },
  {
    "path": "src/main/java/dolla/ui/ViewUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ViewUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String AnsiColor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String sign \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static double absAmount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out a line of entry that matches the give date. ie \"[+12] [Description]\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money to be displayed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param desc description of entry"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printViewSingleExpense(double amount, String desc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        AnsiColor \u003d setColor(amount);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        absAmount \u003d Math.abs(amount);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(AnsiColor + \"\\t[\" + sign + absAmount + \"] [\" + desc + \"]\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + ANSI_RESET);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out the overall sum of the expenses and incomes for the view date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param sum overall sum of expenses and income"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date String version of the view date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printOverallExpense(double sum, String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(AnsiColor + \"\\n\\t\u003d\u003dOverall Expense for \" + date + \": \" + sum"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + ANSI_RESET);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns the ANSI color to be used depending on whether amount is positive or negative."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also sets the sign."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money of the entry."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return ANSI color corresponding to whether amount is positive or negative."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String setColor(double amount) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (amount \u003c 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            sign \u003d \"-\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return ANSI_RED;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (amount \u003e 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            sign \u003d \"+\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return ANSI_GREEN;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return ANSI_RESET;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to alert user that there are no entries with the requested date."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param dateStr String related to the date to be printed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printNoRelevantExpense(String dateStr) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tI couldn\u0027t find any entries from \" + dateStr"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \", so I guess your overall expense for \" + dateStr + \"is 0! Hurray!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out a reminder on how to properly use the view command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidViewFormatError() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPlease follow the format for view!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tview today\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tor\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tview [DATE]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printStartLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 75
    }
  },
  {
    "path": "src/test/java/dolla/DollaTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class DollaTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 10,
      "Weng-Kexin": 1,
      "-": 1
    }
  },
  {
    "path": "src/test/java/dolla/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Limit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Shortcut;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e entryListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e debtListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e limitListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e shortcutListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will setup the storage for testing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setupStorage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        entryListTest.add(new Entry(\"income\",256,\"storage test1\", LocalDate.parse(\"2001-12-03\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        entryListTest.add(new Entry(\"expense\",123,\"storage test2\", LocalDate.parse(\"2011-12-03\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtListTest.add(new Debt(\"owe\",\"tata\",256,\"storage test4\", LocalDate.parse(\"2002-12-03\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtListTest.add(new Debt(\"borrow\",\"tata\",123,\"storage test5\", LocalDate.parse(\"2012-12-03\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        limitListTest.add(new Limit(\"budget\",256,\"weekly\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        limitListTest.add(new Limit(\"limit\",123,\"monthly\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        limitListTest.add(new Limit(\"budget\",521,\"daily\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"income\",256,\"storage test6\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"expense\",123,\"storage test7\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(entryListTest);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setDebts(debtListTest);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setLimits(limitListTest);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setShortcuts(shortcutListTest);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void storageGetListTest() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        setupStorage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e entryTest \u003d Storage.getEntriesFromSave();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record entry \u003d entryTest.get(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String expected \u003d \"income 256.0 storage test1 /on 03/12/2001\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,entry.getUserInput());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        entry \u003d entryTest.get(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"expense 123.0 storage test2 /on 03/12/2011\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,entry.getUserInput());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e debtList \u003d Storage.getDebtsFromSave();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debt \u003d debtList.get(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"owe tata 256.0 storage test4 /due 03/12/2002\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,debt.getUserInput());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debt \u003d debtList.get(1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"borrow tata 123.0 storage test5 /due 03/12/2012\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,debt.getUserInput());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e limitList \u003d Storage.getLimitsFromSave();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record limit \u003d limitList.get(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"budget 256.0 weekly\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,limit.getUserInput());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        limit \u003d limitList.get(1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"limit 123.0 monthly\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,limit.getUserInput());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        limit \u003d limitList.get(2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"budget 521.0 daily\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,limit.getUserInput());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e shortcutList \u003d Storage.getShortcutsFromSave();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record shortcut \u003d shortcutList.get(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"income 256.0 storage test6\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,shortcut.getUserInput());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcut \u003d shortcutList.get(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"expense 123.0 storage test7\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,shortcut.getUserInput());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.clearStorage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 90
    }
  },
  {
    "path": "src/test/java/dolla/action/ActionTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.DebtState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.RedoStateList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.State;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ActionTest implements ActionTestStringList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e testList1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e testList2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private State createDebtState1() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.add(new Debt(OWE, \"tata\", 20, \"food\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2019-01-01\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.add(new Debt(BORROW, \"yuyu\", 40, \"drink\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2019-01-02\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.add(new Debt(OWE, \"mama\", 30, \"bill\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2019-01-03\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.add(new Debt(BORROW, \"baba\", 60, \"dinner\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2019-01-04\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new DebtState(testList1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private State createDebtState2() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.add(new Debt(BORROW, \"aikpeng\", 126, \"bushi\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2011-01-01\")));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.add(new Debt(OWE, \"yetong\", 245, \"sushi\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2012-01-02\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.add(new Debt(OWE, \"kexin\", 91, \"disco\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2013-01-03\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.add(new Debt(OWE, \"xiaoxue\", 1151, \"wine\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2014-01-04\")));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.add(new Debt(BORROW, \"bahaba\", 521, \"rebina\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2015-01-04\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new DebtState(testList2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testState() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State debtState1 \u003d createDebtState1();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State debtState2 \u003d createDebtState2();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e debtTestList1 \u003d new ArrayList\u003c\u003e(debtState1.getDebtState());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e debtTestList2 \u003d new ArrayList\u003c\u003e(debtState2.getDebtState());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(4,debtTestList1.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(5, debtTestList2.size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest1 \u003d debtTestList1.get(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST1,debtTest1.getRecordDetail());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest2 \u003d debtTestList1.get(1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST2,debtTest2.getRecordDetail());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest3 \u003d debtTestList1.get(2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST3,debtTest3.getRecordDetail());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest4 \u003d debtTestList1.get(3);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST4,debtTest4.getRecordDetail());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest5 \u003d debtTestList2.get(0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST5, debtTest5.getRecordDetail());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest6 \u003d debtTestList2.get(1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST6, debtTest6.getRecordDetail());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest7 \u003d debtTestList2.get(2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST7, debtTest7.getRecordDetail());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest8 \u003d debtTestList2.get(3);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST8, debtTest8.getRecordDetail());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest9 \u003d debtTestList2.get(4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST9, debtTest9.getRecordDetail());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //Unit testing for RedoStateList and UndoStateList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testStateList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //check for UndoStateList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        UndoStateList.addState(createDebtState1(), MODE_DEBT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        UndoStateList.addState(createDebtState2(), MODE_DEBT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2, UndoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State undoDebtState1 \u003d UndoStateList.getState(MODE_DEBT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1, UndoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State undoDebtState2 \u003d UndoStateList.getState(MODE_DEBT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0, UndoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assert undoDebtState1 !\u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assert undoDebtState2 !\u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e undoDebtTestList1 \u003d new ArrayList\u003c\u003e(undoDebtState1.getDebtState());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e undoDebtTestList2 \u003d new ArrayList\u003c\u003e(undoDebtState2.getDebtState());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(5,undoDebtTestList1.size()); //check if createDebtState2 pop first"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(4,undoDebtTestList2.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest1 \u003d undoDebtTestList1.get(0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST5, debtTest1.getRecordDetail());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest2 \u003d undoDebtTestList1.get(1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST6, debtTest2.getRecordDetail());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest3 \u003d undoDebtTestList1.get(2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST7, debtTest3.getRecordDetail());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest4 \u003d undoDebtTestList1.get(3);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST8, debtTest4.getRecordDetail());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest5 \u003d undoDebtTestList1.get(4);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST9, debtTest5.getRecordDetail());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest6 \u003d undoDebtTestList2.get(0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST1, debtTest6.getRecordDetail());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest7 \u003d undoDebtTestList2.get(1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST2, debtTest7.getRecordDetail());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest8 \u003d undoDebtTestList2.get(2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST3, debtTest8.getRecordDetail());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record debtTest9 \u003d undoDebtTestList2.get(3);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST4, debtTest9.getRecordDetail());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.clear();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //check for RedoStateList"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.addState(createDebtState2(), MODE_DEBT);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.addState(createDebtState1(), MODE_DEBT);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2,RedoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State redoDebtState1 \u003d RedoStateList.getState(MODE_DEBT);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1,RedoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        State redoDebtState2 \u003d RedoStateList.getState(MODE_DEBT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0,RedoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assert redoDebtState1 !\u003d null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assert redoDebtState2 !\u003d null;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e redoDebtTestList1 \u003d new ArrayList\u003c\u003e(redoDebtState1.getDebtState());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e redoDebtTestList2 \u003d new ArrayList\u003c\u003e(redoDebtState2.getDebtState());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(4,redoDebtTestList1.size()); //check if createDebtState1 pop first"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(5,redoDebtTestList2.size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest1 \u003d redoDebtTestList1.get(0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest2 \u003d redoDebtTestList1.get(1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest3 \u003d redoDebtTestList1.get(2);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest4 \u003d redoDebtTestList1.get(3);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest5 \u003d redoDebtTestList2.get(0);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest6 \u003d redoDebtTestList2.get(1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest7 \u003d redoDebtTestList2.get(2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest8 \u003d redoDebtTestList2.get(3);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtTest9 \u003d redoDebtTestList2.get(4);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST1,debtTest1.getRecordDetail());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST2,debtTest2.getRecordDetail());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST3,debtTest3.getRecordDetail());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST4,debtTest4.getRecordDetail());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST5, debtTest5.getRecordDetail());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST6, debtTest6.getRecordDetail());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST7, debtTest7.getRecordDetail());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST8, debtTest8.getRecordDetail());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_TEST9, debtTest9.getRecordDetail());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //check for redo clear"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.addState(createDebtState2(), MODE_DEBT);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.addState(createDebtState1(), MODE_DEBT);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2,RedoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RedoStateList.clear(MODE_DEBT);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0,RedoStateList.getSize(MODE_DEBT));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList1.clear();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        testList2.clear();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 182
    }
  },
  {
    "path": "src/test/java/dolla/action/ActionTestStringList.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public interface ActionTestStringList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String MODE_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String MODE_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String MODE_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST1 \u003d \"[owe] [tata] [$20.0] [food] [/due 01/01/2019]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST2 \u003d \"[borrow] [yuyu] [$40.0] [drink] [/due 02/01/2019]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST3 \u003d \"[owe] [mama] [$30.0] [bill] [/due 03/01/2019]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST4 \u003d \"[borrow] [baba] [$60.0] [dinner] [/due 04/01/2019]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST5 \u003d \"[borrow] [aikpeng] [$126.0] [bushi] [/due 01/01/2011]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST6 \u003d \"[owe] [yetong] [$245.0] [sushi] [/due 02/01/2012]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST7 \u003d \"[owe] [kexin] [$91.0] [disco] [/due 03/01/2013]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST8 \u003d \"[owe] [xiaoxue] [$1151.0] [wine] [/due 04/01/2014]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_TEST9 \u003d \"[borrow] [bahaba] [$521.0] [rebina] [/due 04/01/2015]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_INPUT1 \u003d \"add expense 200 buy food /on 12/12/2019\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_INPUT2 \u003d \"add income 300 tution /on 21/12/2019\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_INPUT3 \u003d \"add expense 6 gongcha /on 11/11/2019\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_INPUT4 \u003d \"add income 40 sell pen /on 01/10/2019\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_OUTPUT1 \u003d \"expense 200.0 buy food /on 12/12/2019\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_OUTPUT2 \u003d \"income 300.0 tution /on 21/12/2019\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_OUTPUT3 \u003d \"expense 6.0 gongcha /on 11/11/2019\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String TEST_OUTPUT4 \u003d \"income 40.0 sell pen /on 01/10/2019\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 36
    }
  },
  {
    "path": "src/test/java/dolla/action/IntegratedActionTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.RedoStateList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.action.state.UndoStateList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.DollaData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class IntegratedActionTest implements ActionTestStringList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testUndoAndRedo1() throws DollaException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        DollaData dollaData \u003d new DollaData();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d MainParser.handleInput(dollaData.getMode(), MODE_ENTRY);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1,dollaData.getListSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record record \u003d dollaData.getRecordFromList(MODE_ENTRY, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(TEST_OUTPUT1, record.getUserInput());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_REDO);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2,dollaData.getListSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        record \u003d dollaData.getRecordFromList(MODE_ENTRY, 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(TEST_OUTPUT2, record.getUserInput());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0,dollaData.getListSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0, UndoStateList.getSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2, RedoStateList.getSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testUndoAndRedo2() throws DollaException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        DollaData dollaData \u003d new DollaData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d MainParser.handleInput(dollaData.getMode(), MODE_ENTRY);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1,dollaData.getListSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record record \u003d dollaData.getRecordFromList(MODE_ENTRY, 0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(TEST_OUTPUT3, record.getUserInput());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), TEST_INPUT4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        record \u003d dollaData.getRecordFromList(MODE_ENTRY, 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(TEST_OUTPUT4,record.getUserInput());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0, RedoStateList.getSize(MODE_ENTRY)); //check if redo have been cleared."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c \u003d MainParser.handleInput(dollaData.getMode(), COMMAND_UNDO);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        c.execute(dollaData);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0,dollaData.getListSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0, UndoStateList.getSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2, RedoStateList.getSize(MODE_ENTRY));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 86
    }
  },
  {
    "path": "src/test/java/dolla/command/ActionCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ActionCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String expected;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void actionCommandTest1() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command commandTest \u003d new ActionCommand(ModeStringList.MODE_ENTRY, REDO);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"redo in entry\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void actionCommandTest2() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command commandTest \u003d new ActionCommand(ModeStringList.MODE_DEBT, UNDO);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"undo in debt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void actionCommandTest3() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command commandTest \u003d new ActionCommand(ModeStringList.MODE_LIMIT, REDO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"redo in limit\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void actionCommandTest4() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command commandTest \u003d new ActionCommand(ModeStringList.MODE_SHORTCUT, UNDO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expected \u003d \"undo in shortcut\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expected,commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 41
    }
  },
  {
    "path": "src/test/java/dolla/command/AddDebtCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class AddDebtCommandTest implements ParserStringList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addDebtCommandTest1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command commandTest \u003d new AddDebtsCommand(DEBT_COMMAND_OWE, \"tata\", 10, \"food\", LocalDate.parse(\"2019-11-12\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String expected \u003d \"owe tata 10.0 food 2019-11-12\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addDebtCommandTest2() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command commandTest \u003d new AddDebtsCommand(DEBT_COMMAND_BORROW, \"xx\", 200,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \"fish\", LocalDate.parse(\"2019-11-11\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String expected \u003d \"borrow xx 200.0 fish 2019-11-11\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 26
    }
  },
  {
    "path": "src/test/java/dolla/command/AddLimitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class AddLimitCommandTest implements ParserStringList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addLimitCommandTest1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command commandTest \u003d new AddLimitCommand(LIMIT_TYPE_S, 50, LIMIT_DURATION_D);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"saving 50.0 daily\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addLimitCommandTest2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command commandTest \u003d new AddLimitCommand(LIMIT_TYPE_B, 50, LIMIT_DURATION_D);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"budget 50.0 daily\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addLimitCommandTest3() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command commandTest \u003d new AddLimitCommand(LIMIT_TYPE_S, 50, LIMIT_DURATION_M);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"saving 50.0 monthly\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addLimitCommandTest4() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command commandTest \u003d new AddLimitCommand(LIMIT_TYPE_S, 500, LIMIT_DURATION_W);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"saving 500.0 weekly\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 38
    }
  },
  {
    "path": "src/test/java/dolla/command/ErrorCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class ErrorCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void errorCommandTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command commandTest \u003d new ErrorCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, commandTest.getCommandInfo());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 15
    }
  },
  {
    "path": "src/test/java/dolla/command/ExitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void exitCommandTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedCommandInfo \u003d \"Exit\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedCommandInfo, c.getCommandInfo());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 15
    }
  },
  {
    "path": "src/test/java/dolla/command/ShowRemainingLimitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.parser.ParserStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class ShowRemainingLimitCommandTest implements ParserStringList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showDailyBudgetTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_D, LIMIT_TYPE_B);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_D + SPACE + LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showWeeklyBudgetTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_W, LIMIT_TYPE_B);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_W + SPACE + LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showMonthlyBudgetTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_M, LIMIT_TYPE_B);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_M + SPACE + LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showDailySavingTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_D, LIMIT_TYPE_S);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_D + SPACE + LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showWeeklySavingTest() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_W, LIMIT_TYPE_S);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_W + SPACE + LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void showMonthlySavingTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command weeklyBudgetCommand \u003d new ShowRemainingLimitCommand(LIMIT_DURATION_M, LIMIT_TYPE_S);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d LIMIT_DURATION_M + SPACE + LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, weeklyBudgetCommand.getCommandInfo());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 52
    }
  },
  {
    "path": "src/test/java/dolla/model/DebtListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt newDebt1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"owe\", \"tatayu\", 30,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \"supper\", LocalDate.parse(\"2019-11-01\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt newDebt2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"borrow\", \"xx\", 10,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \"ticket\", LocalDate.parse(\"2019-10-27\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt newDebt3() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"borrow\", \"Eve\", 3,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \"tea\", LocalDate.parse(\"2019-12-02\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt newDebt4() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"owe\", \"tata\", 50,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \"lunch\", LocalDate.parse(\"2019-11-29\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private DebtList newDebtList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        ArrayList\u003cRecord\u003e newRecordList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        newRecordList.add(newDebt1());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        newRecordList.add(newDebt2());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        newRecordList.add(newDebt3());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        newRecordList.add(newDebt4());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(4,newRecordList.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new DebtList(newRecordList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void removeFromList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtList newDebtList \u003d newDebtList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        newDebtList.removeFromList(2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(3, newDebtList.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 47,
      "yetong1895": 1
    }
  },
  {
    "path": "src/test/java/dolla/model/DebtTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt createNewDebt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"owe\", \"tata\", 20, \"food\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                LocalDate.parse(\"2019-01-01\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"tata\", newDebt.getName());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void amountToMoney() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"$20.0\", newDebt.amountToMoney());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"food\", newDebt.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(LocalDate.parse(\"2019-01-01\"), newDebt.getDate());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"owe tata 20.0 food /due 01/01/2019\", newDebt.getUserInput());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void formatSave() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"O | tata | 20.0 | food | 01/01/2019\", newDebt.formatSave());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getRecordDetail() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"[owe] [tata] [$20.0] [food] [/due 01/01/2019]\", newDebt.getRecordDetail());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 56
    }
  },
  {
    "path": "src/test/java/dolla/model/EntryListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry1() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"expense\", 100, \"Expense Description\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"2001-12-03\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry2() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"income\", 200, \"Income Description\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"1111-11-11\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry3() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"income\", 300, \"New Entry\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"1000-01-01\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private EntryList createNewEntryList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cRecord\u003e newRecordList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newRecordList.add(createNewEntry1());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newRecordList.add(createNewEntry2());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new EntryList(newRecordList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void removeFromList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        EntryList newEntryList \u003d createNewEntryList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newEntryList.removeFromList(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(1, newEntryList.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 39
    }
  },
  {
    "path": "src/test/java/dolla/model/EntryTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"expense\", 100, \"Expense Description\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"2001-12-03\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void amountToMoney() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"$100.0\", newEntry.amountToMoney());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getLogText() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"[expense] [$100.0] [Expense Description] [/on 03/12/2001]\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                newEntry.getRecordDetail());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void formatSave() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"E | 100.0 | Expense Description | 03/12/2001\", newEntry.formatSave());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"Expense Description\", newEntry.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"expense 100.0 Expense Description /on 03/12/2001\", newEntry.getUserInput());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 47
    }
  },
  {
    "path": "src/test/java/dolla/model/LimitListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_DURATION_D;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_DURATION_W;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit newBudget \u003d createNewLimit(LIMIT_TYPE_B, 5, LIMIT_DURATION_D);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit newSaving \u003d createNewLimit(LIMIT_TYPE_S, 50, LIMIT_DURATION_W);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit createNewLimit(String limitType, double amount, String limitDuration) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return new Limit(limitType, amount, limitDuration);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private ArrayList\u003cRecord\u003e createEmptyList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        ArrayList\u003cRecord\u003e limitList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return limitList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private ArrayList\u003cRecord\u003e createPopulatedList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        ArrayList\u003cRecord\u003e limitList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitList.add(newBudget);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitList.add(newSaving);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return limitList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addTest1() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        ArrayList\u003cRecord\u003e newLimitList \u003d createEmptyList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        newLimitList.add(newBudget);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        newLimitList.add(newSaving);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(2, newLimitList.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addTest2() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        ArrayList\u003cRecord\u003e newLimitList \u003d createPopulatedList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        newLimitList.add(newBudget);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        newLimitList.add(newSaving);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(4, newLimitList.size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromListTest() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        ArrayList\u003cRecord\u003e newLimitList \u003d createPopulatedList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        newLimitList.remove(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(1, newLimitList.size());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "Weng-Kexin": 56
    }
  },
  {
    "path": "src/test/java/dolla/model/LimitTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_DURATION_D;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_DURATION_W;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_TYPE_B;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.parser.ParserStringList.LIMIT_TYPE_S;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit newBudget \u003d createNewLimit(LIMIT_TYPE_B, 5, LIMIT_DURATION_D);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit newSaving \u003d createNewLimit(LIMIT_TYPE_S, 50, LIMIT_DURATION_W);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Limit createNewLimit(String limitType, double amount, String limitDuration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return new Limit(limitType, amount, limitDuration);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getBudgetDetailTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"[budget] [$5.0] [daily]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, newBudget.getRecordDetail());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void budgetFormatSaveTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"BU | 5.0 | daily\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, newBudget.formatSave());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void budgetAmountToMoneyTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(\"$5.0\", newBudget.amountToMoney());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getNewBudgetTypeTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(LIMIT_TYPE_B, newBudget.getType());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getNewBudgetDurationTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(LIMIT_DURATION_D, newBudget.getDuration());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getSavingDetailTest() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"[saving] [$50.0] [weekly]\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, newSaving.getRecordDetail());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void savingFormatSaveTest() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected \u003d \"S | 50.0 | weekly\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected, newSaving.formatSave());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void savingAmountToMoneyTest() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(\"$50.0\", newSaving.amountToMoney());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getNewSavingTypeTest() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(LIMIT_TYPE_S, newSaving.getType());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void getNewSavingDurationTest() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(LIMIT_DURATION_W, newSaving.getDuration());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 73
    }
  },
  {
    "path": "src/test/java/dolla/model/ShortcutListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e shortcutListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void addToShortcutListTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"income\",255, \"shortcut testing 1\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1,shortcutListTest.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"expense\",123, \"shortcut testing 2\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2,shortcutListTest.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"income\",556, \"shortcut testing 3\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(3,shortcutListTest.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(new Shortcut(\"expense\",12, \"shortcut testing 4\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(4,shortcutListTest.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void removeFromShortcutListTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        addToShortcutListTest();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.remove(3);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(3,shortcutListTest.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.remove(2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(2,shortcutListTest.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.remove(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(1,shortcutListTest.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.remove(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(0,shortcutListTest.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 39
    }
  },
  {
    "path": "src/test/java/dolla/model/ShortcutTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private Shortcut createShortcut() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new Shortcut(\"income\",223,\"shortcut testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void amountToMoney() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Shortcut shortcutTest \u003d createShortcut();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(\"$223.0\", shortcutTest.amountToMoney());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void getLogText() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Shortcut shortcutTest \u003d createShortcut();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(\"[shortcut] [income] [$223.0] [shortcut testing]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                shortcutTest.getRecordDetail());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void formatSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Shortcut shortcutTest \u003d createShortcut();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(\"shortcut | income | 223.0 | shortcut testing\", shortcutTest.formatSave());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Shortcut shortcutTest \u003d createShortcut();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(\"shortcut testing\", shortcutTest.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Shortcut shortcutTest \u003d createShortcut();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(\"income 223.0 shortcut testing\", shortcutTest.getUserInput());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 43
    }
  },
  {
    "path": "src/test/java/dolla/parser/DebtParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String inputLine;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String expected;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidListInputTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"debts\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"debt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidListInputTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"debt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidOweCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"owe tata 10 food /due 12/11/2019\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"owe tata 10.0 food 2019-11-12\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidOweCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"owe tata\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidBorrowCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"borrow tata 10 food /due 12/11/2019\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"borrow tata 10.0 food 2019-11-12\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidBorrowCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"borrow tata\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidSearchCommand() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"search name tata\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"name tata\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidSearchCommand() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"search tata\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidRemoveCommand() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"remove 3\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"debt\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidRemoveCommand() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String inputLine \u003d \"remove three\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidInputCommand() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String inputLine \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidSortTest1() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"sort amount\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"sort amount in debt\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidSortTest2() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"sort date\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"sort date in debt\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidSortTest3() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"sort name\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"sort name in debt\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseValidSortTest4() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"sort description\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"sort description in debt\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void parseInvalidSortTest() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        inputLine \u003d \"sort random\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Command command \u003d debtsParser.parseInput();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        expected \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(expected, command.getCommandInfo());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 157
    }
  },
  {
    "path": "src/test/java/dolla/parser/DollaParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.exception.DollaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String inputLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String expectedResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Private DollaParser createNewDollaParser(String inputLine) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //    return new DollaParser(inputLine);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void parseInputAddSuccess() throws DollaException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        inputLine \u003d \"add expense 100 Expense Description /on 03/12/2001\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //expectedResult \u003d \"AddEntryCommand{ type: expense, amount: 100.0, \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        \"description: Expense Description, date: 03/12/2001, prePosition: -1 }\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        expectedResult \u003d \"AddEntryCommand{ expense, 100.0, Expense Description, 03/12/2001}\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Command command \u003d dollaParser.parseInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(expectedResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void parseInputAddInvalidInput() throws DollaException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        inputLine \u003d \"add potatoes /on 03/12/2001\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        expectedResult \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Command command \u003d dollaParser.parseInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(expectedResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 38,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/test/java/dolla/parser/LimitParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String expectedInvalidResult \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseValidListInputTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitParser limitParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine1 \u003d \"limits\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected1 \u003d \"limit\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected1, command.getCommandInfo());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine2 \u003d \"set budget 10 daily\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected2 \u003d \"budget 10.0 daily\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected2, command.getCommandInfo());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine3 \u003d \"remove 1\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected3 \u003d \"limit\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected3, command.getCommandInfo());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine4 \u003d \"remaining daily budget\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected4 \u003d \"daily budget\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine4);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected4, command.getCommandInfo());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine5 \u003d \"remaining monthly budget\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected5 \u003d \"monthly budget\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine5);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected5, command.getCommandInfo());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine6 \u003d \"remaining weekly saving\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expected6 \u003d \"weekly saving\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine6);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expected6, command.getCommandInfo());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInvalidInputTest() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitParser limitParser;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine1 \u003d \"limit\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine2 \u003d \"set budget 5\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine3 \u003d \"remove five\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine3);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine4 \u003d \"remaining\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine4);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine5 \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine5);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine6 \u003d \"     set     \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine6);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine7 \u003d \"hello\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        limitParser \u003d new LimitParser(inputLine7);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInvalidSortTest1() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine \u003d \"sort date\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitParser limitParser \u003d new LimitParser(inputLine);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInvalidSortTest2() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String inputLine \u003d \"sort\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitParser limitParser \u003d new LimitParser(inputLine);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command \u003d limitParser.parseInput();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedInvalidResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 111
    }
  },
  {
    "path": "src/test/java/dolla/parser/MainParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class MainParserTest implements ModeStringList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String errorCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInDollaModeTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String mode \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String emptyStr \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, emptyStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(errorCommand, command.getCommandInfo());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String space \u003d \" \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, space);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(errorCommand, command.getCommandInfo());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String bye \u003d \"bye\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedStr1 \u003d \"Exit\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, bye);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedStr1, command.getCommandInfo());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String switchEntry \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, switchEntry);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(switchEntry, command.getCommandInfo());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String switchLimit \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, switchLimit);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(switchLimit, command.getCommandInfo());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String switchDebt \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, switchDebt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(switchDebt, command.getCommandInfo());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String switchShortcut \u003d MODE_SHORTCUT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, switchShortcut);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(switchShortcut, command.getCommandInfo());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInEntryModeTest() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String mode \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String viewEntries \u003d \"entries\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, viewEntries);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(MODE_ENTRY, command.getCommandInfo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String addIncomeStr \u003d \"add income 40 tuition /on 12/11/2019\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedStr \u003d \"AddEntryCommand{ income, 40.0, tuition, 12/11/2019}\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, addIncomeStr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedStr, command.getCommandInfo());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String addExpenseStr \u003d \"add expense 4 coffee /on 12/12/2019\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedStr1 \u003d \"AddEntryCommand{ expense, 4.0, coffee, 12/12/2019}\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, addExpenseStr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedStr1, command.getCommandInfo());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String invalidStr \u003d \"add income\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, invalidStr);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(errorCommand, command.getCommandInfo());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void parseInLimitModeTest() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String mode \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String viewLimits \u003d \"limits\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, viewLimits);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(MODE_LIMIT, command.getCommandInfo());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String addValidBudgetStr \u003d \"set budget 50 daily\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedStr \u003d \"budget 50.0 daily\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, addValidBudgetStr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedStr, command.getCommandInfo());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String invalidAddBudgetStr \u003d \"set budget daily\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, invalidAddBudgetStr);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(errorCommand, command.getCommandInfo());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String switchDolla \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, switchDolla);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(switchDolla, command.getCommandInfo());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String validShowStr \u003d \"remaining weekly saving\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String expectedStr2 \u003d \"weekly saving\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, validShowStr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(expectedStr2, command.getCommandInfo());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String invalidShowStr \u003d \"remaining budget\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        command \u003d MainParser.handleInput(mode, invalidShowStr);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        assertEquals(errorCommand, command.getCommandInfo());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 104
    }
  },
  {
    "path": "src/test/java/dolla/parser/ShortcutParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ShortcutParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String inputLine;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String expectedCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidShortcutListTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"shortcuts\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"shortcut\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidShortcutListTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"invalid\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidEntryListTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"entries\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"entry\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidEntryListTest() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"anotherInvalid\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidRemoveTest() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"remove 1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"shortcut\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidRemoveTest() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"remove 0\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidCreateShortcutTest() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"cs 1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"create shortcut 1 in mode shortcut\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidCreateShortcutTest() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"cs 0\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidExecuteShortcutTest() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"es 1\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"execute shortcut 1 in mode shortcut\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidExecuteShortcutTest() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"es -1\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidRedoTest() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"redo\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"redo in shortcut\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidUndoTest() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"undo\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"undo in shortcut\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidSortTest1() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"sort amount\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"sort amount in shortcut\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidSortTest2() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"sort description\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"sort description in shortcut\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidSortTest1() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"sort date\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidSortTest2() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"sort name\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseValidSearchTest() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"search description tata\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"description tata\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidSearchTest() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"search yuyu\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidCommandTest1() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"cs\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidCommandTest2() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"sort\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void parseInvalidCommandTest3() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        inputLine \u003d \"search\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ShortcutParser shortcutParser \u003d new ShortcutParser(inputLine);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command c \u003d shortcutParser.parseInput();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        expectedCommand \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(expectedCommand, c.getCommandInfo());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 206
    }
  },
  {
    "path": "src/test/java/dolla/sort/SortTestOutputString.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public interface SortTestOutputString {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String ENTRY_SORT_AMOUNT \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting amount.........\\n\" + \"\\t1. [income] [$20.0] [tution] [/on 03/11/2002]\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [expense] [$100.0] [Expense Description] [/on 03/12/2001]\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_SORT_AMOUNT \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting amount.........\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [owe] [yuyu] [$20.0] [food] [/due 01/01/2019]\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [borrow] [tata] [$35.0] [drink] [/due 02/02/2018]\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SHORTCUT_SORT_AMOUNT \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting amount.........\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [shortcut] [income] [$258.0] [Income Description]\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [shortcut] [expense] [$333.0] [Expense Description]\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String ENTRY_SORT_DATE \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting date.........\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [expense] [$100.0] [Expense Description] [/on 03/12/2001]\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [income] [$20.0] [tution] [/on 03/11/2002]\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_SORT_DATE \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting date.........\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [borrow] [tata] [$35.0] [drink] [/due 02/02/2018]\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [owe] [yuyu] [$20.0] [food] [/due 01/01/2019]\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String ENTRY_SORT_DESC \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting description.........\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [expense] [$100.0] [Expense Description] [/on 03/12/2001]\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [income] [$20.0] [tution] [/on 03/11/2002]\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_SORT_DESC \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting description.........\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [borrow] [tata] [$35.0] [drink] [/due 02/02/2018]\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [owe] [yuyu] [$20.0] [food] [/due 01/01/2019]\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SHORTCUT_SORT_DESC \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting description.........\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [shortcut] [expense] [$333.0] [Expense Description]\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [shortcut] [income] [$258.0] [Income Description]\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DEBT_SORT_NAME \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\tsorting name.........\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t1. [borrow] [tata] [$35.0] [drink] [/due 02/02/2018]\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t2. [owe] [yuyu] [$20.0] [food] [/due 01/01/2019]\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 65
    }
  },
  {
    "path": "src/test/java/dolla/sort/SortingTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortAmount;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.command.sort.SortName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Debt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Entry;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Record;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.model.Shortcut;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortingTest implements SortTestOutputString {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e entryListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e debtListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private ArrayList\u003cRecord\u003e shortcutListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void createRecordForTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord1 \u003d new Entry(\"expense\", 100, \"Expense Description\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2001-12-03\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        entryListTest.add(testRecord1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord2 \u003d new Entry(\"income\",20,\"tution\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2002-11-03\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        entryListTest.add(testRecord2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord3 \u003d new Debt(\"owe\", \"yuyu\", 20, \"food\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2019-01-01\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtListTest.add(testRecord3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord4 \u003d new Debt(\"borrow\", \"tata\", 35, \"drink\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                LocalDate.parse(\"2018-02-02\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        debtListTest.add(testRecord4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord5 \u003d new Shortcut(\"income\",258,\"Income Description\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(testRecord5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Record testRecord6 \u003d new Shortcut(\"expense\", 333,\"Expense Description\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        shortcutListTest.add(testRecord6);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testSortAmount() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        createRecordForTest();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortAmount(entryListTest);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(ENTRY_SORT_AMOUNT, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortAmount(debtListTest);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_SORT_AMOUNT, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortAmount(shortcutListTest);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(SHORTCUT_SORT_AMOUNT,SortUi.outputStringTest);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testSortDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        createRecordForTest();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortDate(entryListTest);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(ENTRY_SORT_DATE, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortDate(debtListTest);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_SORT_DATE, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testSortDescription() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        createRecordForTest();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortDescription(entryListTest);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(ENTRY_SORT_DESC, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortDescription(debtListTest);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_SORT_DESC, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortDescription(shortcutListTest);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(SHORTCUT_SORT_DESC,SortUi.outputStringTest);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void testSortName() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        createRecordForTest();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        new SortName(debtListTest);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        assertEquals(DEBT_SORT_NAME, SortUi.outputStringTest);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 91
    }
  }
]
