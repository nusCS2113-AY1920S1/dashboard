[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "group \u0027seedu.dolla\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    mainClassName \u003d \"dolla.Dolla\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    testCompile(\"org.junit.jupiter:junit-jupiter-api:5.4.2\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    archiveBaseName \u003d \"dolla\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 4,
      "yetong1895": 7,
      "-": 31
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "rootProject.name \u003d \u0027dolla\u0027"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/Dolla.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageRead;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * \u003ch1\u003eduke.Dolla\u003c/h1\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * duke.Dolla is a chat-bot styled expense manager."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @author  Aik Peng"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * @since   2019-07-26"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Dolla {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private DollaData dollaData \u003d new DollaData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static TagList tagList \u003d new TagList(); //todo: change"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates an instance of Dolla using a data loaded from /data/dolla.txt"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Dolla() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageRead.load(); //TODO: add load for tag also (for now it can add to tagList but cant store to harddrive)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Runs the main program of duke.Dolla"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @throws Exception when exceptional condition happens"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void run() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Reminder reminder \u003d new Reminder(\"debt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        reminder.showReminder(dollaData);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Scanner input \u003d new Scanner(System.in); // TODO: Add to Ui or MainParser instead?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (input.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String inputLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                if (inputLine.equalsIgnoreCase(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    MainParser.exit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Command c \u003d MainParser.handleInput(dollaData.getMode(), inputLine);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    c.execute(dollaData);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void main(String[] args) throws Exception { // Exception needs to be handled?"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        new Dolla().run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 35,
      "Weng-Kexin": 13,
      "tatayu": 3,
      "yetong1895": 3,
      "-": 2
    }
  },
  {
    "path": "src/main/java/dolla/DollaData.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.DebtList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.EntryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.LimitList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.BillList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getDebtsFromSave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getEntriesFromSave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import static dolla.storage.Storage.getLimitsFromSave;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static dolla.storage.Storage.getBillsFromSave;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaData implements ModeStringList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String mode \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private EntryList entryList; // TODO: Find out alternatives to using a public variable"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private DebtList debtList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private LimitList limitList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private BillList billList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String prevMode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private int modifyIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates an instance of DollaData to store and manipulate data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public DollaData() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        //this.entryList \u003d new EntryList(new ArrayList\u003cRecord\u003e());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.entryList \u003d new EntryList(getEntriesFromSave()); //Import from save file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.limitList \u003d new LimitList(getLimitsFromSave()); //Import from save file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.debtList \u003d new DebtList(getDebtsFromSave()); //Import from save file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.billList \u003d new BillList(getBillsFromSave()); //Import from save file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns the relevant RecordList (ie. EntryList) according to the specified mode."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode pertaining to the RecordList to be retrieved."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return The RecordList according to the specified mode."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public RecordList getRecordList(String mode) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return debtList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return null; // placeholder so that Dolla can compile"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns the relevant record (ie. Entry) from the specified index"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * in the relevant RecordList (ie. EntryList) according to the specified mode."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode pertaining to the Record to be retrieved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index corresponding to the Record to be retried from the RecordList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return The Record according to the specified mode."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Record getRecordFromList(String mode, int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryList.getFromList(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return debtList.getFromList(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return limitList.getFromList(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return null; // placeholder so that Dolla can compile"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public RecordList getBillRecordList() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return billList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Adds a new Record (ie. Entry) into the relevant RecordList (ie. EntryList) according to the specified mode."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode   The mode pertaining to the RecordList to be retrieved."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param newRecord The new Record to be added into the relevant RecordList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addToRecordList(String mode, Record newRecord) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList.add(newRecord);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            debtList.add(newRecord);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitList.add(newRecord);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addBillToRecordList(Record newRecord) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        billList.add(newRecord);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Add to prev position."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode         the mode"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param newRecord       the new record"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param prevPosition the prev position"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addToPrevPosition(String mode, Record newRecord, int prevPosition) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList.insertPrevPosition(prevPosition, newRecord);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            debtList.insertPrevPosition(prevPosition, newRecord);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            limitList.insertPrevPosition(prevPosition, newRecord);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Remove from record list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode  the mode"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param index the index"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromRecordList(String mode, int index) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entryList.removeFromList(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debtList.removeFromList(index);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limitList.removeFromList(index);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Changes the content of a particular log in list to the specified one."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param newRecord the new record to replace the current item on the list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void modifyRecordList(Record newRecord) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (prevMode) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            entryList.removeFromList(modifyIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            debtList.removeFromList(modifyIndex);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            debtList.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getMode() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return mode;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Updates Dolla\u0027s mode to the specified new mode."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param newMode the mode to update to."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void updateMode(String newMode) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        mode \u003d newMode;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prepares Dolla for modify mode by storing the previous mode and the index of the log to be modified."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param prevMode the current mode of Dolla when this method is called."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index    the index of the log to be modified."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void prepForModify(String prevMode, int index) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.prevMode \u003d prevMode;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modifyIndex \u003d index;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setModifyIndex(int index) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modifyIndex \u003d index;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getPrevMode() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return prevMode;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 86,
      "Weng-Kexin": 65,
      "tatayu": 16,
      "yetong1895": 22
    }
  },
  {
    "path": "src/main/java/dolla/ModeStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public interface ModeStringList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Modes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_DOLLA \u003d \"dolla\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String MODE_SHORTCUT \u003d \"shortcut\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    //change this to be inside parser"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    String PREFIX_TAG \u003d \"/tag\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 6,
      "Weng-Kexin": 8
    }
  },
  {
    "path": "src/main/java/dolla/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Class handles Reminder-related methods."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected LocalDate today;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new Reminder."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode the mode"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Reminder(String mode) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d \"debt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Show reminder."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData the dolla data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void showReminder(DollaData dollaData) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        printReminder(today, recordList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print reminder."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param today   Today\u0027s date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList The list of logs of debt."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void printReminder(LocalDate today, RecordList recordList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tREMINDER!!!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate temp \u003d recordList.get().get(i).getDate(); //get the time for that log"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate check \u003d today.plusDays(2); //remind the user 2 days before"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (check.compareTo(temp) \u003e\u003d 0 \u0026\u0026 temp.compareTo(today) \u003e 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Ui.printNoReminderMsg();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 54,
      "Weng-Kexin": 2
    }
  },
  {
    "path": "src/main/java/dolla/Tag.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import static dolla.ModeStringList.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * This class handles tag related methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates a new Tag."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Tag() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.tagName \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getPrefixTag() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return PREFIX_TAG;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String getTagName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \u0027[\u0027 + getTagName() + \u0027]\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean hasTag(String[] inputArray) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean hasTag \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c inputArray.length - 1; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (inputArray[i].equalsIgnoreCase(PREFIX_TAG)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                hasTag \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return hasTag;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private void extractTagName(String inputLine) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String[] tagArray \u003d inputLine.split(PREFIX_TAG);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        tagName \u003d tagArray[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method handles input to check for tag and store it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void handleTag(String inputLine, String[] inputArray, Record record) { //todo: change to inside parser"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (hasTag(inputArray)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            extractTagName(inputLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Dolla.tagList.addTag(tagName, record); //todo: find out how to store"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.printAddedTagMsg(tagName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 61
    }
  },
  {
    "path": "src/main/java/dolla/TagList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class TagList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static HashMap\u003cString, Record\u003e tagList \u003d new HashMap\u003c\u003e(); //change it to store the index of the record"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method to add tag to tag container (hashmap)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param tag     Tag to be added"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param record  Record the tag is added with"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected void addTag(String tag, Record record) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            tagList.put(tag, record);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (Exception e) { //todo: change"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(\"error handling tag\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 24
    }
  },
  {
    "path": "src/main/java/dolla/Time.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a LocalDateTime variable converted from the specified String timeStr that"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * was in the format \u0027dd/MM/yyyy HHmm\u0027."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param timeStr String to be converted into DateTimeFormatter type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return A LocalDateTime variable that the computer can understand as time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static LocalDateTime readDateTime(String timeStr) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return LocalDateTime.parse(timeStr, formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns a LocalDateTime variable converted from the specified String timeStr that"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * was in the format \u0027dd/MM/yyyy\u0027."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param timeStr String to be converted into DateTimeFormatter type."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return A LocalDateTime variable that the computer can understand as time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static LocalDate readDate(String timeStr) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return LocalDate.parse(timeStr, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Converts the date from LocalDate to string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date in LocalDate format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return dateStr in \"dd/MM/yyyy\" format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return date.format(formatter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * converts the time from LocalDateTime to string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param time in LocalDateTime format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return timeStr in \"dd/MM/yyyy HHmm\" format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static String dateTimeToString(LocalDateTime time) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return time.format(formatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 31,
      "Weng-Kexin": 11,
      "tatayu": 9
    }
  },
  {
    "path": "src/main/java/dolla/action/Redo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Redo {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String redoInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String mode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e redoEntryCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e redoDebtCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e redoLimitCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will process a \"add\" command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode      the mode that the user is in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param userInput the input from the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addCommand(String mode, String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.mode \u003d mode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.userInput \u003d userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        add();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will process a \"remove\" command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode  the mode that the user is in."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param index the index of the removing string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void removeCommand(String mode, int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.mode \u003d mode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Redo.index \u003d index + 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        remove();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the \"add\" command into the respective stack"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * depending on the current mode."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static void add() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoEntryCommand.push(\"add \" + userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoDebtCommand.push(userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoLimitCommand.push(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the \"remove\" command into the respective stack"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * depending on the current mode. The \"|redo\" serve as an indication that"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * this command come from \"redo\"."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static void remove() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        redoInput \u003d \"remove \" + index + \"|redo\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoEntryCommand.push(redoInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoDebtCommand.push(redoInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoLimitCommand.push(redoInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the redoInput."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return redoInput a string that serve as a redo input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static String processRedo(String mode) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                redoInput \u003d redoEntryCommand.pop();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                redoInput \u003d redoDebtCommand.pop();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                redoInput \u003d redoLimitCommand.pop();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ActionUi.printEmptyStackError(\"redo\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoInput \u003d \"empty stack\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return redoInput;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will clear the respective stack with respect to"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * the mode that the user is currently in."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void clearRedo(String mode) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoEntryCommand.clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoDebtCommand.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoLimitCommand.clear();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 1,
      "yetong1895": 105
    }
  },
  {
    "path": "src/main/java/dolla/action/Repeat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Repeat {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String entryInput \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String debtInput \u003d null;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String limitInput \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the respective input in this class with the userInput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * with respect to the mode that the user is in."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode      the mode that the user is in."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param userInput the input entered by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setRepeatInput(String mode, String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Repeat.entryInput \u003d userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Repeat.debtInput \u003d userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Repeat.limitInput \u003d userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the respective input to be repeat in this class with"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * respect to the mode that the user is in."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return the input to be repeated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static String getRepeatInput(String mode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\") \u0026\u0026 entryInput !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return entryInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\") \u0026\u0026 entryInput !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return debtInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"limit\") \u0026\u0026 entryInput !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return limitInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ActionUi.printEmptyRepeatError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return \"null\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 1,
      "yetong1895": 44
    }
  },
  {
    "path": "src/main/java/dolla/action/Undo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.ActionUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Undo {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String userInput; //user inputs"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String undoInput; //reverse logic inputs"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String mode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static int prevPosition;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e undoEntryCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e undoDebtCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static Stack\u003cString\u003e undoLimitCommand \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will process a \"remove\" command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode  the mode that the user is in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param index the index of the removing string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void removeCommand(String mode, int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Undo.mode \u003d mode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Undo.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        remove();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will process a \"add\" command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode         the mode that the user is in."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param userInput    the input from the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param prevPosition the previous position of a deleted input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void addCommand(String mode, String userInput, int prevPosition) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Undo.mode \u003d mode;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Undo.userInput \u003d userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Undo.prevPosition \u003d prevPosition;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        add();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the \"remove\" command into the respective stack"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * depending on the current mode. The \"/undo\" serve as an indication that"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * this command come from \"undo\"."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void remove() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        undoInput \u003d \"remove \" + index + \"/undo\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoEntryCommand.push(undoInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoDebtCommand.push(undoInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoLimitCommand.push(undoInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will push the \"add\" command into the respective stack"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * depending on the current mode. The prevPosition represents the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * previous position that the deleted string is at."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void add() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoInput \u003d prevPosition + \" \" + \"add \" + userInput;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoEntryCommand.push(undoInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoInput \u003d prevPosition + \" \" + userInput;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoDebtCommand.push(undoInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoInput \u003d prevPosition + \" \" + \"set \" + userInput;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoLimitCommand.push(undoInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the undoInput."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return undoInput is the String that serve as an undo input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static String processCommand(String mode) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                undoInput \u003d undoEntryCommand.pop();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                undoInput \u003d undoDebtCommand.pop();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                undoInput \u003d undoDebtCommand.pop();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ActionUi.printEmptyStackError(\"undo\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return \"empty stack\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return undoInput;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yetong1895": 99
    }
  },
  {
    "path": "src/main/java/dolla/action/UndoStub.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class UndoStub extends Undo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //    public remove() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 6
    }
  },
  {
    "path": "src/main/java/dolla/command/AddActionCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Redo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Repeat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.action.Undo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class AddActionCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String actionInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int prevPosition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String EMPTY_STACK_MESSAGE \u003d \"empty stack\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String NULL_MESSAGE \u003d \"null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * create an instance of AddActionCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode    the mode that the user is in."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param command the command that the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public AddActionCommand(String mode, String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the action input from undo with respect"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * the the mode that the user is in."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void undoCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        actionInput \u003d Undo.processCommand(mode);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (!actionInput.equals(EMPTY_STACK_MESSAGE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            String[] parser \u003d actionInput.split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (parser[0].equals(\"remove\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                actionInput \u003d parser[0] + \" \" + parser[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                prevPosition \u003d Integer.parseInt(parser[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                actionInput \u003d parser[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get teh action input from redo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void redoCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        actionInput \u003d Redo.processRedo(mode);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will get the value of actionInput by calling the respective method to get it."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void processActionInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            undoCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"redo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            redoCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"repeat\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            actionInput \u003d Repeat.getRepeatInput(mode);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) throws Exception {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        processActionInput();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (!actionInput.equals(EMPTY_STACK_MESSAGE) \u0026\u0026 !actionInput.equals(NULL_MESSAGE)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case \"undo\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                setPrevPosition();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case \"redo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                setRedoFlag();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Command c \u003d MainParser.handleInput(mode, actionInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            c.execute(dollaData);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the previous position int in the respective mode."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void setPrevPosition() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.setPrevPosition(prevPosition);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the setRedoFlag method in the respective mode."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private void setRedoFlag() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.setRedoFlag();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 1,
      "yetong1895": 110
    }
  },
  {
    "path": "src/main/java/dolla/command/AddBillCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Bill;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class AddBillCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private int people;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private ArrayList\u003cString\u003e nameList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates AddBillCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type type of debt (is bill in this case)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people number of people."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount the total amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the namelist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public AddBillCommand(String type, int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.people \u003d people;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.nameList \u003d nameList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Bill newBill \u003d new Bill(type, people, amount, nameList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        dollaData.addBillToRecordList(newBill);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtUi.printAverageAmount(people, amount, nameList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 42
    }
  },
  {
    "path": "src/main/java/dolla/command/AddDebtsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.DebtList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Redo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.action.Undo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class AddDebtsCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int prevPosition;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates AddDebtsCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type type of debt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param name name of debtor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount amount of debt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param description description of debt."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date date of debt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param prevPosition previous position of a deleted input that is passed from an undo command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *                     -1 if the input is not from undo command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public AddDebtsCommand(String type, String name, double amount,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                           String description, LocalDate date, int prevPosition) { //prevPosition is -1 by default"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.prevPosition \u003d prevPosition;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        mode \u003d ModeStringList.MODE_DEBT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        index \u003d dollaData.getRecordList(mode).size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        DebtList debtList \u003d (DebtList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateDebtIndex \u003d debtList.findExistingRecordIndex(dollaData, newDebt, mode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateDebtIndex)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (prevPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                dollaData.addToRecordList(mode, newDebt);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.removeCommand(mode, index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.clearRedo(mode);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (prevPosition \u003d\u003d -2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                dollaData.addToRecordList(mode, newDebt);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.removeCommand(mode, index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                prevPosition \u003d -1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else { //from undo"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dollaData.addToPrevPosition(mode, newDebt, prevPosition);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.removeCommand(mode, prevPosition);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                prevPosition \u003d -1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.echoAddRecord(newDebt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Debt existingDebt \u003d (Debt) debtList.getFromList(duplicateDebtIndex);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            DebtUi.existingDebtPrinter(existingDebt);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 5,
      "tatayu": 32,
      "Weng-Kexin": 22,
      "yetong1895": 19
    }
  },
  {
    "path": "src/main/java/dolla/command/AddEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.EntryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.EntryUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Redo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.action.Undo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * AddEntryCommand is used to create a new Entry entity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class AddEntryCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int prevPosition;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String mode \u003d ModeStringList.MODE_ENTRY;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of AddEntryCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type Income or Expense."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount Amount of money that is earned/spent."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description Details pertaining to the entry."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date Date of income/expense."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param prevPosition previous position of a deleted input that is passed from an undo command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *                     -1 if the input is not from undo command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public AddEntryCommand(String type, double amount, String description, LocalDate date, int prevPosition) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.prevPosition \u003d prevPosition;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        EntryList entryList \u003d (EntryList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateEntryIndex \u003d entryList.findExistingRecordIndex(dollaData, newEntry, mode);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateEntryIndex)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (prevPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                dollaData.addToRecordList(mode, newEntry);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d dollaData.getRecordList(mode).size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.removeCommand(mode, index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.clearRedo(mode);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (prevPosition \u003d\u003d -2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                dollaData.addToRecordList(mode, newEntry);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d dollaData.getRecordList(mode).size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.removeCommand(mode, index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                prevPosition \u003d -1; //reset to -1"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dollaData.addToPrevPosition(mode, newEntry, prevPosition);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.removeCommand(mode, prevPosition);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                prevPosition \u003d -1; //reset to -1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.echoAddRecord(newEntry);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Entry existingEntry \u003d (Entry) entryList.getFromList(duplicateEntryIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            EntryUi.existingEntryPrinter(existingEntry);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String command \u003d \"AddEntryCommand\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //return (command + \"{ type: \" + type + \", amount: \" + amount + \", description: \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + description + \", date: \" + Time.dateToString(date) + \", prevPosition: \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + prevPosition) + \" }\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (command + \"{ \" + type + \", \" + amount + \", \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + description + \", \" + Time.dateToString(date) + \", \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + prevPosition) + \" }\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 45,
      "Weng-Kexin": 18,
      "tatayu": 3,
      "yetong1895": 17
    }
  },
  {
    "path": "src/main/java/dolla/command/AddLimitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Limit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.LimitList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * AddLimitCommand is used to create a new Limit entity."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class AddLimitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String mode \u003d ModeStringList.MODE_LIMIT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Instantiates a new AddLimitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type type of limit"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param amount amount of limit"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration duration of limit"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public AddLimitCommand(String type, double amount, String duration) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit newLimit \u003d new Limit(type, amount, duration);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        //todo: need to add budget and show and deduct money every time there is an expense entry"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int duplicateLimitIndex \u003d limitList.findExistingRecordIndex(dollaData, newLimit, mode);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (recordDoesNotExist(duplicateLimitIndex)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            dollaData.addToRecordList(mode, newLimit);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.echoAddRecord(newLimit);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Limit existingLimit \u003d (Limit) limitList.getFromList(duplicateLimitIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.existingLimitPrinter(existingLimit);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 52
    }
  },
  {
    "path": "src/main/java/dolla/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Command is an abstract class which all types of command will inherit from."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * This method is called execute the titular command after every user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @throws Exception handle exception"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract void execute(DollaData dollaData) throws Exception;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a string containing the data stored in the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return string containing data stored in command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract String getCommandInfo();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns an integer variable from the specified string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Returns 0 if the specified string is not of a number."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Mainly used for using the specified string for calculations in the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     IE. Accessing arrays."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param str String (of number) to be converted into integer type."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Integer type of the specified string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public int stringToInt(String str) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int newInt \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            newInt \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return newInt;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the resetUndoFlag method in the respective mode."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected void resetUndoFlag() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.resetUndoFlag();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the resetRedoFlag method in the respective mode."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected void resetRedoFlag() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.resetRedoFlag();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected Boolean recordDoesNotExist(int recordIndex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return (recordIndex \u003d\u003d - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 40,
      "Weng-Kexin": 8,
      "yetong1895": 16
    }
  },
  {
    "path": "src/main/java/dolla/command/ErrorCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * duke.command.ErrorCommand is a type of command that is generated if a proper command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * could not be produced. IE. as a result of invalid inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return; // Don\u0027t do anything"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"ErrorCommand\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 20
    }
  },
  {
    "path": "src/main/java/dolla/command/InitialModifyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * InitialModifyCommand is a command that runs first when the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * user wants to execute a modify command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class InitialModifyCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public InitialModifyCommand(String indexStr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String currMode \u003d dollaData.getMode();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (isIndexInList(dollaData.getRecordList(currMode))) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInitialModifyMsg(currMode);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.updateMode(\"modify \" + currMode);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            dollaData.prepForModify(currMode, index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printNoRecordAssocError(index, currMode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true is the given index is within the recordList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordList The recordList containing the record to be modified."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if index is within the specified recordList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean isIndexInList(RecordList recordList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (index \u003e\u003d recordList.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 50,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/RemoveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.RemoveUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Redo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.action.Undo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * RemoveCommand is a Command used to remove a Task from the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String logNumStr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String mode;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public RemoveCommand(String mode, String logNumStr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.logNumStr \u003d logNumStr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Removes a task from the specified TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     The method first converts taskNumStr into an int. It will then check if a task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     corresponding to that number exists in the specified TaskList and subsequently"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     remove that task if so."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     If taskNumStr is not an int, the method will return without doing anything."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     If taskNumInt does not correspond to any task in the specified TaskList, an"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *     alert is printed to the user, and the method will return."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param dollaData dollaData"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        int logNumInt;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RecordList recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        boolean isListEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (isListEmpty) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return; // TODO: return error command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (logNumStr.contains(\"/\")) { //input from undo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                resetUndoFlag();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String[] parser \u003d logNumStr.split(\"/\", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                logNumInt \u003d stringToInt(parser[0]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.addCommand(mode, recordList.get().get(logNumInt).getUserInput()); //add undo input to redo"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (logNumStr.contains(\"|\")) { //input form redo"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                resetRedoFlag();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String[] parser \u003d logNumStr.split(\"//|\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                logNumInt \u003d stringToInt(parser[0]) - 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.addCommand(mode, recordList.get().get(logNumInt).getUserInput(), logNumInt); //add input to undo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else { //normal user input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                logNumInt \u003d stringToInt(logNumStr) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Undo.addCommand(mode, recordList.get().get(logNumInt).getUserInput(), logNumInt);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Redo.clearRedo(mode);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.echoRemove(recordList.get().get(logNumInt).getRecordDetail());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            dollaData.removeFromRecordList(mode, logNumInt);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printRemoveError(recordList.size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 6,
      "Weng-Kexin": 3,
      "yetong1895": 65
    }
  },
  {
    "path": "src/main/java/dolla/command/SearchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.SearchUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * SearchCommand is a command that runs when"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * the user wants to execute a search command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String component;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String searchContent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String MODE_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String MODE_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String MODE_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String COMPONENT_DURATION \u003d \"duration\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new SearchCommand."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode mode Dolla is in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param component the component to be searched on (description/name/date)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the content that the user wants to search for"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public SearchCommand(String mode, String component, String searchContent) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.searchContent \u003d searchContent;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.component \u003d component;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Executes the search command according to the mode and the command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData the dolla data"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @throws Exception handle exception"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case \"entry\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case \"debt\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case \"limit\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listIsEmpty) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(MODE_ENTRY)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (component.equals(COMPONENT_DESCRIPTION)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDesc(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (component.equals(COMPONENT_DATE)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDate(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(MODE_DEBT)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (component.equals(COMPONENT_DESCRIPTION)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDesc(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (component.equals(COMPONENT_NAME)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchName(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (component.equals(COMPONENT_NAME)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                SearchUi.printSearchDate(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(MODE_LIMIT) \u0026\u0026 component.equals(COMPONENT_DURATION)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            SearchUi.printSearchDuration(mode, recordList, searchContent);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "tatayu": 90
    }
  },
  {
    "path": "src/main/java/dolla/command/ShowBillListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * This class shows the bill list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class ShowBillListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public ShowBillListCommand(String mode) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void execute(DollaData dollaData) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        recordList \u003d dollaData.getBillRecordList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (listIsEmpty) { // TODO: Place this in proper place"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtUi.printBillList(recordList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 41
    }
  },
  {
    "path": "src/main/java/dolla/command/ShowListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Display all the tasks stored in the relevant RecordList depending on mode."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ShowListCommand(String mode) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints out the logs from the specified RecordList in dollaData."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param dollaData Data to be manipulated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003cRecord\u003e());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        RecordList entryList \u003d new EntryList(new ArrayList\u003cEntry\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case \"entries\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            recordList \u003d dollaData.entryList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList \u003d dollaData.entryList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            entryList \u003d dollaData.getLogList(mode);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "         */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) { //TODO: is this needed?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case \"entry\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        case \"debt\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case \"limit\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break; // TODO: What to do here?"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean listIsEmpty \u003d (recordList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (listIsEmpty) { // TODO: Place this in proper place"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //} else if (mode.equals(\"entries\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            //Ui.printList(mode, entryList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(\"entry\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (mode.equals(\"debt\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            //System.out.println(recordList.get().size());//test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (mode.equals(\"limit\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ListUi.printList(mode, recordList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 45,
      "Weng-Kexin": 23,
      "tatayu": 4,
      "yetong1895": 7
    }
  },
  {
    "path": "src/main/java/dolla/command/SortCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ListUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.sort.SortAmount;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.sort.SortDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.sort.SortDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.sort.SortName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String mode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortCommand(String mode, String type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        RecordList recordList \u003d new RecordList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"entry\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"debt\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"limit\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            recordList \u003d dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            list \u003d recordList.getCloneList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            list.get(0); //test if list is empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            switch (mode) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case \"entry\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"amount\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"date\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDate(list);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"description\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDescription(list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case \"debt\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"amount\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case\"date\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDate(list);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"description\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortDescription(list);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case \"name\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortName(list);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case \"limit\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (type !\u003d null \u0026\u0026 type.equals(\"amount\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    new SortAmount(list);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            ListUi.printEmptyListError(mode);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 2,
      "yetong1895": 100
    }
  },
  {
    "path": "src/main/java/dolla/command/SwitchModeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class SwitchModeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String newMode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public SwitchModeCommand(String newMode) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.newMode \u003d newMode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(newMode);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printModeUpdated(dollaData.getMode());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 22,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/FullModifyDebtCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FullModifyDebtCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private int prevPosition;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //private String mode \u003d \"debt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new FullModifyDebtCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of debt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param name name of debtor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount amount of debt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description of debt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date of debt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FullModifyDebtCommand(String type, String name, double amount,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                                 String description, LocalDate date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.prevPosition \u003d prevPosition;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Debt newDebt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.modifyRecordList(newDebt);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.echoModifyRecord(newDebt);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(\"debt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 51
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/FullModifyEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FullModifyEntryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Instantiates a new FullModifyEntryCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of entry"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FullModifyEntryCommand(String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //System.out.println(\"Creating new FullModifyEntryCommand....\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //System.out.println(\"Executing FullModifyEntryCommand....\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.modifyRecordList(newEntry);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.echoModifyRecord(newEntry);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(\"entry\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 45,
      "tatayu": 1
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/PartialModifyEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class PartialModifyEntryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static final String MODE_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *  Instantiates a new FullModifyDebtCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordNum number of entry in list to modify."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type type of entry."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount of money."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public PartialModifyEntryCommand(int recordNum, String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.index \u003d recordNum - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.prepForModify(MODE_ENTRY, index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Record originalEntry \u003d dollaData.getRecordFromList(MODE_ENTRY, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        overwriteComponents(originalEntry);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d new Entry(type, amount, description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.modifyRecordList(newEntry);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.echoModifyRecord(newEntry);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(\"entry\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void overwriteComponents(Record ogEntry) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (type \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            type \u003d ogEntry.getType();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (amount \u003d\u003d -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            amount \u003d ogEntry.getAmount();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            description \u003d ogEntry.getDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d ogEntry.getDate();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 67
    }
  },
  {
    "path": "src/main/java/dolla/command/modify/RevertFromModifyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.command.modify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class RevertFromModifyCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(DollaData dollaData) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dollaData.updateMode(dollaData.getPrevMode());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ModifyUi.printCancelModifyMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getCommandInfo() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 20
    }
  },
  {
    "path": "src/main/java/dolla/parser/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class CommandParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //public CommandParser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract Command parse();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 13
    }
  },
  {
    "path": "src/main/java/dolla/parser/DebtsParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.InitialModifyCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ShowBillListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddDebtsCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddBillCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddActionCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Repeat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * DebtsParser is a class that handles the input command and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * execute the command according to the command under the debt mode."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtsParser extends Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private static final String DEBT_COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private static final String DEBT_COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private static final String DEBT_COMMAND_REPEAT \u003d \"repeat\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public DebtsParser(String inputLine) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.mode \u003d MODE_DEBT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        if (commandToRun.equals(DEBT_COMMAND_LIST)) { //show debt list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(BILL_COMMAND_LIST))  { //show bill list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new ShowBillListCommand(mode);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(DEBT_COMMAND_OWE) || commandToRun.equals(DEBT_COMMAND_BORROW)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String type \u003d commandToRun;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            double amount;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                name \u003d inputArray[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                String[] desc \u003d inputLine.split(inputArray[2] + \" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                description \u003d dateString[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                if (inputLine.contains(t.getPrefixTag())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    String[] dateAndTag \u003d dateString[1].split(t.getPrefixTag());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    date \u003d Time.readDate(dateAndTag[0].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    date \u003d Time.readDate(dateString[1].trim());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Debt debt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            t.handleTag(inputLine, inputArray, debt);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return processAdd(type, name, amount);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(BILL_COMMAND_BILL)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String type \u003d inputArray[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            int people \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            double amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            for (int i \u003d 3; i \u003c 3 + people; i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                String name \u003d inputArray[i];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameList.add(name);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new AddBillCommand(type, people, amount, nameList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SEARCH)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String component \u003d inputArray[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String content \u003d inputArray[2];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new SearchCommand(mode, component, content);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SORT)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(DEBT_COMMAND_REDO)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                || commandToRun.equals(DEBT_COMMAND_UNDO)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                || commandToRun.equals(DEBT_COMMAND_REPEAT)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new AddActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new ErrorCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will process and return a \"add\" command for debt."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of input. i.e. owe or borrow."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param name the name of the borrower/lender"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param amount the amount borrowed/lent"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return an AddDebtsCommand with respect to the nature of the input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private Command processAdd(String type, String name, double amount) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command addDebt;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Repeat.setRepeatInput(\"debt\", inputLine); //setup repeat"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (undoFlag \u003d\u003d 1) { //undo input"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addDebt \u003d new AddDebtsCommand(type, name, amount, description, date, prevPosition);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            resetUndoFlag();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (redoFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addDebt \u003d new AddDebtsCommand(type, name, amount, description, date, -2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            resetRedoFlag();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else { //normal input, prePosition is -1"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addDebt \u003d new AddDebtsCommand(type, name, amount, description, date, -1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return addDebt;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "tatayu": 104,
      "Weng-Kexin": 8,
      "yetong1895": 24
    }
  },
  {
    "path": "src/main/java/dolla/parser/DollaParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.AddDebtsCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.AddEntryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddLimitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Limit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaParser extends Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public DollaParser(String inputLine) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d MODE_DOLLA;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (commandToRun.equals(ENTRY_COMMAND_ADD)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyAddCommand()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Entry entry \u003d new Entry(inputArray[1], stringToDouble(inputArray[2]), description, date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                t.handleTag(inputLine, inputArray, entry);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new AddEntryCommand(inputArray[1], stringToDouble(inputArray[2]), description, date, -1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch(commandToRun) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"income\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"expense\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return new AddExpenseCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return new ErrorCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(DEBT_COMMAND_OWE) || commandToRun.equals(DEBT_COMMAND_BORROW)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String type \u003d commandToRun;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String name \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double amount \u003d 0.0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LocalDate date \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                name \u003d inputArray[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] desc \u003d inputLine.split(inputArray[2] + \" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d dateString[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                if (inputLine.contains(t.getPrefixTag())) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    String[] dateAndTag \u003d dateString[1].split(t.getPrefixTag());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    date \u003d Time.readDate(dateAndTag[0].trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    date \u003d Time.readDate(dateString[1].trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Debt debt \u003d new Debt(type, name, amount, description, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            t.handleTag(inputLine, inputArray, debt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new AddDebtsCommand(type, name, amount, description, date, -1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_SET)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifySetLimitCommand()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String typeStr \u003d inputArray[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                double amountInt \u003d findLimitAmount();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String durationStr \u003d inputArray[3];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Limit limit \u003d new Limit(typeStr, amountInt, durationStr);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                t.handleTag(inputLine, inputArray, limit);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new AddLimitCommand(typeStr, amountInt, durationStr);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 83,
      "Weng-Kexin": 6,
      "tatayu": 4
    }
  },
  {
    "path": "src/main/java/dolla/parser/EntryParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.action.Repeat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddEntryCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddActionCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.InitialModifyCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.PartialModifyEntryCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class EntryParser extends Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String ENTRY_COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String ENTRY_COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final String ENTRY_COMMAND_REPEAT \u003d \"repeat\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public EntryParser(String inputLine) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d MODE_ENTRY;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (commandToRun.equals(ENTRY_COMMAND_LIST)) { //show entry list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(ENTRY_COMMAND_ADD)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyAddCommand()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                Entry entry \u003d new Entry(inputArray[1], stringToDouble(inputArray[2]), description, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                t.handleTag(inputLine, inputArray, entry);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return processAdd();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new PartialModifyEntryCommand(modifyRecordNum, type, amount, description, date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_SORT)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (commandToRun.equals(\"search\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String component \u003d inputArray[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String content \u003d inputArray[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            return new SearchCommand(mode, component, content);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (commandToRun.equals(ENTRY_COMMAND_REDO)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                || commandToRun.equals(ENTRY_COMMAND_UNDO)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                || commandToRun.equals(ENTRY_COMMAND_REPEAT)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return new AddActionCommand(mode, commandToRun);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private Command processAdd() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Command addEntry;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Repeat.setRepeatInput(\"entry\", inputLine);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (undoFlag \u003d\u003d 1) { //undo input"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addEntry \u003d new AddEntryCommand(inputArray[1], stringToDouble(inputArray[2]),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    description, date, prevPosition);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            resetUndoFlag();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (redoFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addEntry \u003d new AddEntryCommand(inputArray[1], stringToDouble(inputArray[2]),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    description, date, -2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else { //normal input, prePosition is -1"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            addEntry \u003d new AddEntryCommand(inputArray[1], stringToDouble(inputArray[2]),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    description, date, -1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            resetRedoFlag();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return addEntry;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "omupenguin": 29,
      "Weng-Kexin": 14,
      "tatayu": 9,
      "yetong1895": 43
    }
  },
  {
    "path": "src/main/java/dolla/parser/LimitParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.AddLimitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.RemoveCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ShowListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SortCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.command.SearchCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Limit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * This class handles all limit related parsing (set, edit, remove)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitParser extends Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected LimitParser(String inputLine) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.mode \u003d MODE_LIMIT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_LIST)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new ShowListCommand(mode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.LIMIT_COMMAND_SET)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            boolean verifiedSetCommand \u003d verifySetLimitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifiedSetCommand) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                String typeStr \u003d inputArray[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                double amountInt \u003d findLimitAmount();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                String durationStr \u003d inputArray[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                Limit limit \u003d new Limit(typeStr, amountInt, durationStr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                Tag t \u003d new Tag();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                t.handleTag(inputLine, inputArray, limit);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new AddLimitCommand(typeStr, amountInt, durationStr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.COMMAND_REMOVE)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyRemove()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new RemoveCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(COMMAND_MODIFY)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifyFullModifyCommand()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                // TODO: Update when ready"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                //return new InitialModifyCommand(inputArray[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                Ui.printUpcomingFeature();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else if (verifyPartialModifyCommand()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                // TODO:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.COMMAND_SEARCH)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String component \u003d inputArray[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String content \u003d inputArray[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return new SearchCommand(mode, component, content);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else if (commandToRun.equals(ParserStringList.COMMAND_SORT)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (verifySort()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new SortCommand(mode, inputArray[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            return invalidCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "Weng-Kexin": 76
    }
  },
  {
    "path": "src/main/java/dolla/parser/MainParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.command.SwitchModeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * MainParser directs the program to the appropriate parser depending on the current mode and the user\u0027s input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class MainParser implements ParserStringList, ModeStringList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a command corresponding to the user input by directing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * the input to the relevant dolla.parser."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode Dolla is currently on."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return a command corresponding to the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static Command handleInput(String mode, String inputLine) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //String inputLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String[] inputArray \u003d inputLine.split(SPACE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String command \u003d inputArray[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean isExitCommand \u003d isExitCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean isSwitchMode \u003d isSwitchModeCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        if (isExitCommand) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            exit(); // TODO: change"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            //return new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else if (isSwitchMode) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new SwitchModeCommand(command); // TODO"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DOLLA:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            //System.out.println(\"Running DollaParser...\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return dollaParser.parseInput();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryParser entryParser \u003d new EntryParser(inputLine);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return entryParser.parseInput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            DebtsParser debtsParser \u003d new DebtsParser(inputLine);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return debtsParser.parseInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitParser limitParser \u003d new LimitParser(inputLine);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return limitParser.parseInput();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_ENTRY:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_LIMIT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_DEBT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_MODIFY_SHORTCUT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyParser modifyParser \u003d new ModifyParser(mode, inputLine);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return modifyParser.parseInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static boolean isExitCommand(String command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return command.equalsIgnoreCase(COMMAND_BYE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static boolean isSwitchModeCommand(String command) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return command.equalsIgnoreCase(MODE_DOLLA) || command.equalsIgnoreCase(MODE_ENTRY)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || command.equalsIgnoreCase(MODE_LIMIT) || command.equalsIgnoreCase(MODE_DEBT)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || command.equalsIgnoreCase(MODE_SHORTCUT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * This method will exit the entire program after printing a goodbye message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        //TODO: DO SMTH"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Ui.printExitMsg();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 51,
      "tatayu": 4,
      "Weng-Kexin": 27,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/parser/ModifyParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.FullModifyDebtCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.FullModifyEntryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.modify.RevertFromModifyCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.DebtUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ModifyParser extends Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String modeToModify;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static final String CANCEL_MODIFY \u003d \"CANCEL\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ModifyParser(String mode, String inputLine) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(inputLine);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command parseInput() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (checkCancellation()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new RevertFromModifyCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        getModeToModify();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (modeToModify) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (verifyAddCommand() \u003d\u003d true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new FullModifyEntryCommand(inputArray[1], stringToDouble(inputArray[2]), inputArray[3], date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // need to compress"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String type \u003d commandToRun;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double amount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                name \u003d inputArray[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] desc \u003d inputLine.split(inputArray[2] + \" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] dateString \u003d desc[1].split(\" /due \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                description \u003d dateString[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                date \u003d Time.readDate(dateString[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                DebtUi.printInvalidDebtFormatError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new FullModifyDebtCommand(type, name, amount, description, date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            /* TODO"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String limitType;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            double amount;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String duration;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int typeIndex \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int durationIndex \u003d 3;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                limitType \u003d typeFinder(typeIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                amount \u003d amountFinder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                duration \u003d durationFinder(durationIndex);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.invalidSetCommandPrinter();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.invalidAmountPrinter();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LimitUi.printErrorMsg();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new AddLimitCommand(limitType, amount, duration);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "             */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean checkCancellation() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return inputLine.equals(CANCEL_MODIFY);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private void getModeToModify() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        modeToModify \u003d mode.split(\" \")[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 95
    }
  },
  {
    "path": "src/main/java/dolla/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ModeStringList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.EntryUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.LimitUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.ui.ModifyUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.ErrorCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.RemoveUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Parser is an abstract class that loads the appropriate command according to the user\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * It also ensures that the user\u0027s input for the command is valid, such as by checking the format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * of the input, and the utilisation of correct terms."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class Parser implements ParserStringList, ModeStringList {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String mode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String inputLine;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String[] inputArray;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String commandToRun;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static int undoFlag \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static int redoFlag \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected static int prevPosition;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected int modifyRecordNum;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of a parser."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param inputLine The entire string containing the user\u0027s input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Parser(String inputLine) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.inputLine \u003d inputLine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.inputArray \u003d inputLine.split(SPACE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.commandToRun \u003d inputArray[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract Command parseInput();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Splits the input from the user and assigns the relevant data into description and date variables."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * If the incorrect format is given in the input, the corresponding alert will be printed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void extractDescTime() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        // dataArray[0] is command, amount and description, dataArray[1] is time and tag"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String[] dataArray \u003d inputLine.split(\" /on \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String dateString \u003d (dataArray[1].split(\" /tag \"))[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d dataArray[0].split(inputArray[2] + \" \")[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            date \u003d Time.readDate(dateString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO: Shouldn\u0027t happen anymore, need to test if this will happen still"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(\"Please add \u0027/at \u003cdate\u003e\u0027 after your task to specify the entry date.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new Exception(\"missing date\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }  catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printDateFormatError();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new Exception(\"invalid date\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a double variable from the specified string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Returns 0 if the specified string is not of a number."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     Mainly used for using the specified string for calculations in the command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *     IE. Accessing arrays."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param str String (of number) to be converted into integer type."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Integer type of the specified string."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static double stringToDouble(String str) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        double newDouble \u003d 0.0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            newDouble \u003d Double.parseDouble(str);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return newDouble;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Alerts the user that the input is invalid, and returns an ErrorCommand."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return an ErrorCommand"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Command invalidCommand() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new ErrorCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Checks if the first word after \u0027add\u0027 is either \u0027income\u0027 or \u0027expense\u0027."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param s String to be analysed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return Either \u0027expense\u0027 or \u0027income\u0027 if either are passed in."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @throws Exception ???"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static String verifyAddType(String s) throws Exception {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (s.equals(\"income\") || s.equals(\"expense\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryUi.printInvalidEntryType();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new Exception(\"invalid type\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if no error occurs while creating the required variables for \u0027addEntryCommand\u0027."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also splits description and time components in the process."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if no error occurs."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean verifyAddCommand() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            verifyAddType(inputArray[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            extractDescTime();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            EntryUi.printInvalidEntryFormatError();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false; // If error occurs, stop the method!"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the only element in the input that follows \u0027modify\u0027 is a number."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the only element in the input that follows \u0027modify\u0027 is a number."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean verifyFullModifyCommand() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInvalidFullModifyFormatError();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will check if the input contain an type to sort."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return true is inputArray[1] contain something, false if inputArray[1] is invalid."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean verifySort() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputArray.length \u003c 2) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            switch (mode) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_ENTRY:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_AMOUNT)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DATE)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DESC)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_DEBT:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_AMOUNT)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DATE)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_DESC)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    || inputArray[1].equals(SORT_TYPE_NAME)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            case MODE_LIMIT:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputArray[1].equals(SORT_TYPE_DATE)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                SortUi.printInvalidSort(mode);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * The method will check if the user have entered a valid number to be removed."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return true if there is a valid number or false otherwise."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean verifyRemove() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputArray.length \u003c 2) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printInvalidRemoveMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            RemoveUi.printInvalidRemoveMessage();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the prevPosition int in this class."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param prevPosition the prevPosition of a deleted input."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setPrevPosition(int prevPosition) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.prevPosition \u003d prevPosition;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        undoFlag \u003d 1;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * THis method will set prevPosition to -1 and undoFlag to 0."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void resetUndoFlag() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Parser.prevPosition \u003d -1;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        undoFlag \u003d 0;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set redoFlag to 1."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setRedoFlag() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        redoFlag \u003d 1;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set redoFlag to 0."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void resetRedoFlag() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        redoFlag \u003d 0;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //@@author omupenguin"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the input has no formatting issues."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also designates the correct information to the relevant variables."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the input has no formatting issues."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean verifyPartialModifyCommand() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean hasComponents \u003d false;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //ArrayList\u003cString\u003e errorList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d null;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        amount \u003d -1;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d null;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            modifyRecordNum \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInvalidFullModifyFormatError();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            hasComponents \u003d findEntryComponents();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printUpcomingFeature();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printUpcomingFeature();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // TODO"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (!hasComponents) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ModifyUi.printInvalidPartialModifyFormatError();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the input contains a component to be edited in the current mode,"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * demarcated with strings like \"/type\"."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Also designates the correct information to the relevant variables."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the input contains a component to be edited in the current mode."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean findEntryComponents() {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean hasComponents \u003d false;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c inputArray.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String currStr \u003d inputArray[i];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isComponent(currStr)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String nextStr \u003d inputArray[i + 1];"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    switch (currStr) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        type \u003d verifyAddType(nextStr);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        amount \u003d stringToDouble(nextStr);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case COMPONENT_DESC:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        description \u003d parseDesc(i + 1);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case COMPONENT_DATE:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        date \u003d Time.readDate(nextStr);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    case COMPONENT_TAG:"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        //TODO"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    ModifyUi.printInvalidPartialModifyFormatError();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                hasComponents \u003d true;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return hasComponents;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns true if the specified string is a editable component for the current mode."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param s the string to be checked."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return true if the specified string is a editable component for the current mode."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private boolean isComponent(String s) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_ENTRY:"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TYPE:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_AMOUNT:"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DESC:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_DATE:"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case COMPONENT_TAG:"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_LIMIT:"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_DEBT:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        case MODE_SHORTCUT:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                // TODO"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Extracts and returns a string containing the new description of the record to be modified."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index The index of element in inputArray to start extracting from."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return string containing the new description of the record to be modified."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String parseDesc(int index) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String tempStr \u003d \"\";"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d index; i \u003c inputArray.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (isComponent(inputArray[i])) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            tempStr \u003d tempStr.concat(inputArray[i] + \" \");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tempStr \u003d tempStr.substring(0, tempStr.length() - 1);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return tempStr;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    //@@author Weng-Kexin"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected double findLimitAmount() {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        double amount \u003d 0;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            amount \u003d stringToDouble(inputArray[2]);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.invalidAmountPrinter();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean verifyLimitType(String limitType) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return limitType.equals(LIMIT_TYPE_S)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || limitType.equals(LIMIT_TYPE_B);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean verifyLimitDuration(String limitDuration) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return limitDuration.equals(LIMIT_DURATION_D)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || limitDuration.equals(LIMIT_DURATION_W)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                || limitDuration.equals(LIMIT_DURATION_M);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private Boolean verifyLimitAmount(double limitAmount) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return (limitAmount !\u003d 0);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected Boolean verifySetLimitCommand() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        boolean isValid;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String typeStr \u003d inputArray[1];"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            double amountInt \u003d findLimitAmount();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String durationStr \u003d inputArray[3];"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            isValid \u003d verifyLimitType(typeStr) \u0026\u0026 verifyLimitAmount(amountInt) \u0026\u0026 verifyLimitDuration(durationStr);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LimitUi.invalidSetCommandPrinter();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            isValid \u003d false;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            isValid \u003d false;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 304,
      "Weng-Kexin": 44,
      "tatayu": 1,
      "yetong1895": 96
    }
  },
  {
    "path": "src/main/java/dolla/parser/ParserStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public interface ParserStringList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Modify specific modes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_ENTRY \u003d \"modify entry\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_LIMIT \u003d \"modify limit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_DEBT \u003d \"modify debt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String MODE_MODIFY_SHORTCUT \u003d \"modify shortcut\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Entry mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String ENTRY_COMMAND_LIST \u003d \"entries\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Limit mode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_COMMAND_LIST \u003d \"limits\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_COMMAND_SET \u003d \"set\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_TYPE_S \u003d \"saving\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_TYPE_B \u003d \"budget\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_D \u003d \"daily\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_W \u003d \"weekly\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String LIMIT_DURATION_M \u003d \"monthly\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Commands specific to Debt mode"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String DEBT_COMMAND_LIST \u003d \"debts\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String BILL_COMMAND_BILL \u003d \"bill\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String BILL_COMMAND_LIST \u003d \"bills\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Shared Commands"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_MODIFY \u003d \"modify\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_SORT \u003d \"sort\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_SEARCH \u003d \"search\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMMAND_REMOVE \u003d \"remove\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Components used in modify"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_TYPE \u003d \"/type\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_DESC \u003d \"/desc\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_AMOUNT \u003d \"/amount\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_DATE \u003d \"/on\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String COMPONENT_TAG \u003d \"/tag\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Components used in sort"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_AMOUNT \u003d \"amount\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_DESC \u003d \"description\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    String SORT_TYPE_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 52
    }
  },
  {
    "path": "src/main/java/dolla/sort/ListComparatorUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "class ListComparatorUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int POSITIVE \u003d 1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int NEGATIVE \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static final int ZERO \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e dateComparator() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new Comparator\u003cRecord\u003e() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            public int compare(Record o1, Record o2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return o1.getDate().compareTo(o2.getDate());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e descComparator() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new Comparator\u003cRecord\u003e() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            public int compare(Record o1, Record o2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return o1.getDescription().compareTo(o2.getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e nameComparator() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new Comparator\u003cRecord\u003e() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            public int compare(Record o1, Record o2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return o1.getName().compareTo(o2.getName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static Comparator\u003cRecord\u003e amountComparator() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new Comparator\u003cRecord\u003e() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            public int compare(Record o1, Record o2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (o1.getAmount() \u003c o2.getAmount()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return NEGATIVE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else if (o1.getAmount() \u003e o2.getAmount()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return POSITIVE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                return ZERO;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 53
    }
  },
  {
    "path": "src/main/java/dolla/sort/Sort.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "class Sort {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    ArrayList\u003cRecord\u003e sortedList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList in this class to the ArrayList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * being passed in."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be set to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    Sort(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.sortedList \u003d unsortedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 1,
      "yetong1895": 18
    }
  },
  {
    "path": "src/main/java/dolla/sort/SortAmount.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortAmount extends Sort {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * This method will call the AmountComparator method, sort the input ArrayList according to amount"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * and print out the sorted list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortAmount(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.amountComparator());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"amount\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/sort/SortDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortDate extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the dateComparator method, sort the input ArrayList according to date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortDate(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.dateComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"date\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 4,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/sort/SortDescription.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortDescription extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the descComparator method, sort the input ArrayList according to description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortDescription(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.descComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"description\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 4,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/sort/SortName.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.SortUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * The type Sort name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortName extends Sort {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will call the nameComparator method, sort the input ArrayList according to name"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * and print out the sorted list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param unsortedList the ArrayList to be sorted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public SortName(ArrayList\u003cRecord\u003e unsortedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(unsortedList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        sortedList.sort(ListComparatorUtil.nameComparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        SortUi.printSortedList(sortedList,\"name\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 4,
      "yetong1895": 20
    }
  },
  {
    "path": "src/main/java/dolla/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * duke.Storage handles the saving and loading of data from ./data/duke.txt,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " * as well as creating a new save file if it does not exist."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class Storage implements StorageStringList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e entries \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e limits \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e debts \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e shortcuts \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e storage \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static ArrayList\u003cRecord\u003e bills \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static double stringToDouble(String str) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        double newDouble \u003d 0.0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            newDouble \u003d Double.parseDouble(str);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Ui.printInvalidNumberError(str);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return newDouble;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the entries."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the entries."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getEntriesFromSave() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return entries;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the limits."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return limits the ArrayList containing all the limits."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getLimitsFromSave() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return limits;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the debts."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the debts."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getDebtsFromSave() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return debts;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the debts."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return bills the ArrayList containing all the bills."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getBillsFromSave() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return bills;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will return the ArrayList containing the shortcuts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return entries the ArrayList containing all the shortcuts."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static ArrayList\u003cRecord\u003e getShortcutsFromSave() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return shortcuts;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Create save file called data in root folder."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static  void createFolder() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        File f \u003d new File(DATA);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                f.mkdir();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } catch (SecurityException e) { //security exception?"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 1,
      "yetong1895": 86
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageRead.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.parser.MainParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Limit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Bill;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.StorageUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//import java.io.InputStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//import java.io.FileInputStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageRead extends Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will extract the data from the save file and load into the respective ArrayList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void load() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            FileReader inFile \u003d new FileReader(PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            BufferedReader inStream \u003d new BufferedReader(inFile);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printStorageLoadMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            String inLine;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            while ((inLine \u003d inStream.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String[] inArray \u003d inLine.split(DELIMITER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                int numOfElements \u003d inArray.length;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String type \u003d inArray[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Record newRecord \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case INCOME_TYPE: //check if there is a tag"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    if (numOfElements \u003d\u003d 4) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        newRecord \u003d new Entry(INCOME, stringToDouble(inArray[1]), inArray[2],"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[3])); //income [AMOUNT] [DESCRIPTION] /on [DATE]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case EXPENSE_TYPE: //check if there is a tag"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    if (numOfElements \u003d\u003d 4) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        newRecord \u003d new Entry(EXPENSE, stringToDouble(inArray[1]), inArray[2],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                                Time.readDate(inArray[3])); //expense [AMOUNT] [DESCRIPTION] /on [DATE]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case BUDGET_TYPE: //must include 3 additional word, every,for and tag"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Limit(BUDGET,stringToDouble(inArray[1]), inArray[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case SAVING_TYPE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Limit(SAVING, stringToDouble(inArray[1]), inArray[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case OWE_TYPE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Debt(OWE, inArray[1], stringToDouble(inArray[2]), inArray[3],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                            Time.readDate(inArray[4]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                case BORROW_TYPE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    newRecord \u003d new Debt(BORROW, inArray[1], stringToDouble(inArray[2]), inArray[3],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                            Time.readDate(inArray[4]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                //case SHORTCUT: //special case for shortcut,only one string"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                //newRecord \u003d new shortcut(inArray[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                //break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                case BILL_TYPE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    ArrayList\u003cString\u003e temp \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    String [] names \u003d inArray[4].split(\", \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    for (int i \u003d 0; i \u003c names.length; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                        temp.add(names[i]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    newRecord \u003d new Bill(\"bill\", Integer.parseInt(inArray[1]),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                            stringToDouble(inArray[2]), temp);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    StorageUi.printErrorReadingSaveMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                addToList(type, newRecord);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageWrite.save();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printCreateFolderMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            createFolder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IOException e) { // exception handling"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printErrorReadingSaveMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            MainParser.exit(); // TODO: Find out what is supposed to happen here"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static void addToList(String type, Record newRecord) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (type.equals(INCOME_TYPE) || type.equals((EXPENSE_TYPE))"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                || type.equals(RECURRING_INCOME_TYPE) || type.equals(RECURRING_EXPENSE_TYPE)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            entries.add(newRecord);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(BUDGET_TYPE) || type.equals(SAVING_TYPE)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            limits.add(newRecord);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(OWE_TYPE) || type.equals(BORROW_TYPE)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            debts.add(newRecord);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type.equals(SHORTCUT)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            shortcuts.add(newRecord);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        } else if (type.equals(BILL_TYPE)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            bills.add(newRecord);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 16,
      "yetong1895": 98
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageStringList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//@@author yetong1895"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public interface StorageStringList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String PATH \u003d \"./data/dolla.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DATA \u003d \"data\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String INCOME_TYPE \u003d \"I\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String EXPENSE_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BUDGET_TYPE \u003d \"BU\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SAVING_TYPE \u003d \"S\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String OWE_TYPE \u003d \"O\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BORROW_TYPE \u003d \"B\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String RECURRING_INCOME_TYPE \u003d \"RI\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String RECURRING_EXPENSE_TYPE \u003d \"RE\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BILL_TYPE \u003d \"BI\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SHORTCUT \u003d \"shortcut\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String INCOME \u003d \"income\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String EXPENSE \u003d \"expense\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BUDGET \u003d \"budget\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String SAVING \u003d \"saving\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String OWE \u003d \"owe\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String BORROW \u003d \"borrow\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 27
    }
  },
  {
    "path": "src/main/java/dolla/storage/StorageWrite.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.ui.StorageUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageWrite extends Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of entries in this class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param entries the ArrayList this method going to set to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setEntries(ArrayList\u003cRecord\u003e entries) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.entries \u003d entries;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of limits in this class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param limits the ArrayList this method going to set to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setLimits(ArrayList\u003cRecord\u003e limits) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.limits \u003d limits;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of debts in this class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param debts the ArrayList this method is going to set to."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setDebts(ArrayList\u003cRecord\u003e debts) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.debts \u003d debts;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * This method will set the ArrayList of bills in this class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param bills the ArrayList this method is going to set to."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void setBill(ArrayList\u003cRecord\u003e bills) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Storage.bills \u003d bills;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will set the ArrayList of debts in this class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param shortcuts the ArrayList this method going to set to."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void setShortcuts(ArrayList\u003cRecord\u003e shortcuts) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Storage.shortcuts \u003d shortcuts;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will save all the ArrayList into an external text file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected static void save() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(PATH)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(entries);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(debts);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(limits);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.addAll(shortcuts);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            storage.addAll(bills);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            for (Record currSave : storage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                String fileContent \u003d currSave.formatSave();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                file.write(fileContent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                file.write(System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            storage.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            StorageUi.printErrorWritingSaveMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 11,
      "yetong1895": 68
    }
  },
  {
    "path": "src/main/java/dolla/task/Bill.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Bill is a Class that stores an instance of the user\u0027s bill split case."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Bill extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected int people;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected ArrayList\u003cString\u003e nameList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new bill."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type Type of the debt (is bill in this case)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people The number of people."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount The total amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList The name list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Bill(String type, int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.people \u003d people;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.nameList \u003d nameList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string to with information about the bill to be displayed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of bill"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + people + \" pax] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + \"Total: $\" + amount + \"] \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + amountToMoney() + \" per person] \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + nameList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string with information about the bill to be saved."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of bill in save format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"BI\" + \" | \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + people + \" | \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount / people + \" | \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + nameString(nameList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"$\" + amount / people;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * This method changes the arraylist of name to a string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList the name list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return a string that contains all the name from the nameList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String nameString(ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        String nameStore \u003d nameList.get(0) + \", \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 1; i \u003c nameList.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (i \u003d\u003d nameList.size() - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameStore +\u003d nameList.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                nameStore +\u003d nameList.get(i) + \", \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return nameStore;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 79
    }
  },
  {
    "path": "src/main/java/dolla/task/BillList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author tata"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class BillList extends RecordList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public BillList(ArrayList\u003cRecord\u003e importBillList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(importBillList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setBill(get()); //save"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 19,
      "-": 1
    }
  },
  {
    "path": "src/main/java/dolla/task/Debt.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Debt is a Class that stores an instance of the user\u0027s owe and borrow cases."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class Debt extends Record {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Instantiates a new Debt."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param type        Type of the debt (owe or borrow)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param name        Name of the person who is related to this debt."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount      Amount of money owed or borrowed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param description Description of the debt."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param date        Due date of the debt."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Debt(String type, String name, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.recordType \u003d RECORD_DEBT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.userInput \u003d type + \" \" + name + \" \" + amount + \" \" + description + \" \" + \"/due \" + Time.dateToString(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string to with information about the debt to be displayed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of debt"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + name + \"] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[\" + description + \"] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[/due \" + Time.dateToString(date) + \"]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Returns a string with information about the debt to be saved."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return String with information of debt in save format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        saveType \u003d type.equals(\"owe\") ? \"O\" : \"B\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return saveType + \" | \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + name + \" | \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + description + \" | \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + Time.dateToString(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 83
    }
  },
  {
    "path": "src/main/java/dolla/task/DebtList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": " * Holds all the debts that have been added to Dolla."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtList extends RecordList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public DebtList(ArrayList\u003cRecord\u003e importDebtList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super(importDebtList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get()); //save"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void insertPrevPosition(int prevPosition, Record newRecord) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.insertPrevPosition(prevPosition, newRecord);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get()); //save"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get()); //save"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Method to check if input debt already exists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param inputRecord The debt being input by the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode The mode the user is on (debt)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @return index of the currently existing debt (is - 1 if not found)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt debt \u003d (Debt) inputRecord;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        DebtList debtList \u003d (DebtList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c debtList.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            Debt currDebt \u003d (Debt) (debtList.getFromList(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currType \u003d currDebt.type;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currName \u003d currDebt.name;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            double currAmount \u003d currDebt.amount;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String currDescription \u003d currDebt.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            LocalDate currDate \u003d currDebt.date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (currType.equals(debt.type)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currAmount \u003d\u003d debt.amount"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currDescription.equals(debt.description)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currDate.equals(debt.date)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                \u0026\u0026 currName.equals(debt.name)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        StorageWrite.setDebts(get());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 70,
      "Weng-Kexin": 2,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/task/Entry.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Entry is a Class that stores an instance of the user\u0027s expense or income."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Entry extends Record {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected char sign; // \u0027+\u0027 for income, \u0027-\u0027 for expense"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Creates an instance of Entry."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param type Income or Expense."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param amount Amount of money that is earned/spent."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param description Details pertaining to the entry."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param date Date of income/expense."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public Entry(String type, double amount, String description, LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.sign \u003d (type.equals(\"income\") ? \u0027+\u0027 : \u0027-\u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.recordType \u003d RECORD_ENTRY;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        this.userInput \u003d type + \" \" + amount + \" \" + description + \" \" + \"/on \" + Time.dateToString(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Returns a string to with information about the entry to be displayed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @return String with information of entry."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"[\" + description + \"] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"[/on \" + Time.dateToString(date) + \"]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * Returns a string with information about the entry to be saved."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @return String with information of entry in saving format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        saveType \u003d type.equals(\"income\") ? \"I\" : \"E\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return  saveType + \" | \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + description + \" | \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + Time.dateToString(date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 36,
      "tatayu": 15,
      "Weng-Kexin": 3,
      "yetong1895": 22
    }
  },
  {
    "path": "src/main/java/dolla/task/EntryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * Holds all the entries that have been added to Dolla."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class EntryList extends RecordList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public EntryList(ArrayList\u003cRecord\u003e importEntryList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(importEntryList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get()); //save"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void insertPrevPosition(int prevPosition, Record newRecord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.insertPrevPosition(prevPosition, newRecord);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get()); //save"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        StorageWrite.setEntries(get());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method to check if input entry already exists."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param inputRecord The entry being input by user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode the user is on (entry)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return index of the currently existing entry (is - 1 if not found)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Entry entry \u003d (Entry) inputRecord;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        EntryList entryList \u003d (EntryList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c entryList.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            Entry currEntry \u003d (Entry) (entryList.getFromList(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String currType \u003d currEntry.type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            double currAmount \u003d currEntry.amount;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            String currDescription \u003d currEntry.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            LocalDate currDate \u003d currEntry.date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (currType.equals(entry.type)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currAmount \u003d\u003d entry.amount"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currDescription.equals(entry.description)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                \u0026\u0026 currDate.equals(entry.date)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        StorageWrite.setEntries(get());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 17,
      "Weng-Kexin": 36,
      "yetong1895": 16
    }
  },
  {
    "path": "src/main/java/dolla/task/Limit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * Limit is a class that stores all limit related methods (savings and budgets)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class Limit extends Record {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String saveType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Creates an instance of Limit."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param type Budget or Saving."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param amount Amount of money to be limited."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param duration Duration of the limit."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Limit(String type, double amount, String duration) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.recordType \u003d RECORD_LIMIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Returns a string to with information about the limit to be displayed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return String with information of limit."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordDetail() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \"[\" + type + \"] \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + \"[\" + amountToMoney() + \"] \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                + \"[\" + duration + \"]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return null; //to be modified"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        saveType \u003d type.equals(\"saving\") ? \"S\" : \"BU\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return  saveType + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + amount + \" | \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                + duration;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String amountToMoney() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return \"$\" + amount;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 47,
      "tatayu": 5,
      "yetong1895": 8
    }
  },
  {
    "path": "src/main/java/dolla/task/LimitList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.storage.StorageWrite;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * A class that contains methods regarding the LimitList (add, remove, check for existing limits)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitList extends RecordList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public LimitList(ArrayList\u003cRecord\u003e importLimitList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super(importLimitList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.add(newRecord);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get()); //save"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.removeFromList(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get()); //save"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        super.addWithIndex(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        StorageWrite.setLimits(get());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Method checks to see if the input limit already exists."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param dollaData The storage container for all the lists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param inputRecord The limit being input by user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param mode The mode the user is on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @return index of the currently existing limit (is - 1 if not found)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record inputRecord, String mode) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit inputLimit \u003d (Limit) inputRecord;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        int index \u003d - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        LimitList limitList \u003d (LimitList) dollaData.getRecordList(mode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        Limit currLimit;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String currType;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        String currDuration;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (int i \u003d 0; i \u003c limitList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currLimit \u003d (Limit) limitList.getFromList(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currType \u003d currLimit.type;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            currDuration \u003d currLimit.duration;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            if (currType.equals(inputLimit.type) \u0026\u0026 currDuration.equals(inputLimit.duration)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Weng-Kexin": 62,
      "yetong1895": 1
    }
  },
  {
    "path": "src/main/java/dolla/task/Record.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " * A class that is inherited from all forms of recording, ie. entry, Limit and debt so that we can perform polymorphism."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public abstract class Record {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected String recordType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_ENTRY \u003d \"entry\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_LIMIT \u003d \"limit\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static final String RECORD_DEBT \u003d \"debt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public abstract String getRecordDetail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public abstract String formatSave();//currently assuming no tags"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public String getRecordType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return recordType;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDescription(String s) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        description \u003d s;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setAmount(double d) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        amount \u003d d;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setType(String s) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d s;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDate(LocalDate ld) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        date \u003d ld;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public abstract String amountToMoney();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 29,
      "tatayu": 9,
      "Weng-Kexin": 12,
      "yetong1895": 27
    }
  },
  {
    "path": "src/main/java/dolla/task/RecordList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.DollaData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class RecordList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected ArrayList\u003cRecord\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public RecordList(ArrayList\u003cRecord\u003e importEntryList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        this.list \u003d importEntryList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        //this.list \u003d new ArrayList\u003cRecord\u003e(); // TODO: UPDATE!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public ArrayList\u003cRecord\u003e get() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public ArrayList\u003cRecord\u003e getCloneList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void add(Record newRecord) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.add(newRecord);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void insertPrevPosition(int prevPosition, Record newRecord) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.add(prevPosition, newRecord);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public Record getFromList(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setTypeInRecord(int index, String s) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setType(s);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setAmountInRecord(int index, double d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setAmount(d);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDescInRecord(int index, String s) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setDescription(s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void setDateInRecord(int index, LocalDate ld) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        list.get(index).setDate(ld);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void removeFromList(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public void addWithIndex(int modifyIndex, Record newRecord) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        list.add(modifyIndex, newRecord);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public int findExistingRecordIndex(DollaData dollaData, Record record, String mode) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 17,
      "Weng-Kexin": 45,
      "yetong1895": 4
    }
  },
  {
    "path": "src/main/java/dolla/ui/ActionUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class ActionUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message for empty stack."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of action command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printEmptyStackError(String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (type !\u003d null \u0026\u0026 type.equals(\"undo\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tSorry, you do not have any command to undo.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if (type !\u003d null \u0026\u0026 type.equals(\"redo\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tSorry, you do not have any command to redo.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the empty repeat message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printEmptyRepeatError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tSorry, you do not have any command to repeat.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 28
    }
  },
  {
    "path": "src/main/java/dolla/ui/DebtUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtUi extends Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private static final String MSG_EXISTING_DEBT \u003d \"\\tOOPS! You already have the following debt:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private static final String MSG_MODIFY_DEBT \u003d \"\\tWould you like to modify it instead?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print invalid debt format error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printInvalidDebtFormatError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                + \"\u0027owe(/borrow) [NAME] [AMOUNT] [DESCRIPTION] /due [DURATION] {/tag [TAGNAME]}\u0027\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the echo message after adding a bill."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param people The number of people."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param amount The total amount."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param nameList THe name list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printAverageAmount(int people, double amount, ArrayList\u003cString\u003e nameList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println((line));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tGot it! Total amount: $\" + amount + \" Number of people: \" + people);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the bill per person after splitting: \" + \"$\" + amount / people);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the name list: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c people; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + nameList.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the bill list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList the list that stores all the bill added by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printBillList(RecordList recordList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere is the list of bills you have added:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *Prints out the current debt that already exists."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void existingDebtPrinter(Debt debt) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(MSG_EXISTING_DEBT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\t\" + debt.getRecordDetail());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(MSG_MODIFY_DEBT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 63,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/main/java/dolla/ui/EntryUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryUi extends Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static final String MSG_EXISTING_ENTRY \u003d \"\\tOOPS! You already have the following entry:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static final String MSG_MODIFY_ENTRY \u003d \"\\tWould you like to modify it instead?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when the user did not properly specify the type of entry to add."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidEntryType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPlease specify the type of entry you want to add: income or expense.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when user tries to add income/expense, but inputs the wrong format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidEntryFormatError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\u0027add income(/expense) [AMOUNT] [DESCRIPTION] /on [DATE] {/tag [TAG]}\u0027\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out the current entry that already exists."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void existingEntryPrinter(Entry entry) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(MSG_EXISTING_ENTRY);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\t\" + entry.getRecordDetail());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(MSG_MODIFY_ENTRY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 39,
      "Weng-Kexin": 2
    }
  },
  {
    "path": "src/main/java/dolla/ui/LimitUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Limit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * LimitUi is a class that handles all limit related user interactions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "//@@author Weng-Kexin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class LimitUi extends Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_INVALID_FORMAT \u003d \"\\tOOPS! Please follow the format \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                                                     + \"\u0027set [limitType] [AMOUNT] [DURATION]\u0027\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_INVALID_AMOUNT \u003d \"\\tOOPS! Please input the amount correctly!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_INVALID_TYPE \u003d \"\\tOOPS! Please specify the type of limit! (saving/budget)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_INVALID_DURATION \u003d \"\\tOOPS! Please specify the duration of your limit! \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "                                                       + \"(daily/weekly/monthly)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_EXISTING_LIMIT \u003d \"\\tOOPS! You already have a limit set for that duration:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static final String MSG_MODIFY_LIMIT \u003d \"\\tWould you like to modify it?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints invalid amount message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidAmountPrinter() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_INVALID_AMOUNT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid set command printer."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidSetCommandPrinter() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_INVALID_FORMAT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid limit type printer."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidLimitTypePrinter() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_INVALID_TYPE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Invalid limit duration printer."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void invalidLimitDurationPrinter() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_INVALID_DURATION);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints out the current limit that already exists."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void existingLimitPrinter(Limit limit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_EXISTING_LIMIT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + limit.getRecordDetail());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(MSG_MODIFY_LIMIT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 1,
      "Weng-Kexin": 65
    }
  },
  {
    "path": "src/main/java/dolla/ui/ListUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ListUi extends Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out a list depending on the mode where \u0027list\u0027 is called."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode    The mode that is used when \u0027list\u0027 is input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param recordList The RecordList containing the data of the list to be printed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printList(String mode, RecordList recordList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tHere is the list of \" + mode + \" you have added:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when user wants to list down items in the specific list but it\u0027s empty."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode The mode that is used when the \u0027list\u0027 is input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printEmptyListError(String mode) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tYou haven\u0027t added any \" + mode + \" yet!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints error message when LogNum is not associated to a task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param index The Record number that does not exist in the specific list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param mode  The mode where the list is to be accessed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printNoRecordAssocError(int index, String mode) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\t\" + mode + \" number \" + (index + 1) + \" doesn\u0027t seem to exist in my records!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tTry looking through the list of \" + mode + \"again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 48
    }
  },
  {
    "path": "src/main/java/dolla/ui/ModifyUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ModifyUi extends Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out error message when the user inputs the wrong format for \u0027full modify\u0027 command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidFullModifyFormatError() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tplease follow the format \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\u0027modify [LIST NUM]\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints out error message when the user inputs the wrong format for \u0027partial modify\u0027 command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInvalidPartialModifyFormatError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tFor quick modify, please follow the format \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\\n\\t\u0027modify [LIST NUM] {/type [TYPE]} {/amount [AMOUNT]} {/desc [DESCRIPTION]} {/on [DATE]}\u0027\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"\\n\\tinclude the fields for whatever component you want to change :)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message asking what the user wants to modify the selected log to."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printInitialModifyMsg(String mode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tWhat would you want to change this \" + mode + \" to?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPS: You can cancel the modifying of the record by entering \u0027CANCEL\u0027.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to alert the user that the modify command has been cancelled."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printCancelModifyMsg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tOkay, modify command is cancelled! Sorry for the troubles!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints the details of the specified record and is typically called when a is modified,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * so that the user can check the details of the edited record."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param currRecord record to be printed, can be an entry, limit or debt."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void echoModifyRecord(Record currRecord) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve modified this \" + currRecord.getRecordType() + \": \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\t\" + currRecord.getRecordDetail());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 61
    }
  },
  {
    "path": "src/main/java/dolla/ui/RemoveUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class RemoveUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if user is trying trying to remove a non-existing record."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param number the total number of record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printRemoveError(int number) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tSorry, you only have \" + number + \" record(s).\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * The method will print the message of the removal of a user defined record."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param record the record to be removed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void echoRemove(String record) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this record: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\t\" + record);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if user have enter an invalid number to be removed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidRemoveMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tPlease enter a valid number to be removed.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 34
    }
  },
  {
    "path": "src/main/java/dolla/ui/SearchUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class SearchUi extends Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the log list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDesc(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d recordList.get().get(i).getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by name."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the log list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchName(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String tempt \u003d recordList.get().get(i).getName();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (tempt.contains(searchContent)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by date."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode          the mode"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList       the record list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDate(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d Time.dateToString(recordList.get().get(i).getDate());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * Print the result of searching by duration (for limit mode only)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param mode the mode"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param recordList the record list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     * @param searchContent the search content"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printSearchDuration(String mode, RecordList recordList, String searchContent) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tHere are the matching results found in \" + mode);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        int listNum \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        for (int i \u003d 0; i \u003c recordList.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            String temp \u003d recordList.get().get(i).getDuration();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            if (temp.contains(searchContent)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                listNum +\u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tatayu"
        },
        "content": "                System.out.println(\"\\t\" + listNum + \". \" + recordList.get().get(i).getRecordDetail());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tatayu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 91
    }
  },
  {
    "path": "src/main/java/dolla/ui/SortUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class SortUi extends Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print sorted list according to the type to be sorted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param list the list to be printed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param type the type of input of the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printSortedList(ArrayList\u003cRecord\u003e list, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"sorting date.........\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"description\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"sorting description.........\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"sorting name.........\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"amount\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"sorting amount.........\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\t\" + listNum + \". \" + list.get(i).getRecordDetail());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the invalid message for invalid sort type."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param mode the mode that the user is in."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidSort(String mode) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tYou have enter a invalid sort command!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"entry\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount/date/description].\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"debt\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount/date/description/name].\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        case \"limit\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"\\tYou can try [sort amount].\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 63
    }
  },
  {
    "path": "src/main/java/dolla/ui/StorageUi.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class StorageUi extends Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the message for successfully loading the save."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printStorageLoadMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tYour save data has been loaded :)\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the message after creating a folder if the folder needed is not found."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printCreateFolderMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"Looks like it\u0027s your first time, let me create a save file for you :)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message if reading the save file fail."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printErrorReadingSaveMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"*** there was an error reading dolla.txt ***\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print the error message of writing to save file fail."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printErrorWritingSaveMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"***Error writing to dolla.txt***\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 37
    }
  },
  {
    "path": "src/main/java/dolla/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "package dolla.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " * duke.Ui is a class that handles all interactions to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public abstract class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_DATE \u003d \"date\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    protected static final String SORT_NAME \u003d \"name\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private static String logo \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        \"\\t ____    _   _  _   _       \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + \"\\t|  _  \\\\/ _ \\\\| || | /  \\\\      \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + \"\\t| | | | | | | || |/ /\\\\ \\\\  \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + \"\\t| |_| | |_| | || |  __  | \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + \"\\t|____/ \\\\ _ /|_||_|_|  |_|       \\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    protected static String line \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String version \u003d \"\\tVersion 1.3\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    private static String welcomeMsg \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        \"\\tHello from\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + logo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        + version"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + line"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + \"\\n\\tI help keep track of your finance!\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        + \"\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //private static String dollaMode \u003d ANSI_CYAN + \"\\t\\n°º¤ø,¸¸,ø¤º°`°º¤ø,¸ MODE: DOLLA \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //        + \"  ¸,ø¤°º¤ø,¸¸,ø¤º°`°º¤ø,¸\\n\" + ANSI_RESET;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private static String dollaMode \u003d ANSI_CYAN + \"\\n\\t( o_o)O ~~ MODE: DOLLA \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            + \" ~~ \\n\" + ANSI_RESET;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints DOLLA logo and welcome message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(welcomeMsg);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(dollaMode);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints Dolla\u0027s new mode after being updated."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param newMode The new mode to be switched."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printModeUpdated(String newMode) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tGot it! Mode changed to \" + newMode + \"!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //System.out.println(ANSI_CYAN + \"\\t°º¤ø,¸¸,ø¤º°`°º¤ø,¸ MODE:  \" + newMode.toUpperCase()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        + \"  ¸,ø¤°º¤ø,¸¸,ø¤º°`°º¤ø,¸\\n\" + ANSI_RESET);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(ANSI_CYAN + \"\\t( *_*)O ~~ MODE:  \" + newMode.toUpperCase()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"  \\n\" + ANSI_RESET);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // TODO: DELETE"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * This method prints the strings of text from \u0027msg\u0027 with the proper format. Each element"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * from \u0027msg\u0027 is a line of text to be printed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * @param msg ArrayList of strings containing the messages to be printed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printMsg(ArrayList\u003cString\u003e msg) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (String outputMsg : msg) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            System.out.println(\"\\t\" + outputMsg);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // TODO: DELETE"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * This method prints the strings of text from \u0027s\u0027 with the proper format. Each element"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * from \u0027s\u0027 is a line of text to be printed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param s containing the messages to be printed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printMsg(String... s) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        final StringBuilder messageAccumulator \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        for (String str : s) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "            messageAccumulator.append(str);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + messageAccumulator);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints the details of the specified record and is typically called when a new record is entered,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * so that the user can check the details of the created record."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param currRecord record to be printed, can be an entry, limit or debt."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void echoAddRecord(Record currRecord) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this \" + currRecord.getRecordType() + \": \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + currRecord.getRecordDetail());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an error message when date in not in the format \u0027DD/MM/YYYY HHmm\u0027."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printDateTimeFormatError() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"\\tPlease use the format \u0027DD/MM/YYYY HHmm\u0027!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints an error message when date in not in the format \u0027DD/MM/YYYY\u0027."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printDateFormatError() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tPlease use the format \u0027DD/MM/YYYY\u0027!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints error message when string parsed is not an integer."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tatayu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param str to be parsed to an integer"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printInvalidNumberError(String str) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\t\" + str + \" is not a number. Please use a number instead!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints error message when command given is invalid."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void printInvalidCommandError() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"\\tOOPS! The command is invalid. Please enter a valid command\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Print no reminder msg."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public static void printNoReminderMsg() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(\"\\tThere are no reminders :)\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Print exit msg."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printExitMsg() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a message to inform user that a new tag has been added."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param tag     Tag that is added."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param record  Record the tag is added to."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printAddedTagMsg(String tag, Record record) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tNoted. I have added the tag \" + tag + \" to \" + record.getRecordDetail());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * Prints a message to inform user that a new tag has been added."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     * @param tag     Tag that is added."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    public static void printAddedTagMsg(String tag) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tNoted. I have added the tag \" + tag);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     * Prints a message to inform user that the command is not implemented yet."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printUpcomingFeature() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "        System.out.println(\"\\tSorry, I can\u0027t do that yet. Stay tuned for a later version and maybe my creators\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"will teach me how to do that. :(\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //@@author yetong1895"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will let the thread sleep for the \"time\" amount of time."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param time the time for the thread to sleep"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void sleep(int time) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Thread.sleep(time);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            Thread.currentThread().interrupt();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * This method will print input String in typewriter style."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     * @param message the message to print in typewriter style."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static void typewriter(String message) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for (int i \u003d 0; i \u003c message.length(); i++) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.printf(\"%c\",message.charAt(i));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            sleep(10);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 88,
      "Weng-Kexin": 102,
      "tatayu": 11,
      "yetong1895": 31,
      "-": 1
    }
  },
  {
    "path": "src/test/java/dolla/AddActionCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class AddActionCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 4
    }
  },
  {
    "path": "src/test/java/dolla/DebtTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tatayu"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import dolla.task.Debt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tatayu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tatayu"
        },
        "content": "//@@author tatayu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tatayu"
        },
        "content": "public class DebtTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    private Debt createNewDebt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        return new Debt(\"owe\", \"tata\", 20, \"food\", LocalDate.parse(\"2019-01-01\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"tata\", newDebt.getName());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void amountToMoney() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"$20.0\", newDebt.amountToMoney());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"food\", newDebt.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(LocalDate.parse(\"2019-01-01\"), newDebt.getDate());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"owe tata 20.0 food /due 01/01/2019\", newDebt.getUserInput());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void formatSave() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"O | tata | 20.0 | food | 01/01/2019\", newDebt.formatSave());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tatayu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    public void getRecordDetail() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        Debt newDebt \u003d createNewDebt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tatayu"
        },
        "content": "        assertEquals(\"[owe] [tata] [$20.0] [food] [/due 01/01/2019]\", newDebt.getRecordDetail());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tatayu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tatayu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tatayu": 57
    }
  },
  {
    "path": "src/test/java/dolla/DollaTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "public class DollaTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 10,
      "Weng-Kexin": 1,
      "-": 1
    }
  },
  {
    "path": "src/test/java/dolla/EntryListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.EntryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Weng-Kexin"
        },
        "content": "import dolla.task.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry1() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"expense\", 100, \"Expense Description\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"2001-12-03\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"income\", 200, \"Income Description\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"1111-11-11\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry3() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"income\", 300, \"New Entry\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"1000-01-01\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private EntryList createNewEntryList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cRecord\u003e newRecordList \u003d new ArrayList\u003cRecord\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newRecordList.add(createNewEntry1());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newRecordList.add(createNewEntry2());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new EntryList(newRecordList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void insertPrevPosition() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        EntryList newEntryList \u003d createNewEntryList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newEntryList.insertPrevPosition(0, createNewEntry3());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String firstEntryText \u003d newEntryList.getFromList(0).getRecordDetail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"[income] [$300.0] [New Entry] [/on 01/01/1000]\", firstEntryText);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void removeFromList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        EntryList newEntryList \u003d createNewEntryList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        newEntryList.removeFromList(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(1, newEntryList.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 49,
      "Weng-Kexin": 1
    }
  },
  {
    "path": "src/test/java/dolla/EntryTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.task.Entry;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class EntryTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private Entry createNewEntry() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new Entry(\"expense\", 100, \"Expense Description\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                LocalDate.parse(\"2001-12-03\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void amountToMoney() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"$100.0\", newEntry.amountToMoney());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getLogText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"[expense] [$100.0] [Expense Description] [/on 03/12/2001]\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                newEntry.getRecordDetail());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void formatSave() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"E | 100.0 | Expense Description | 03/12/2001\", newEntry.formatSave());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"Expense Description\", newEntry.getDescription());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Entry newEntry \u003d createNewEntry();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(\"expense 100.0 Expense Description /on 03/12/2001\", newEntry.getUserInput());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 48
    }
  },
  {
    "path": "src/test/java/dolla/action/UndoTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "package dolla.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class UndoTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 5
    }
  },
  {
    "path": "src/test/java/dolla/parser/DollaParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "package dolla.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import dolla.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//@@author omupenguin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class DollaParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String inputLine;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private String expectedResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //Private DollaParser createNewDollaParser(String inputLine) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //    return new DollaParser(inputLine);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void parseInputAddSuccess() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        inputLine \u003d \"add expense 100 Expense Description /on 03/12/2001\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //expectedResult \u003d \"AddEntryCommand{ type: expense, amount: 100.0, \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //        \"description: Expense Description, date: 03/12/2001, prePosition: -1 }\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        expectedResult \u003d \"AddEntryCommand{ expense, 100.0, Expense Description, 03/12/2001, -1 }\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Command command \u003d dollaParser.parseInput();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(expectedResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void parseInputAddInvalidInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        inputLine \u003d \"add potatoes /on 03/12/2001\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DollaParser dollaParser \u003d new DollaParser(inputLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        expectedResult \u003d \"ErrorCommand\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Command command \u003d dollaParser.parseInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(expectedResult, command.getCommandInfo());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 38
    }
  }
]
