[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    compile \u0027com.jfoenix:jfoenix:9.0.8\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            srcDirs \u003d [\"src/main/java\"]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        resources {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            srcDirs \u003d [\"src/main/resource\"]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 31,
      "CheeSengg": 2,
      "-": 29
    }
  },
  {
    "path": "src/main/java/Optix.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Software that stores all the finance for the Opera Hall."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Optix {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Set up the storage, ui, and list of shows."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Save data is loaded from storage.load()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param filePath is the path to the file which contains save data."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Optix(File filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        model \u003d new Model(storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * initialize Optix object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * path to the save file is defined in filePath."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param args is empty?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        new Optix(filePath).run();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To boot up the software."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                c.execute(model, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (OptixException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 13,
      "CheeSengg": 56
    }
  },
  {
    "path": "src/main/java/optix/commands/ByeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.write(model.getShows());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(MESSAGE_BYE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.exitOptix();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Exits Optix."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 25
    }
  },
  {
    "path": "src/main/java/optix/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected boolean quit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public abstract void execute(Model model, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 12,
      "CheeSengg": 12
    }
  },
  {
    "path": "src/main/java/optix/commands/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Prompts user on the correct Command Input format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String ADD_MENU \u003d \"To add a new show:                            \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                           + \"add SHOW_NAME|SCHEDULED_DATE|PRICE|SEATS_BASE_PRICE\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String DELETE_MENU \u003d \"To delete shows with particular name:         \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"delete-all SHOW_NAME_1|SHOW_NAME_2 | ...\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"To delete shows with specific name and date:  delete SHOW_NAME|SHOW_DATE\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String VIEW_MENU \u003d \"To view availability of seats for a show:     view SHOW_NAME | SHOW_DATE\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String SELL_MENU \u003d \"To sell seats to the audience:                \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"sell SHOW_NAME | SHOW_DATE | BUYER_NAME\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String LIST_MENU \u003d \"To list all shows for viewing:                list\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"To list all dates for a specific show:        list SHOW_NAME\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"TO list all shows for a specific month:       list MONTH YEAR\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String POSTPONE_MENU \u003d \"To postpone a show to a later date:           \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                          + \"postpone SHOW_NAME | OLD_DATE | NEW_DATE\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String EDIT_MENU \u003d \"To edit show name:                            \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"edit OLD_SHOW_NAME | SHOW_DATE | NEW_SHOW_NAME\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String MESSAGE_MENU \u003d \"Here are the Commands to use Optix: \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + ADD_MENU + DELETE_MENU + LIST_MENU + SELL_MENU + POSTPONE_MENU + VIEW_MENU + EDIT_MENU;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        command \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(MESSAGE_MENU);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(getSpecificCommand(command));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * String message to prompt user of correct Command input format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command The command in query."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String message for Command input format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if user command input does not exist in Optix."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getSpecificCommand(String command) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Valid \" + command + \" command:\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(ADD_MENU);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(DELETE_MENU);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(VIEW_MENU);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"sell\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(SELL_MENU);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(LIST_MENU);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"postpone\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(POSTPONE_MENU);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(EDIT_MENU);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 105
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/AddAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class AddAliasCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String newAlias;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private HashMap\u003cString, String\u003e commandAliasMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command to add a new alias to the command alias map."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param alias alias to add"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param command command which the alias is to be paired to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param commandAliasMap the command alias map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public AddAliasCommand(String alias, String command, HashMap\u003cString, String\u003e commandAliasMap) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.newAlias \u003d alias;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.commandAliasMap \u003d commandAliasMap;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(this.newAlias, this.command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // open target file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e entry : commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                writer.write(entry.getKey() + \"|\" + entry.getValue() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String successMessage \u003d String.format(\"Noted. The alias %s has been added to the command %s\\n\", this.newAlias, this.command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(successMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 58
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/RemoveAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class RemoveAliasCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String alias;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private HashMap\u003cString, String\u003e commandAliasMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command to remove an existing alias from aliasCommandMap."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param alias alias to remove"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param command command which the alias belongs to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param commandAliasMap the command alias map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public RemoveAliasCommand(String alias, String command, HashMap\u003cString, String\u003e commandAliasMap) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.alias \u003d alias;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.commandAliasMap \u003d commandAliasMap;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // edit command alias map"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.remove(this.alias, this.command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // open target file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e entry : commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                writer.write(entry.getKey() + \"|\" + entry.getValue() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String successMessage \u003d String.format(\"Noted. The alias %s has been removed\\n\", this.alias);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(successMessage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 58
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/ResetAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class ResetAliasCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // open target file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String systemMessage \u003d \"Alias settings have been reset to default.\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(systemMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 37
    }
  },
  {
    "path": "src/main/java/optix/commands/seats/SellSeatCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class SellSeatCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String[] seats;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String buyerName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * instantiates the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * This function is called when the customer is"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * interested in viewing the available seats"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName  name of show"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showDate  date of show"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param buyerName name of buyer"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public SellSeatCommand(String showName, String showDate, String buyerName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showDate \u003d showDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.buyerName \u003d buyerName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seats \u003d new String[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Instantiates the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * This function is called when the customer has already"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * decided on his seat."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName  name of show."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showDate  date of show."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param buyerName name of buyer."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seats     desired seat."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public SellSeatCommand(String showName, String showDate, String buyerName, String seats) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showDate \u003d showDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.buyerName \u003d buyerName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seats \u003d seats.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //need to refactor"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (shows.containsKey(showLocalDate) \u0026\u0026 shows.get(showLocalDate).hasSameName(showName)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre show \u003d shows.get(showLocalDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (seats.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    new ViewSeatsCommand(showName, showDate).execute(model, ui, storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message.append(querySeats(ui, show));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message.append(show.sellSeats(buyerName, seats));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            model.setShows(shows);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //need to refactor"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String querySeats(Ui ui, Theatre show) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String seatInput \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e seatsSold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double totalCost \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Key in your preferred seat: \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatInput \u003d ui.readCommand();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (seatInput.trim().toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            // TODO: Bug fix for seatInput query. If deviated from seat input, error will occur."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            double costOfSeat \u003d show.sellSeats(buyerName, seatInput.trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (costOfSeat !\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                totalCost +\u003d costOfSeat;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatsSold.add(seatInput);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(\"Purchase of \" + seatInput + \" was successful.\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(\"☹ OOPS!!! Purchase of \" + seatInput + \" was unsuccessful.\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!seatsSold.isEmpty()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsSold + \"\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The total cost of the ticket is \" + new DecimalFormat(\"$#.00\").format(totalCost) + \"\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"No Seats were purchased\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 19,
      "CheeSengg": 118
    }
  },
  {
    "path": "src/main/java/optix/commands/seats/ViewSeatsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ViewSeatsCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ViewSeatsCommand(String showName, String showDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showDate \u003d showDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(String.format(\"Here is the layout of the theatre for %s on %s:\\n\", showName, showDate));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (shows.containsKey(showLocalDate) \u0026\u0026 shows.get(showLocalDate).hasSameName(showName)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre theatre \u003d shows.get(showLocalDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(theatre.getSeatingArrangement());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(\"☹ OOPS!!! Sorry the show \" + showName + \" cannot be found.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 55
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double seatBasePrice;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_IN_THE_PAST \u003d \"☹ OOPS!!! It is not possible to perform in the past.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_THEATRE_BOOKED \u003d \"☹ OOPS!!! There is already a show being added on that date.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"Please try again. \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"Got it. I\u0027ve added this show:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"%1$s on %2$s\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Add a show to the show list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName      name of new show."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param date          date of new show."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param cost          cost of setting up the new show."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatBasePrice the base price of the seat."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public AddCommand(String showName, String date, double cost, double seatBasePrice) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // need to check if it is a valid date if not need to throw exception"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatBasePrice \u003d seatBasePrice;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre theatre \u003d new Theatre(showName, cost, seatBasePrice);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate today \u003d storage.getToday();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            if (!formatter.isValidDate(date)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (showLocalDate.compareTo(today) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(MESSAGE_IN_THE_PAST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else if (shows.containsKey(showLocalDate)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(MESSAGE_THEATRE_BOOKED);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                shows.put(showLocalDate, theatre);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                model.setShows(shows);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(String.format(MESSAGE_SUCCESSFUL, theatre.getShowName(), date));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 11,
      "CheeSengg": 67
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/DeleteAllCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class DeleteAllCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String[] showNames;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"Noted. These are the deleted entries:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UNSUCCESSFUL \u003d \"Sorry, these shows were not found:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public DeleteAllCommand(String[] showNames) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.showNames \u003d showNames;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command that deletes all instances of a specific show."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e deletedShows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e missingShows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (String show : this.showNames) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            boolean isFound \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ArrayList\u003cMap.Entry\u003cLocalDate, Theatre\u003e\u003e entryArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (entry.getValue().hasSameName(show.trim())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    String showDescription \u003d entry.getKey().toString() + \u0027 \u0027 + entry.getValue().getShowName();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    entryArrayList.add(entry);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    deletedShows.add(showDescription);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // add show to missing show list if it\u0027s not found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            if (!isFound) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                missingShows.add(show);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // remove entry from shows."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : entryArrayList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                shows.remove(entry.getKey(), entry.getValue());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (!deletedShows.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(MESSAGE_SUCCESSFUL);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            for (String infoStrings : deletedShows) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(infoStrings.trim()).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (!missingShows.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(MESSAGE_UNSUCCESSFUL);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            for (String missingShow : missingShows) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(missingShow.trim()).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        model.setShows(shows);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 47,
      "CheeSengg": 26
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/DeleteOneCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class DeleteOneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String showDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"Noted. The show \u003c%1$s\u003e scheduled on \u003c%2$s\u003e has been removed.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UNSUCCESSFUL \u003d \"Unable to find show called \u003c%1$s\u003e scheduled on \u003c%2$s\u003e.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public DeleteOneCommand(String showName, String showDate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.showDate \u003d showDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            Theatre showToDelete \u003d shows.get(showLocalDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (showToDelete !\u003d null \u0026\u0026 showToDelete.hasSameName(showName)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                shows.remove(showLocalDate, showToDelete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                model.setShows(shows);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_SUCCESSFUL, showName, showDate));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_UNSUCCESSFUL, showName, showDate));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 19,
      "CheeSengg": 36
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UPDATE_SUCCESSFUL \u003d \"Show has been successfully updated to \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UPDATE_UNSUCCESSFUL \u003d \"☹ OOPS!!! The show you are finding does not exist!\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String oldShowName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String newShowName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Edit the name of an existing show."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param oldShowName current name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showDate    date where the show is scheduled"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param newShowName new name"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public EditCommand(String oldShowName, String showDate, String newShowName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.oldShowName \u003d oldShowName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.newShowName \u003d newShowName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showDate \u003d showDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localShowDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (shows.containsKey(localShowDate) \u0026\u0026 shows.get(localShowDate).hasSameName(oldShowName)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre show \u003d shows.get(localShowDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                show.setShowName(newShowName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                shows.replace(localShowDate, show);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                model.setShows(shows);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d MESSAGE_UPDATE_SUCCESSFUL + newShowName + \".\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d MESSAGE_UPDATE_UNSUCCESSFUL;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 7,
      "CheeSengg": 62
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_LIST_FOUND \u003d \"Here are the list of shows:\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_LIST_NOT_FOUND \u003d \"☹ OOPS!!! There are no shows in the near future.\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_ENTRY \u003d \"%1$d. %2$s (on: %3$s)\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate today \u003d storage.getToday();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!shows.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(MESSAGE_LIST_FOUND);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre show \u003d entry.getValue();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate showDate \u003d entry.getKey();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_ENTRY, counter, show.getShowName(), showDate));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_LIST_NOT_FOUND);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 46
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListDateCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListDateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final String monthOfYear;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_FOUND_SHOW \u003d \"These shows are showing on %1$s: \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_NO_SHOWS_FOUND \u003d \"☹ OOPS!!! There are no shows on %1$s.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_ENTRY \u003d \"%1$d. %2$s on %3$s\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ListDateCommand(String monthOfYear) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.monthOfYear \u003d monthOfYear;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d monthOfYear.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int year \u003d getYear(splitStr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int month \u003d getMonth(splitStr[0].toLowerCase());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (year \u003d\u003d 0 || month \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate startOfMonth \u003d formatter.getStartOfMonth(year, month);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate endOfMonth \u003d formatter.getEndOfMonth(year, month);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(String.format(MESSAGE_FOUND_SHOW, monthOfYear));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            boolean hasShow \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while (startOfMonth.compareTo(endOfMonth) !\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (shows.containsKey(startOfMonth)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    hasShow \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message.append(String.format(MESSAGE_ENTRY, counter, shows.getShowName(startOfMonth), startOfMonth));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                startOfMonth \u003d startOfMonth.plusDays(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!hasShow) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(String.format(MESSAGE_NO_SHOWS_FOUND, monthOfYear));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getYear(String year) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return Integer.parseInt(year);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getMonth(String month) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"january\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"february\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"march\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"april\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"may\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"june\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"july\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"august\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"september\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"october\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"november\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 11;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"december\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 12;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 116
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListShowCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListShowCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_FOUND_SHOW \u003d \"The show %1$s is showing on the following following dates: \\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_ENTRY \u003d \"%1$d. %2$s\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ListShowCommand(String showName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(String.format(MESSAGE_FOUND_SHOW, showName));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        boolean hasShow \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showDate \u003d entry.getKey().toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            // Can add to check whether the show has seats available. If not seats are available we can remove it from the listing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (entry.getValue().hasSameName(showName.trim())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                hasShow \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_ENTRY, counter, showDate));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!hasShow) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 60
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/PostponeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String oldDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String newDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_DOES_NOT_MATCH \u003d \"☹ OOPS!!! Did you get the wrong date or wrong show. \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"Try again!\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_CLASH \u003d \"☹ OOPS!!! There already exists a show for %1$s.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_INVALID_NEW_DATE \u003d \"☹ OOPS!!! It is not possible to postpone to the past.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"%1$s has been postponed from %2$s to %3$s.\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command to postpone show."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName show name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param oldDate  current show date"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param newDate  new show date"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public PostponeCommand(String showName, String oldDate, String newDate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // need to check if both dates are valid if not throw exception"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // need to check if the event was completed in the past. Past event shouldn\u0027t be postponed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.oldDate \u003d oldDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate today \u003d storage.getToday();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(oldDate) || !formatter.isValidDate(newDate)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localOldDate \u003d formatter.toLocalDate(oldDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localNewDate \u003d formatter.toLocalDate(newDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (localNewDate.compareTo(today) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d MESSAGE_INVALID_NEW_DATE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (!shows.containsKey(localOldDate)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d MESSAGE_SHOW_NOT_FOUND;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else if (shows.containsKey(localNewDate)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d String.format(MESSAGE_SHOW_CLASH, newDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else if (!shows.get(localOldDate).hasSameName(showName)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d MESSAGE_DOES_NOT_MATCH;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    Theatre postponedShow \u003d shows.removeShow(localOldDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    shows.put(localNewDate, postponedShow);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    model.setShows(shows);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d String.format(MESSAGE_SUCCESSFUL, showName, oldDate, newDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d e.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 7,
      "CheeSengg": 81
    }
  },
  {
    "path": "src/main/java/optix/commons/Model.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowHistoryMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Model {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ShowHistoryMap showsHistory \u003d new ShowHistoryMap();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ShowMap shows \u003d new ShowMap();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * The Optix model."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage the object which handles data from the save file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Model(Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.loadShows(shows, showsHistory);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.loadArchive(showsHistory);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.writeArchive(showsHistory);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowMap getShows() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowHistoryMap getShowsHistory() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showsHistory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShows(ShowMap shows) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.shows \u003d shows;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShowsHistory(ShowHistoryMap showsHistory) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showsHistory \u003d showsHistory;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 4,
      "CheeSengg": 31
    }
  },
  {
    "path": "src/main/java/optix/commons/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Seat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Show;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowHistoryMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File archiveFilePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File showMapFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate today;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Initialise a new storage object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param filePath path to the save file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Storage(File filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showMapFilePath \u003d new File(filePath + \"\\\\optix.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.archiveFilePath \u003d new File(filePath + \"\\\\archive.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!filePath.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                filePath.mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!showMapFilePath.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                showMapFilePath.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!archiveFilePath.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                archiveFilePath.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to create file.\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load the data from the save file into model."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void loadShows(ShowMap shows, ShowHistoryMap showsHistory) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileReader rd \u003d new FileReader(showMapFilePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(rd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String[] arrStr \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (arrStr[0].toLowerCase().equals(\"s\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    LocalDate date \u003d localDate(arrStr[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    String showName \u003d arrStr[2].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    double cost \u003d Double.parseDouble(arrStr[3]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    double revenue \u003d Double.parseDouble(arrStr[4]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    double seatBasePrice \u003d Double.parseDouble(arrStr[5]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    if (date.compareTo(today) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        Show show \u003d new Show(showName, revenue);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        showsHistory.put(date, show);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    Theatre theatre \u003d new Theatre(showName, cost, revenue, seatBasePrice);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    loadSeat(br, theatre);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    shows.put(date, theatre);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to load file.\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load the seats from the save file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param br      buffered reader"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param theatre the theatre to populate"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return the populated theatre"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @throws IOException when buffered reader has problems with readLine()."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Theatre loadSeat(BufferedReader br, Theatre theatre) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while ((message \u003d br.readLine()) !\u003d null \u0026\u0026 !message.equals(\"next\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] arrStr \u003d message.split(\"\\\\|\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String buyerName \u003d arrStr[0].trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int row \u003d Integer.parseInt(arrStr[1].trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int col \u003d Integer.parseInt(arrStr[2].trim());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            theatre.setSeat(buyerName, row, col);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return theatre;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load information from archive."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showsHistory Map of shows."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void loadArchive(ShowHistoryMap showsHistory) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileReader rd \u003d new FileReader(archiveFilePath);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(rd);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String[] arrStr \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d localDate(arrStr[0]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String showName \u003d arrStr[1].trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                double revenue \u003d Double.parseDouble(arrStr[2]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Show show \u003d new Show(showName, revenue);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                showsHistory.put(date, show);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to load file.\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * write to the save file."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Deletes the old file and writes a new file."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param shows ShowMap of shows."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void write(ShowMap shows) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showMapFilePath.delete();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showMapFilePath.createNewFile();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileWriter wr \u003d new FileWriter(showMapFilePath, true);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre theatre \u003d entry.getValue();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d entry.getKey();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                wr.write(String.format(\"S | %s | %s\", date, theatre.writeToFile()));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                writeSeats(wr, theatre);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to write to file.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void writeSeats(FileWriter wr, Theatre theatre) throws IOException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Seat[][] seats \u003d theatre.getSeats();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (seats[i][j].isBooked()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    wr.write(String.format(\"%s | %d | %d\\n\", seats[i][j].getName(), i, j));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        wr.write(\"next\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Place shows that have passed into an archive."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showsHistory Map of shows."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void writeArchive(ShowHistoryMap showsHistory) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            archiveFilePath.delete();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            archiveFilePath.createNewFile();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileWriter wr \u003d new FileWriter(archiveFilePath, true);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Show\u003e entry : showsHistory.entrySet()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Show show \u003d entry.getValue();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d entry.getKey();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                wr.write(String.format(\"%s | %s | %s\\n\", date, show.getShowName(), show.getProfit()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to write to file.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate localDate(String date) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        //Convert string to localdate"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get today\u0027s date as LocalDate object."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getToday() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return today;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 32,
      "CheeSengg": 186
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Seat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Seat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double ticketPrice;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String buyerName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String seatTier;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isBooked;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * the seat object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatTier tier of the seat. Higher tier seat is less precious."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Seat(String seatTier) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.isBooked \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.buyerName \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatTier \u003d seatTier;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.buyerName \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setBooked(boolean booked) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        isBooked \u003d booked;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //store this in case of refund."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setTicketPrice(double ticketPrice) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.ticketPrice \u003d ticketPrice;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isBooked() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return isBooked;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return isBooked ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void setSeatTier(String seatTier) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.seatTier \u003d seatTier;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return buyerName;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeatTier() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seatTier;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Get the price of the seat according to its tier."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * The seat tier cannot be out of bounds."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param basePrice base seat price of a show."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return price seat according to its tier."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getSeatPrice(double basePrice) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        assert (Integer.parseInt(seatTier) \u003c\u003d 3 \u0026\u0026 Integer.parseInt(seatTier) \u003e 0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ticketPrice \u003d basePrice * 1.5;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"2\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ticketPrice \u003d basePrice * 1.2;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"3\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ticketPrice \u003d basePrice;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return ticketPrice;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 22,
      "CheeSengg": 58
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Show.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Show {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final String showName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final double profit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Show(String showName, double profit) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.profit \u003d profit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getProfit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return profit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 19
    }
  },
  {
    "path": "src/main/java/optix/commons/model/ShowHistoryMap.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ShowHistoryMap extends TreeMap\u003cLocalDate, Show\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 8
    }
  },
  {
    "path": "src/main/java/optix/commons/model/ShowMap.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * TreeMap to sort all usage of the Opera Theatre according to calendar."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ShowMap extends TreeMap\u003cLocalDate, Theatre\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Remove a show from the show map."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param key the show to be removed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return the show that is removed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre removeShow(Object key) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre show \u003d this.get(key);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.remove(key);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return show;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get show name."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param key the show being queried."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the name of the show."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName(Object key) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.get(key).getShowName();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 5,
      "CheeSengg": 25
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Theatre.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Theatre {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@SuppressWarnings(\"checkstyle:membername\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private final String SPACES \u003d \"  \"; // CHECKSTYLE IGNORE THIS LINE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private final String STAGE \u003d \"                |STAGE|           \\n\"; // CHECKSTYLE IGNORE THIS LINE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Seat[][] seats \u003d new Seat[6][10];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierOneSeats;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierTwoSeats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierThreeSeats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double seatBasePrice;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double revenue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * instantiates Theatre Object. Used when loading save file data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName      name of show"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param cost          cost of show"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param revenue       expected revenue, calculated from seat purchases - cost"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatBasePrice base price of seats"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre(String showName, double cost, double revenue, double seatBasePrice) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatBasePrice \u003d seatBasePrice;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        initializeLayout();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Instantiates Theatre Object. Used when there is no revenue yet (fresh instance)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName      name of show"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param cost          cost of show"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatBasePrice base price of seats."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre(String showName, double cost, double seatBasePrice) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.revenue \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatBasePrice \u003d seatBasePrice;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        initializeLayout();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    // can have multiple layouts to be added for future extensions."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void initializeLayout() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierOneSeats \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierTwoSeats \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierThreeSeats \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                switch (i) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"1\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tierOneSeats++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"2\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tierTwoSeats++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"3\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tierThreeSeats++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    assert i \u003e seats.length;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShowName(String showName) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showName;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Seat[][] getSeats() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seats;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * function to set the status of a seat (change it to booked when a seat is bought)."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param buyerName Name of buyer"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param row       desired seat row"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param col       desired seat column"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setSeat(String buyerName, int row, int col) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seats[row][col].setBooked(true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seats[row][col].setName(buyerName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (seats[row][col].getSeatTier()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierOneSeats--;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierTwoSeats--;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierThreeSeats--;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Should have a Seat Tier!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Get the seating arrangement of the Theatre."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return seating arrangement as a String."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeatingArrangement() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder seatingArrangement \u003d new StringBuilder(STAGE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatingArrangement.append(SPACES);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatingArrangement.append(seats[i][j].getSeat());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatingArrangement.append(\"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seatingArrangement.append(getSeatsLeft());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seatingArrangement.toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getSeatsLeft() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"\\nTier 1 Seats: \" + tierOneSeats + \"\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Tier 2 Seats: \" + tierTwoSeats + \"\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Tier 3 Seats: \" + tierThreeSeats + \"\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"%s | %f | %f | %f\\n\", showName, cost, revenue, seatBasePrice);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean hasSameName(String checkName) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showName.toLowerCase().equals(checkName.toLowerCase());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Sell seats to customers."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param buyerName name of buyer"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seat      desired seat"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return cost of seat."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double sellSeats(String buyerName, String seat) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int row \u003d getRow(seat.substring(0, 1));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int col \u003d getCol(seat.substring(1));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double costOfSeat \u003d 0;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        //This needs to be changed in the event that the theatre dont have fixed seats for each row"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (row \u003d\u003d -1 || col \u003d\u003d -1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return costOfSeat;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!seats[row][col].isBooked()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            Seat soldSeat \u003d seats[row][col];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            soldSeat.setBooked(true);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            soldSeat.setName(buyerName);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            costOfSeat \u003d soldSeat.getSeatPrice(seatBasePrice);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            revenue +\u003d costOfSeat;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            switch (soldSeat.getSeatTier()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierOneSeats--;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierTwoSeats--;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierThreeSeats--;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seats[row][col] \u003d soldSeat;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return costOfSeat;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Sell seats to customers. Used when customer wants to buy multiple seats."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param buyerName name of buyer"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seats     String array of desired seats"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return Message detailing status of desired seats (sold out or successfully purchased.)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String sellSeats(String buyerName, String... seats) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double totalCost \u003d 0;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e seatsSold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e seatsNotSold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (String seatNumber : seats) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            double costOfSeat \u003d sellSeats(buyerName, seatNumber);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (costOfSeat !\u003d 0) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                totalCost +\u003d costOfSeat;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatsSold.add(seatNumber);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatsNotSold.add(seatNumber);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatsSold.isEmpty()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d String.format(\"☹ OOPS!!! All of the seats %s are unavailable\\n\", seatsNotSold);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (seatsNotSold.isEmpty()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsSold + \"\\n\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The total cost of the ticket is \" + new DecimalFormat(\"$#.00\").format(totalCost) + \"\\n\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsSold + \"\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The total cost of the ticket is \" + new DecimalFormat(\"$#.00\").format(totalCost) + \"\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The following seats are unavailable: \\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsNotSold + \"\\n\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getRow(String row) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (row) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getCol(String col) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (col) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"5\":"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"6\":"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"7\":"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"8\":"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"9\":"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"10\":"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public int getTierOneSeats() {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return tierOneSeats;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public int getTierTwoSeats() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return tierTwoSeats;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public int getTierThreeSeats() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return tierThreeSeats;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private int decreaseSeats(int numSeats) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return numSeats--;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 63,
      "CheeSengg": 239
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 7
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixInvalidCommandException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Thrown when user does not provide the correct input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixInvalidCommandException extends OptixException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixInvalidCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(\"☹ OOPS!!! That is an invalid command\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Please try again. \\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 11
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixInvalidDateException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Thrown when the format of the date given is wrong"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * or when the date does not exist."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixInvalidDateException extends OptixException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixInvalidDateException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(\"☹ OOPS!!! That is an invalid date.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Please try again. \\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 12
    }
  },
  {
    "path": "src/main/java/optix/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Reads in the input user and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * returns the response by Optix."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Stores the appropriate response based on users input command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Once user command is processed, Optix\u0027s response is stored using"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * setMessage method to store the appropriate message. Use"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * by showCommandLine method to print out the response."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String SPACES \u003d \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_GREET \u003d \"Hello! I\u0027m Optix\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d MESSAGE_GREET;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Read in the command by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String input by user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Set appropriate response by Optix to be shown based on user\u0027s input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param message String Optix will respond with based on user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Prints out the Optix\u0027s response based on user\u0027s input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Response by Optix."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String showCommandLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return SPACES + message + SPACES;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void exitOptix() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 3,
      "CheeSengg": 62
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import com.jfoenix.controls.JFXTextField;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private VBox display;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label optixResponse;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXTextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        scrollPane.vvalueProperty().bind(display.heightProperty());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String inputText \u003d userInput.getText();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        optixResponse.setText(inputText);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // display.getChildren().add(ListView.handleUserInput(userInput.getText()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 36
    }
  },
  {
    "path": "src/main/java/optix/util/OptixDateFormatter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Formats input date to YYYY-MM-DD to be sorted in ShowMap."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixDateFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get correct String format for DateFormatter."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param date Input date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String prefix for DateFormatter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getFormat(String date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int padCount \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder format \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] timeType \u003d {\"d\", \"M\", \"y\", \"H\", \"H\", \"m\", \"m\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c date.length(); i +\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            char c \u003d date.charAt(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (Character.isDigit(c)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                format.append(timeType[padCount]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                if (padCount \u003e\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    padCount +\u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                format.append(c);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                padCount +\u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return format.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Format date from String to LocalDate."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param dateString Input date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return LocalDate for the input date. Format: YYYY-MM-DD"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate toLocalDate(String dateString) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(getFormat(dateString));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        //Convert string to localdate"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Checks if date given exists in calendar."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param date String input of the date."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} date can be found in the calendar"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * {@code false} otherwise"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isValidDate(String date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int yr \u003d Integer.parseInt(splitStr[2]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int mth \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int dy \u003d Integer.parseInt(splitStr[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (mth \u003d\u003d 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return (isLeap(yr) \u0026\u0026 dy \u003c\u003d 29) || (!isLeap(yr) \u0026\u0026 dy \u003c\u003d 28);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (mth \u003d\u003d 4 || mth \u003d\u003d 6 || mth \u003d\u003d 9 || mth \u003d\u003d 11) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 30;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (mth \u003d\u003d 1 || mth \u003d\u003d 3 || mth \u003d\u003d 5 || mth \u003d\u003d 7 || mth \u003d\u003d 8 || mth \u003d\u003d 10 || mth \u003d\u003d 12) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 31;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Check if it is a leap year."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year to check whether its a leap year"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} if it is a leap year"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * {@code false} otherwise"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isLeap(int year) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return year % 400 \u003d\u003d 0 || (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the first day of the month in query."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year The year in query."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month The month in query."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The first day of the month in LocalDate."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getStartOfMonth(int year, int month) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.of(year, month, 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the first day of the following month for the month in query."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year The year in query."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month The month in query."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The first day of the following month for the month in query in LocalDate."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getEndOfMonth(int year, int month) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.of(year, month, 1).plusMonths(1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 7,
      "CheeSengg": 97
    }
  },
  {
    "path": "src/main/java/optix/util/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.AddAliasCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.RemoveAliasCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.ResetAliasCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteAllCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteOneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.EditCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListDateCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListShowCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.PostponeCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.seats.ViewSeatsCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * Parse input arguments and create a new Command Object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static final HashMap\u003cString, String\u003e commandAliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    // array of all possible command values"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static String[] commandList \u003d {\"bye\", \"list\", \"help\", \"edit\", \"sell\", \"view\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        \"postpone\", \"add\", \"delete-all\", \"delete\"};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse input argument and create a new Command Object based on the first input word."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param fullCommand The entire input argument."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Command Object based on the first input word."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixException if the Command word is not recognised by Optix."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static Command parse(String fullCommand) throws OptixException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // read the preferences from saved file and put them into commandAliasMap"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            loadPreferences();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            System.out.print(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // populate commandAliasMap"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"s\", \"sell\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"v\", \"view\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"a\", \"add\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"D\", \"delete-all\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"d\", \"delete\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"e\", \"edit\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"L\", \"list\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"p\", \"postpone\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"b\", \"bye\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"h\", \"help\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add exception for null pointer exception. e.g. postpone"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String aliasName \u003d splitStr[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String commandName \u003d commandAliasMap.getOrDefault(aliasName, aliasName);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandName \u003d commandName.toLowerCase().trim(); // is the lower case and trim necessary ?"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            switch (commandName) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"reset-alias\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ResetAliasCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (splitStr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            // There will definitely be exceptions thrown here. Need to stress test and then categorise"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            switch (commandName) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseEditShow(splitStr[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"sell\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseSellSeats(splitStr[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"view\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseViewSeating(splitStr[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"postpone\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parsePostpone(splitStr[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseList(splitStr[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"add\": // add poto|5/10/2020|2000|20"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseAddShow(splitStr[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"delete-all\": // e.g. delete-all poto|lion king"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return parseDeleteAllOfShow(splitStr[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"delete\": // e.g. delete 2/10/2019|poto"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return parseDeleteOneOfShow(splitStr[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new HelpCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"add-alias\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return parseAddAlias(splitStr[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"remove-alias\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return parseRemoveAlias(splitStr[1]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static Command parseRemoveAlias(String splitStr) throws OptixException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] aliasDetails \u003d splitStr.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String alias \u003d aliasDetails[0];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String command \u003d aliasDetails[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (commandAliasMap.containsValue(command) \u0026\u0026 commandAliasMap.containsKey(alias)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            return new RemoveAliasCommand(alias, command, commandAliasMap);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new OptixException(\"Error removing alias.\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static Command parseAddAlias(String splitStr) throws OptixException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] aliasDetails \u003d splitStr.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String alias \u003d aliasDetails[0];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String command \u003d aliasDetails[1];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (commandAliasMap.containsValue(command) \u0026\u0026 !commandAliasMap.containsKey(alias)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            return new AddAliasCommand(alias, command, commandAliasMap);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new OptixException(\"Alias already exists, or the command to alias does not exist.\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static void loadPreferences() throws IOException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (filePath.exists() \u0026\u0026 filePath.length() \u003e 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String aliasPreference;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            while ((aliasPreference \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String[] aliasDetails \u003d aliasPreference.split(\"\\\\|\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String alias \u003d aliasDetails[0];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String command \u003d aliasDetails[1];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                if (Arrays.asList(commandList).contains(command)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    commandAliasMap.put(alias, command);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    System.out.println(\"error inserting alias preference.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            resetPreferences();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            savePreferences();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static void savePreferences()  {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            assert writer !\u003d null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.println(entry.getKey() + \"\\\\|\" + entry.getValue());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        assert writer !\u003d null;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static void resetPreferences() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.clear();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"b\", \"bye\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"l\", \"list\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"h\", \"help\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"e\", \"edit\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"s\", \"sell\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"v\", \"view\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"p\", \"postpone\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"a\", \"add\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"D\", \"delete-all\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"d\", \"delete\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for PostponeCommand."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param postponeDetails The details to create new PostponeCommand Object."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new PostponeCommand Object."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parsePostpone(String postponeDetails) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d postponeDetails.trim().split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length !\u003d 3) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String oldDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String newDate \u003d splitStr[2].trim();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new PostponeCommand(showName, oldDate, newDate);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for AddCommand."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showDetails The details to create a new AddCommand Object."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new AddCommand Object."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws NumberFormatException        if user attempt to convert String into double."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseAddShow(String showDetails) throws OptixInvalidCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d showDetails.trim().split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length !\u003d 4) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double showCost \u003d Double.parseDouble(splitStr[2]);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double seatBasePrice \u003d Double.parseDouble(splitStr[3]);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new AddCommand(showName, showDate, showCost, seatBasePrice);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for DeleteOneCommand."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showDetails The details to create a new DeleteOneCommand Object."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new DeleteOneCommand Object."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseDeleteOneOfShow(String showDetails) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] splitStr \u003d showDetails.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length !\u003d 2) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new DeleteOneCommand(showName, showDate);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for DeleteAllCommand."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param deleteDetails The name of all the shows being queried."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new DeleteAllCommand Object."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static Command parseDeleteAllOfShow(String deleteDetails) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d deleteDetails.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new DeleteAllCommand(splitStr);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for ViewSeatsCommand."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showDetails The details to create a new ViewSeatsCommand Object."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new ViewSeatsCommand Object."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseViewSeating(String showDetails) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d showDetails.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length !\u003d 2) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new ViewSeatsCommand(showName, showDate);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Parse the remaining user input to its respective parameters for SellSeatsCommand."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details The details to create a new SellSeatsCommand Object."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new SellSeatsCommand Object."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseSellSeats(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d details.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003c 3 || splitStr.length \u003e 4) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String buyerName \u003d splitStr[2].trim();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String seats \u003d splitStr[3].trim();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return new SellSeatCommand(showName, showDate, buyerName, seats);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new SellSeatCommand(showName, showDate, buyerName);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for EditCommand."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details The details to create a new EditCommand Object."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new EditCommand Object."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if the user input does not have the correct number of parameters."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseEditShow(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d details.split(\"\\\\|\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length !\u003d 3) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String oldShowName \u003d splitStr[0].trim();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showDate \u003d splitStr[1].trim();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String newShowName \u003d splitStr[2].trim();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new EditCommand(oldShowName, showDate, newShowName);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for ListDateCommand or ListShowCommand."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details The details to create a new ListDateCommand or ListShowCommand Object."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new ListDateCommand or ListShowCommand Object."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseList(String details) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d details.split(\" \");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListDateCommand(details);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListShowCommand(details);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new ListShowCommand(details);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 154,
      "CheeSengg": 218
    }
  },
  {
    "path": "src/test/java/Optix/commands/AddCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand testCommand \u003d new AddCommand(\"dummy show name\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Got it. I\u0027ve added this show:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"dummy show name on 5/5/2020\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 23,
      "CheeSengg": 10
    }
  },
  {
    "path": "src/test/java/Optix/commands/ByeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ByeCommand testCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 22,
      "CheeSengg": 8
    }
  },
  {
    "path": "src/test/java/Optix/commands/DeleteAllCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteAllCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class DeleteAllCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow2 \u003d new AddCommand(\"Test Show 2\", \"6/5/2020\", 2000, 50);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteAllCommand testCommand \u003d new DeleteAllCommand(new String[]{\"Test Show 1\", \"Test Show 2\", \"Intentionally missing show\"});"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Noted. These are the deleted entries:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"2020-05-05 Test Show 1\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"2020-05-06 Test Show 2\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Sorry, these shows were not found:\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Intentionally missing show\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 29,
      "CheeSengg": 12
    }
  },
  {
    "path": "src/test/java/Optix/commands/DeleteOneCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteOneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class DeleteOneCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteOneCommand testCommand1 \u003d new DeleteOneCommand(\"Test Show 1\", \"5/5/2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Noted. The show \u003cTest Show 1\u003e scheduled on \u003c5/5/2020\u003e has been removed.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteOneCommand testCommand2 \u003d new DeleteOneCommand(\"Non-existent show\", \"4/5/2020\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Unable to find show called \u003cNon-existent show\u003e scheduled on \u003c4/5/2020\u003e.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 28,
      "CheeSengg": 13
    }
  },
  {
    "path": "src/test/java/Optix/commands/EditCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.EditCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "class EditCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // add test shows"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        AddCommand addTestShow2 \u003d new AddCommand(\"Test Show 2\", \"7/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // postpone show 1 to a valid date (there is no show on desired date.)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        EditCommand testCommand \u003d new EditCommand(\"Test Show 1\", \"5/5/2020\", \"Test Show 3\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Show has been successfully updated to Test Show 3.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // postpone show 1 to an invalid date (there is a show on the desired date.)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        EditCommand testCommand2 \u003d new EditCommand(\"Test Show 1\", \"5/5/2020\", \"Test Show 3\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! The show you are finding does not exist!\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 43
    }
  },
  {
    "path": "src/test/java/Optix/commands/ListCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // testing for an empty show list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListCommand testCommand1 \u003d new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! There are no shows in the near future.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // testing for a filled show list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addShow1 \u003d new AddCommand(\"dummy test 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addShow2 \u003d new AddCommand(\"dummy test 2\", \"6/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListCommand testCommand2 \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Here are the list of shows:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"1. dummy test 1 (on: 2020-05-05)\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"2. dummy test 2 (on: 2020-05-06)\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 33,
      "CheeSengg": 14
    }
  },
  {
    "path": "src/test/java/Optix/commands/ListDateCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListDateCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "class ListDateCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // try looking for a show that does not exist"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ListDateCommand testCommand1 \u003d new ListDateCommand(\"december 2020\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! There are no shows on december 2020.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // insert dummy show"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        AddCommand insertDummyShow1 \u003d new AddCommand(\"Dummy Show\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        AddCommand insertDummyShow2 \u003d new AddCommand(\"Dummy Show\", \"6/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // attempt to view dummy show."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ListDateCommand testCommand2 \u003d new ListDateCommand(\"May 2020\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"These shows are showing on May 2020: \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Dummy Show on 2020-05-05\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. Dummy Show on 2020-05-06\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 48
    }
  },
  {
    "path": "src/test/java/Optix/commands/ListShowCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.ListShowCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ListShowCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // try looking for a show that does not exist"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListShowCommand testCommand1 \u003d new ListShowCommand(\"non existent show.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! The show cannot be found.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // insert dummy show"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow1 \u003d new AddCommand(\"Dummy Show\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow2 \u003d new AddCommand(\"Dummy Show\", \"6/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // attempt to view dummy show."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListShowCommand testCommand2 \u003d new ListShowCommand(\"Dummy Show\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"The show Dummy Show is showing on the following following dates: \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"1. 2020-05-05\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"2. 2020-05-06\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 36,
      "CheeSengg": 12
    }
  },
  {
    "path": "src/test/java/Optix/commands/PostponeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.PostponeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class PostponeCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add test shows"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow2 \u003d new AddCommand(\"Test Show 2\", \"7/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // postpone show 1 to a valid date (there is no show on desired date.)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        PostponeCommand testCommand \u003d new PostponeCommand(\"Test Show 1\", \"5/5/2020\", \"6/5/2020\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Test Show 1 has been postponed from 5/5/2020 to 6/5/2020.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // postpone show 1 to an invalid date (there is a show on the desired date.)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        PostponeCommand testCommand2 \u003d new PostponeCommand(\"Test Show 1\", \"6/5/2020\", \"7/5/2020\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! There already exists a show for 7/5/2020.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 32,
      "CheeSengg": 13
    }
  },
  {
    "path": "src/test/java/Optix/commands/SellSeatCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class SellSeatCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // sell an available seat"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand testCommand1 \u003d new SellSeatCommand(\"Test Show 1\", \"5/5/2020\", \"John\", \"A1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"[A1]\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"The total cost of the ticket is $30.00\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // sell a seat that is taken"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // SellSeatCommand testCommand2 \u003d new SellSeatCommand(\"Test Show 1\", \"5/5/2020\",\"A1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! All of the seats [A1] are unavailable\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        //sell a seat that does not exist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        SellSeatCommand testCommand2 \u003d new SellSeatCommand(\"Test Show 1\", \"5/5/2020\", \"John\", \"%1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected3 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! All of the seats [%1] are unavailable\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected3, ui.showCommandLine());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 33,
      "CheeSengg": 19
    }
  },
  {
    "path": "src/test/java/Optix/commands/ViewSeatsCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.seats.ViewSeatsCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ViewSeatsCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add a dummy show"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow \u003d new AddCommand(\"Dummy Show\", \"5/5/2020\", 2000, 20);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addDummyShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewSeatsCommand testCommand \u003d new ViewSeatsCommand(\"Dummy Show\", \"5/5/2020\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Here is the layout of the theatre for Dummy Show on 5/5/2020:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"                |STAGE|           \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"\\nTier 1 Seats: 20\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Tier 2 Seats: 20\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Tier 3 Seats: 20\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // view a show that does not exist"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewSeatsCommand viewNonExistentShow \u003d new ViewSeatsCommand(\"non existent show\", \"5/5/2020\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        viewNonExistentShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        + \"☹ OOPS!!! Sorry the show non existent show cannot be found.\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 41,
      "CheeSengg": 14
    }
  }
]
